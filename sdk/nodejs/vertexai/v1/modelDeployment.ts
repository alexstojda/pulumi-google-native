// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

export class ModelDeployment extends pulumi.CustomResource {
    /**
     * Get an existing ModelDeployment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ModelDeployment {
        return new ModelDeployment(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:vertexai/v1:ModelDeployment';

    /**
     * Returns true if the given object is an instance of ModelDeployment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ModelDeployment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ModelDeployment.__pulumiType;
    }

    /**
     * A description of resources that are dedicated to the DeployedModel, and that need a higher degree of manual configuration.
     */
    public readonly dedicatedResources!: pulumi.Output<outputs.vertexai.v1.ModelDeploymentDedicatedResources | undefined>;
    /**
     * The deployed ID of the model in the endpoint
     */
    public /*out*/ readonly deployedModelId!: pulumi.Output<string | undefined>;
    /**
     * The name of the endpoint to deploy to
     */
    public readonly endpoint!: pulumi.Output<string | undefined>;
    /**
     * The location of the endpoint
     */
    public readonly location!: pulumi.Output<string | undefined>;
    /**
     * The name of the model to deploy
     */
    public readonly model!: pulumi.Output<string | undefined>;
    /**
     * The project of the endpoint
     */
    public readonly project!: pulumi.Output<string | undefined>;

    /**
     * Create a ModelDeployment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ModelDeploymentArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.dedicatedResources === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dedicatedResources'");
            }
            if ((!args || args.endpoint === undefined) && !opts.urn) {
                throw new Error("Missing required property 'endpoint'");
            }
            if ((!args || args.model === undefined) && !opts.urn) {
                throw new Error("Missing required property 'model'");
            }
            resourceInputs["dedicatedResources"] = args ? args.dedicatedResources : undefined;
            resourceInputs["endpoint"] = args ? args.endpoint : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["model"] = args ? args.model : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["deployedModelId"] = undefined /*out*/;
        } else {
            resourceInputs["dedicatedResources"] = undefined /*out*/;
            resourceInputs["deployedModelId"] = undefined /*out*/;
            resourceInputs["endpoint"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["model"] = undefined /*out*/;
            resourceInputs["project"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["dedicatedResources", "deployedModelId", "endpoint", "location", "model", "project"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(ModelDeployment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a ModelDeployment resource.
 */
export interface ModelDeploymentArgs {
    /**
     * A description of resources that are dedicated to the DeployedModel, and that need a higher degree of manual configuration.
     */
    dedicatedResources: pulumi.Input<inputs.vertexai.v1.ModelDeploymentDedicatedResourcesArgs>;
    /**
     * The name of the endpoint to deploy to
     */
    endpoint: pulumi.Input<string>;
    /**
     * The location of the endpoint
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the model to deploy
     */
    model: pulumi.Input<string>;
    /**
     * The project of the endpoint
     */
    project?: pulumi.Input<string>;
}
