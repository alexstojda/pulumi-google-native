// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { EndpointArgs } from "./endpoint";
export type Endpoint = import("./endpoint").Endpoint;
export const Endpoint: typeof import("./endpoint").Endpoint = null as any;

export { EndpointTrafficSplitArgs } from "./endpointTrafficSplit";
export type EndpointTrafficSplit = import("./endpointTrafficSplit").EndpointTrafficSplit;
export const EndpointTrafficSplit: typeof import("./endpointTrafficSplit").EndpointTrafficSplit = null as any;

export { MetadataSchemaArgs } from "./metadataSchema";
export type MetadataSchema = import("./metadataSchema").MetadataSchema;
export const MetadataSchema: typeof import("./metadataSchema").MetadataSchema = null as any;

export { MetadataStoreArgs } from "./metadataStore";
export type MetadataStore = import("./metadataStore").MetadataStore;
export const MetadataStore: typeof import("./metadataStore").MetadataStore = null as any;

export { ModelArgs } from "./model";
export type Model = import("./model").Model;
export const Model: typeof import("./model").Model = null as any;

export { ModelDeploymentArgs } from "./modelDeployment";
export type ModelDeployment = import("./modelDeployment").ModelDeployment;
export const ModelDeployment: typeof import("./modelDeployment").ModelDeployment = null as any;

utilities.lazyLoad(exports, ["Endpoint"], () => require("./endpoint"));
utilities.lazyLoad(exports, ["EndpointTrafficSplit"], () => require("./endpointTrafficSplit"));
utilities.lazyLoad(exports, ["MetadataSchema"], () => require("./metadataSchema"));
utilities.lazyLoad(exports, ["MetadataStore"], () => require("./metadataStore"));
utilities.lazyLoad(exports, ["Model"], () => require("./model"));
utilities.lazyLoad(exports, ["ModelDeployment"], () => require("./modelDeployment"));

// Export enums:
export * from "../../types/enums/vertexai/v1";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "google-native:vertexai/v1:Endpoint":
                return new Endpoint(name, <any>undefined, { urn })
            case "google-native:vertexai/v1:EndpointTrafficSplit":
                return new EndpointTrafficSplit(name, <any>undefined, { urn })
            case "google-native:vertexai/v1:MetadataSchema":
                return new MetadataSchema(name, <any>undefined, { urn })
            case "google-native:vertexai/v1:MetadataStore":
                return new MetadataStore(name, <any>undefined, { urn })
            case "google-native:vertexai/v1:Model":
                return new Model(name, <any>undefined, { urn })
            case "google-native:vertexai/v1:ModelDeployment":
                return new ModelDeployment(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("google-native", "vertexai/v1", _module)
