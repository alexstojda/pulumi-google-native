// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type EndpointTrafficSplit struct {
	pulumi.CustomResourceState

	// The endpoint for the resource
	Endpoint pulumi.StringPtrOutput `pulumi:"endpoint"`
	// Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
	Etag pulumi.StringPtrOutput `pulumi:"etag"`
	// The location for the resource
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// The project for the resource
	Project pulumi.StringPtrOutput `pulumi:"project"`
	// A map from a DeployedModel's ID to the percentage of this Endpoint's traffic that should be forwarded to that DeployedModel. If a DeployedModel's ID is not listed in this map, then it receives no traffic. The traffic percentage values must add up to 100, or map must be empty if the Endpoint is to not accept any traffic at a moment.
	TrafficSplit EndpointTrafficSplitTrafficSplitArrayOutput `pulumi:"trafficSplit"`
}

// NewEndpointTrafficSplit registers a new resource with the given unique name, arguments, and options.
func NewEndpointTrafficSplit(ctx *pulumi.Context,
	name string, args *EndpointTrafficSplitArgs, opts ...pulumi.ResourceOption) (*EndpointTrafficSplit, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Endpoint == nil {
		return nil, errors.New("invalid value for required argument 'Endpoint'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	if args.TrafficSplit == nil {
		return nil, errors.New("invalid value for required argument 'TrafficSplit'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"endpoint",
		"etag",
		"location",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	var resource EndpointTrafficSplit
	err := ctx.RegisterResource("google-native:vertexai/v1:EndpointTrafficSplit", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEndpointTrafficSplit gets an existing EndpointTrafficSplit resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEndpointTrafficSplit(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EndpointTrafficSplitState, opts ...pulumi.ResourceOption) (*EndpointTrafficSplit, error) {
	var resource EndpointTrafficSplit
	err := ctx.ReadResource("google-native:vertexai/v1:EndpointTrafficSplit", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EndpointTrafficSplit resources.
type endpointTrafficSplitState struct {
}

type EndpointTrafficSplitState struct {
}

func (EndpointTrafficSplitState) ElementType() reflect.Type {
	return reflect.TypeOf((*endpointTrafficSplitState)(nil)).Elem()
}

type endpointTrafficSplitArgs struct {
	// The endpoint for the resource
	Endpoint string `pulumi:"endpoint"`
	// The location for the resource
	Location string `pulumi:"location"`
	// The project for the resource
	Project string `pulumi:"project"`
	// A map from a DeployedModel's ID to the percentage of this Endpoint's traffic that should be forwarded to that DeployedModel. If a DeployedModel's ID is not listed in this map, then it receives no traffic. The traffic percentage values must add up to 100, or map must be empty if the Endpoint is to not accept any traffic at a moment.
	TrafficSplit []EndpointTrafficSplitTrafficSplit `pulumi:"trafficSplit"`
}

// The set of arguments for constructing a EndpointTrafficSplit resource.
type EndpointTrafficSplitArgs struct {
	// The endpoint for the resource
	Endpoint pulumi.StringInput
	// The location for the resource
	Location pulumi.StringInput
	// The project for the resource
	Project pulumi.StringInput
	// A map from a DeployedModel's ID to the percentage of this Endpoint's traffic that should be forwarded to that DeployedModel. If a DeployedModel's ID is not listed in this map, then it receives no traffic. The traffic percentage values must add up to 100, or map must be empty if the Endpoint is to not accept any traffic at a moment.
	TrafficSplit EndpointTrafficSplitTrafficSplitArrayInput
}

func (EndpointTrafficSplitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*endpointTrafficSplitArgs)(nil)).Elem()
}

type EndpointTrafficSplitInput interface {
	pulumi.Input

	ToEndpointTrafficSplitOutput() EndpointTrafficSplitOutput
	ToEndpointTrafficSplitOutputWithContext(ctx context.Context) EndpointTrafficSplitOutput
}

func (*EndpointTrafficSplit) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointTrafficSplit)(nil)).Elem()
}

func (i *EndpointTrafficSplit) ToEndpointTrafficSplitOutput() EndpointTrafficSplitOutput {
	return i.ToEndpointTrafficSplitOutputWithContext(context.Background())
}

func (i *EndpointTrafficSplit) ToEndpointTrafficSplitOutputWithContext(ctx context.Context) EndpointTrafficSplitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointTrafficSplitOutput)
}

type EndpointTrafficSplitOutput struct{ *pulumi.OutputState }

func (EndpointTrafficSplitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointTrafficSplit)(nil)).Elem()
}

func (o EndpointTrafficSplitOutput) ToEndpointTrafficSplitOutput() EndpointTrafficSplitOutput {
	return o
}

func (o EndpointTrafficSplitOutput) ToEndpointTrafficSplitOutputWithContext(ctx context.Context) EndpointTrafficSplitOutput {
	return o
}

// The endpoint for the resource
func (o EndpointTrafficSplitOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointTrafficSplit) pulumi.StringPtrOutput { return v.Endpoint }).(pulumi.StringPtrOutput)
}

// Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
func (o EndpointTrafficSplitOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointTrafficSplit) pulumi.StringPtrOutput { return v.Etag }).(pulumi.StringPtrOutput)
}

// The location for the resource
func (o EndpointTrafficSplitOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointTrafficSplit) pulumi.StringPtrOutput { return v.Location }).(pulumi.StringPtrOutput)
}

// The project for the resource
func (o EndpointTrafficSplitOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointTrafficSplit) pulumi.StringPtrOutput { return v.Project }).(pulumi.StringPtrOutput)
}

// A map from a DeployedModel's ID to the percentage of this Endpoint's traffic that should be forwarded to that DeployedModel. If a DeployedModel's ID is not listed in this map, then it receives no traffic. The traffic percentage values must add up to 100, or map must be empty if the Endpoint is to not accept any traffic at a moment.
func (o EndpointTrafficSplitOutput) TrafficSplit() EndpointTrafficSplitTrafficSplitArrayOutput {
	return o.ApplyT(func(v *EndpointTrafficSplit) EndpointTrafficSplitTrafficSplitArrayOutput { return v.TrafficSplit }).(EndpointTrafficSplitTrafficSplitArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointTrafficSplitInput)(nil)).Elem(), &EndpointTrafficSplit{})
	pulumi.RegisterOutputType(EndpointTrafficSplitOutput{})
}
