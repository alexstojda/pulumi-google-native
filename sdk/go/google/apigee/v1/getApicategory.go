// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets a category on the portal.
func LookupApicategory(ctx *pulumi.Context, args *LookupApicategoryArgs, opts ...pulumi.InvokeOption) (*LookupApicategoryResult, error) {
	var rv LookupApicategoryResult
	err := ctx.Invoke("google-native:apigee/v1:getApicategory", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupApicategoryArgs struct {
	ApicategoryId  string `pulumi:"apicategoryId"`
	OrganizationId string `pulumi:"organizationId"`
	SiteId         string `pulumi:"siteId"`
}

type LookupApicategoryResult struct {
	// Details of category.
	Data GoogleCloudApigeeV1ApiCategoryDataResponse `pulumi:"data"`
	// ID that can be used to find errors in the log files.
	ErrorCode string `pulumi:"errorCode"`
	// Description of the operation.
	Message string `pulumi:"message"`
	// ID that can be used to find request details in the log files.
	RequestId string `pulumi:"requestId"`
	// Status of the operation.
	Status string `pulumi:"status"`
}

func LookupApicategoryOutput(ctx *pulumi.Context, args LookupApicategoryOutputArgs, opts ...pulumi.InvokeOption) LookupApicategoryResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupApicategoryResult, error) {
			args := v.(LookupApicategoryArgs)
			r, err := LookupApicategory(ctx, &args, opts...)
			var s LookupApicategoryResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupApicategoryResultOutput)
}

type LookupApicategoryOutputArgs struct {
	ApicategoryId  pulumi.StringInput `pulumi:"apicategoryId"`
	OrganizationId pulumi.StringInput `pulumi:"organizationId"`
	SiteId         pulumi.StringInput `pulumi:"siteId"`
}

func (LookupApicategoryOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApicategoryArgs)(nil)).Elem()
}

type LookupApicategoryResultOutput struct{ *pulumi.OutputState }

func (LookupApicategoryResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApicategoryResult)(nil)).Elem()
}

func (o LookupApicategoryResultOutput) ToLookupApicategoryResultOutput() LookupApicategoryResultOutput {
	return o
}

func (o LookupApicategoryResultOutput) ToLookupApicategoryResultOutputWithContext(ctx context.Context) LookupApicategoryResultOutput {
	return o
}

// Details of category.
func (o LookupApicategoryResultOutput) Data() GoogleCloudApigeeV1ApiCategoryDataResponseOutput {
	return o.ApplyT(func(v LookupApicategoryResult) GoogleCloudApigeeV1ApiCategoryDataResponse { return v.Data }).(GoogleCloudApigeeV1ApiCategoryDataResponseOutput)
}

// ID that can be used to find errors in the log files.
func (o LookupApicategoryResultOutput) ErrorCode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApicategoryResult) string { return v.ErrorCode }).(pulumi.StringOutput)
}

// Description of the operation.
func (o LookupApicategoryResultOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApicategoryResult) string { return v.Message }).(pulumi.StringOutput)
}

// ID that can be used to find request details in the log files.
func (o LookupApicategoryResultOutput) RequestId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApicategoryResult) string { return v.RequestId }).(pulumi.StringOutput)
}

// Status of the operation.
func (o LookupApicategoryResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApicategoryResult) string { return v.Status }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupApicategoryResultOutput{})
}
