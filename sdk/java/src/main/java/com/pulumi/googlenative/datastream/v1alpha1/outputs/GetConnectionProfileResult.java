// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.datastream.v1alpha1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.datastream.v1alpha1.outputs.ForwardSshTunnelConnectivityResponse;
import com.pulumi.googlenative.datastream.v1alpha1.outputs.GcsProfileResponse;
import com.pulumi.googlenative.datastream.v1alpha1.outputs.MysqlProfileResponse;
import com.pulumi.googlenative.datastream.v1alpha1.outputs.NoConnectivitySettingsResponse;
import com.pulumi.googlenative.datastream.v1alpha1.outputs.OracleProfileResponse;
import com.pulumi.googlenative.datastream.v1alpha1.outputs.PrivateConnectivityResponse;
import com.pulumi.googlenative.datastream.v1alpha1.outputs.StaticServiceIpConnectivityResponse;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetConnectionProfileResult {
    /**
     * @return The create time of the resource.
     * 
     */
    private String createTime;
    /**
     * @return Display name.
     * 
     */
    private String displayName;
    /**
     * @return Forward SSH tunnel connectivity.
     * 
     */
    private ForwardSshTunnelConnectivityResponse forwardSshConnectivity;
    /**
     * @return Cloud Storage ConnectionProfile configuration.
     * 
     */
    private GcsProfileResponse gcsProfile;
    /**
     * @return Labels.
     * 
     */
    private Map<String,String> labels;
    /**
     * @return MySQL ConnectionProfile configuration.
     * 
     */
    private MysqlProfileResponse mysqlProfile;
    /**
     * @return The resource&#39;s name.
     * 
     */
    private String name;
    /**
     * @return No connectivity option chosen.
     * 
     */
    private NoConnectivitySettingsResponse noConnectivity;
    /**
     * @return Oracle ConnectionProfile configuration.
     * 
     */
    private OracleProfileResponse oracleProfile;
    /**
     * @return Private connectivity.
     * 
     */
    private PrivateConnectivityResponse privateConnectivity;
    /**
     * @return Static Service IP connectivity.
     * 
     */
    private StaticServiceIpConnectivityResponse staticServiceIpConnectivity;
    /**
     * @return The update time of the resource.
     * 
     */
    private String updateTime;

    private GetConnectionProfileResult() {}
    /**
     * @return The create time of the resource.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return Display name.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Forward SSH tunnel connectivity.
     * 
     */
    public ForwardSshTunnelConnectivityResponse forwardSshConnectivity() {
        return this.forwardSshConnectivity;
    }
    /**
     * @return Cloud Storage ConnectionProfile configuration.
     * 
     */
    public GcsProfileResponse gcsProfile() {
        return this.gcsProfile;
    }
    /**
     * @return Labels.
     * 
     */
    public Map<String,String> labels() {
        return this.labels;
    }
    /**
     * @return MySQL ConnectionProfile configuration.
     * 
     */
    public MysqlProfileResponse mysqlProfile() {
        return this.mysqlProfile;
    }
    /**
     * @return The resource&#39;s name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return No connectivity option chosen.
     * 
     */
    public NoConnectivitySettingsResponse noConnectivity() {
        return this.noConnectivity;
    }
    /**
     * @return Oracle ConnectionProfile configuration.
     * 
     */
    public OracleProfileResponse oracleProfile() {
        return this.oracleProfile;
    }
    /**
     * @return Private connectivity.
     * 
     */
    public PrivateConnectivityResponse privateConnectivity() {
        return this.privateConnectivity;
    }
    /**
     * @return Static Service IP connectivity.
     * 
     */
    public StaticServiceIpConnectivityResponse staticServiceIpConnectivity() {
        return this.staticServiceIpConnectivity;
    }
    /**
     * @return The update time of the resource.
     * 
     */
    public String updateTime() {
        return this.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConnectionProfileResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String createTime;
        private String displayName;
        private ForwardSshTunnelConnectivityResponse forwardSshConnectivity;
        private GcsProfileResponse gcsProfile;
        private Map<String,String> labels;
        private MysqlProfileResponse mysqlProfile;
        private String name;
        private NoConnectivitySettingsResponse noConnectivity;
        private OracleProfileResponse oracleProfile;
        private PrivateConnectivityResponse privateConnectivity;
        private StaticServiceIpConnectivityResponse staticServiceIpConnectivity;
        private String updateTime;
        public Builder() {}
        public Builder(GetConnectionProfileResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.displayName = defaults.displayName;
    	      this.forwardSshConnectivity = defaults.forwardSshConnectivity;
    	      this.gcsProfile = defaults.gcsProfile;
    	      this.labels = defaults.labels;
    	      this.mysqlProfile = defaults.mysqlProfile;
    	      this.name = defaults.name;
    	      this.noConnectivity = defaults.noConnectivity;
    	      this.oracleProfile = defaults.oracleProfile;
    	      this.privateConnectivity = defaults.privateConnectivity;
    	      this.staticServiceIpConnectivity = defaults.staticServiceIpConnectivity;
    	      this.updateTime = defaults.updateTime;
        }

        @CustomType.Setter
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder forwardSshConnectivity(ForwardSshTunnelConnectivityResponse forwardSshConnectivity) {
            this.forwardSshConnectivity = Objects.requireNonNull(forwardSshConnectivity);
            return this;
        }
        @CustomType.Setter
        public Builder gcsProfile(GcsProfileResponse gcsProfile) {
            this.gcsProfile = Objects.requireNonNull(gcsProfile);
            return this;
        }
        @CustomType.Setter
        public Builder labels(Map<String,String> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }
        @CustomType.Setter
        public Builder mysqlProfile(MysqlProfileResponse mysqlProfile) {
            this.mysqlProfile = Objects.requireNonNull(mysqlProfile);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder noConnectivity(NoConnectivitySettingsResponse noConnectivity) {
            this.noConnectivity = Objects.requireNonNull(noConnectivity);
            return this;
        }
        @CustomType.Setter
        public Builder oracleProfile(OracleProfileResponse oracleProfile) {
            this.oracleProfile = Objects.requireNonNull(oracleProfile);
            return this;
        }
        @CustomType.Setter
        public Builder privateConnectivity(PrivateConnectivityResponse privateConnectivity) {
            this.privateConnectivity = Objects.requireNonNull(privateConnectivity);
            return this;
        }
        @CustomType.Setter
        public Builder staticServiceIpConnectivity(StaticServiceIpConnectivityResponse staticServiceIpConnectivity) {
            this.staticServiceIpConnectivity = Objects.requireNonNull(staticServiceIpConnectivity);
            return this;
        }
        @CustomType.Setter
        public Builder updateTime(String updateTime) {
            this.updateTime = Objects.requireNonNull(updateTime);
            return this;
        }
        public GetConnectionProfileResult build() {
            final var o = new GetConnectionProfileResult();
            o.createTime = createTime;
            o.displayName = displayName;
            o.forwardSshConnectivity = forwardSshConnectivity;
            o.gcsProfile = gcsProfile;
            o.labels = labels;
            o.mysqlProfile = mysqlProfile;
            o.name = name;
            o.noConnectivity = noConnectivity;
            o.oracleProfile = oracleProfile;
            o.privateConnectivity = privateConnectivity;
            o.staticServiceIpConnectivity = staticServiceIpConnectivity;
            o.updateTime = updateTime;
            return o;
        }
    }
}
