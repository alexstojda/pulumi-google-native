// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.containeranalysis.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.util.Objects;

@CustomType
public final class CompletenessResponse {
    /**
     * @return If true, the builder claims that recipe.arguments is complete, meaning that all external inputs are properly captured in the recipe.
     * 
     */
    private Boolean arguments;
    /**
     * @return If true, the builder claims that recipe.environment is claimed to be complete.
     * 
     */
    private Boolean environment;
    /**
     * @return If true, the builder claims that materials are complete, usually through some controls to prevent network access. Sometimes called &#34;hermetic&#34;.
     * 
     */
    private Boolean materials;

    private CompletenessResponse() {}
    /**
     * @return If true, the builder claims that recipe.arguments is complete, meaning that all external inputs are properly captured in the recipe.
     * 
     */
    public Boolean arguments() {
        return this.arguments;
    }
    /**
     * @return If true, the builder claims that recipe.environment is claimed to be complete.
     * 
     */
    public Boolean environment() {
        return this.environment;
    }
    /**
     * @return If true, the builder claims that materials are complete, usually through some controls to prevent network access. Sometimes called &#34;hermetic&#34;.
     * 
     */
    public Boolean materials() {
        return this.materials;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CompletenessResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean arguments;
        private Boolean environment;
        private Boolean materials;
        public Builder() {}
        public Builder(CompletenessResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arguments = defaults.arguments;
    	      this.environment = defaults.environment;
    	      this.materials = defaults.materials;
        }

        @CustomType.Setter
        public Builder arguments(Boolean arguments) {
            this.arguments = Objects.requireNonNull(arguments);
            return this;
        }
        @CustomType.Setter
        public Builder environment(Boolean environment) {
            this.environment = Objects.requireNonNull(environment);
            return this;
        }
        @CustomType.Setter
        public Builder materials(Boolean materials) {
            this.materials = Objects.requireNonNull(materials);
            return this;
        }
        public CompletenessResponse build() {
            final var o = new CompletenessResponse();
            o.arguments = arguments;
            o.environment = environment;
            o.materials = materials;
            return o;
        }
    }
}
