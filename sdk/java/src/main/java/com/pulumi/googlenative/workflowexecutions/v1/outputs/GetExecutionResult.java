// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.workflowexecutions.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.workflowexecutions.v1.outputs.ErrorResponse;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetExecutionResult {
    /**
     * @return Input parameters of the execution represented as a JSON string. The size limit is 32KB. *Note*: If you are using the REST API directly to run your workflow, you must escape any JSON string value of `argument`. Example: `&#39;{&#34;argument&#34;:&#34;{\&#34;firstName\&#34;:\&#34;FIRST\&#34;,\&#34;lastName\&#34;:\&#34;LAST\&#34;}&#34;}&#39;`
     * 
     */
    private String argument;
    /**
     * @return The call logging level associated to this execution.
     * 
     */
    private String callLogLevel;
    /**
     * @return Marks the end of execution, successful or not.
     * 
     */
    private String endTime;
    /**
     * @return The error which caused the execution to finish prematurely. The value is only present if the execution&#39;s state is `FAILED` or `CANCELLED`.
     * 
     */
    private ErrorResponse error;
    /**
     * @return The resource name of the execution. Format: projects/{project}/locations/{location}/workflows/{workflow}/executions/{execution}
     * 
     */
    private String name;
    /**
     * @return Output of the execution represented as a JSON string. The value can only be present if the execution&#39;s state is `SUCCEEDED`.
     * 
     */
    private String result;
    /**
     * @return Marks the beginning of execution.
     * 
     */
    private String startTime;
    /**
     * @return Current state of the execution.
     * 
     */
    private String state;
    /**
     * @return Revision of the workflow this execution is using.
     * 
     */
    private String workflowRevisionId;

    private GetExecutionResult() {}
    /**
     * @return Input parameters of the execution represented as a JSON string. The size limit is 32KB. *Note*: If you are using the REST API directly to run your workflow, you must escape any JSON string value of `argument`. Example: `&#39;{&#34;argument&#34;:&#34;{\&#34;firstName\&#34;:\&#34;FIRST\&#34;,\&#34;lastName\&#34;:\&#34;LAST\&#34;}&#34;}&#39;`
     * 
     */
    public String argument() {
        return this.argument;
    }
    /**
     * @return The call logging level associated to this execution.
     * 
     */
    public String callLogLevel() {
        return this.callLogLevel;
    }
    /**
     * @return Marks the end of execution, successful or not.
     * 
     */
    public String endTime() {
        return this.endTime;
    }
    /**
     * @return The error which caused the execution to finish prematurely. The value is only present if the execution&#39;s state is `FAILED` or `CANCELLED`.
     * 
     */
    public ErrorResponse error() {
        return this.error;
    }
    /**
     * @return The resource name of the execution. Format: projects/{project}/locations/{location}/workflows/{workflow}/executions/{execution}
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Output of the execution represented as a JSON string. The value can only be present if the execution&#39;s state is `SUCCEEDED`.
     * 
     */
    public String result() {
        return this.result;
    }
    /**
     * @return Marks the beginning of execution.
     * 
     */
    public String startTime() {
        return this.startTime;
    }
    /**
     * @return Current state of the execution.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Revision of the workflow this execution is using.
     * 
     */
    public String workflowRevisionId() {
        return this.workflowRevisionId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetExecutionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String argument;
        private String callLogLevel;
        private String endTime;
        private ErrorResponse error;
        private String name;
        private String result;
        private String startTime;
        private String state;
        private String workflowRevisionId;
        public Builder() {}
        public Builder(GetExecutionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.argument = defaults.argument;
    	      this.callLogLevel = defaults.callLogLevel;
    	      this.endTime = defaults.endTime;
    	      this.error = defaults.error;
    	      this.name = defaults.name;
    	      this.result = defaults.result;
    	      this.startTime = defaults.startTime;
    	      this.state = defaults.state;
    	      this.workflowRevisionId = defaults.workflowRevisionId;
        }

        @CustomType.Setter
        public Builder argument(String argument) {
            this.argument = Objects.requireNonNull(argument);
            return this;
        }
        @CustomType.Setter
        public Builder callLogLevel(String callLogLevel) {
            this.callLogLevel = Objects.requireNonNull(callLogLevel);
            return this;
        }
        @CustomType.Setter
        public Builder endTime(String endTime) {
            this.endTime = Objects.requireNonNull(endTime);
            return this;
        }
        @CustomType.Setter
        public Builder error(ErrorResponse error) {
            this.error = Objects.requireNonNull(error);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder result(String result) {
            this.result = Objects.requireNonNull(result);
            return this;
        }
        @CustomType.Setter
        public Builder startTime(String startTime) {
            this.startTime = Objects.requireNonNull(startTime);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder workflowRevisionId(String workflowRevisionId) {
            this.workflowRevisionId = Objects.requireNonNull(workflowRevisionId);
            return this;
        }
        public GetExecutionResult build() {
            final var o = new GetExecutionResult();
            o.argument = argument;
            o.callLogLevel = callLogLevel;
            o.endTime = endTime;
            o.error = error;
            o.name = name;
            o.result = result;
            o.startTime = startTime;
            o.state = state;
            o.workflowRevisionId = workflowRevisionId;
            return o;
        }
    }
}
