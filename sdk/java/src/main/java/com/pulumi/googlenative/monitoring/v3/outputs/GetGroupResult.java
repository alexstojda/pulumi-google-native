// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.monitoring.v3.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetGroupResult {
    /**
     * @return A user-assigned name for this group, used only for display purposes.
     * 
     */
    private String displayName;
    /**
     * @return The filter used to determine which monitored resources belong to this group.
     * 
     */
    private String filter;
    /**
     * @return If true, the members of this group are considered to be a cluster. The system can perform additional analysis on groups that are clusters.
     * 
     */
    private Boolean isCluster;
    /**
     * @return The name of this group. The format is: projects/[PROJECT_ID_OR_NUMBER]/groups/[GROUP_ID] When creating a group, this field is ignored and a new name is created consisting of the project specified in the call to CreateGroup and a unique [GROUP_ID] that is generated automatically.
     * 
     */
    private String name;
    /**
     * @return The name of the group&#39;s parent, if it has one. The format is: projects/[PROJECT_ID_OR_NUMBER]/groups/[GROUP_ID] For groups with no parent, parent_name is the empty string, &#34;&#34;.
     * 
     */
    private String parentName;

    private GetGroupResult() {}
    /**
     * @return A user-assigned name for this group, used only for display purposes.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The filter used to determine which monitored resources belong to this group.
     * 
     */
    public String filter() {
        return this.filter;
    }
    /**
     * @return If true, the members of this group are considered to be a cluster. The system can perform additional analysis on groups that are clusters.
     * 
     */
    public Boolean isCluster() {
        return this.isCluster;
    }
    /**
     * @return The name of this group. The format is: projects/[PROJECT_ID_OR_NUMBER]/groups/[GROUP_ID] When creating a group, this field is ignored and a new name is created consisting of the project specified in the call to CreateGroup and a unique [GROUP_ID] that is generated automatically.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The name of the group&#39;s parent, if it has one. The format is: projects/[PROJECT_ID_OR_NUMBER]/groups/[GROUP_ID] For groups with no parent, parent_name is the empty string, &#34;&#34;.
     * 
     */
    public String parentName() {
        return this.parentName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGroupResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String displayName;
        private String filter;
        private Boolean isCluster;
        private String name;
        private String parentName;
        public Builder() {}
        public Builder(GetGroupResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.displayName = defaults.displayName;
    	      this.filter = defaults.filter;
    	      this.isCluster = defaults.isCluster;
    	      this.name = defaults.name;
    	      this.parentName = defaults.parentName;
        }

        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder filter(String filter) {
            this.filter = Objects.requireNonNull(filter);
            return this;
        }
        @CustomType.Setter
        public Builder isCluster(Boolean isCluster) {
            this.isCluster = Objects.requireNonNull(isCluster);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder parentName(String parentName) {
            this.parentName = Objects.requireNonNull(parentName);
            return this;
        }
        public GetGroupResult build() {
            final var o = new GetGroupResult();
            o.displayName = displayName;
            o.filter = filter;
            o.isCluster = isCluster;
            o.name = name;
            o.parentName = parentName;
            return o;
        }
    }
}
