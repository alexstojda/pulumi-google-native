// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.secretmanager.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.secretmanager.v1.outputs.CustomerManagedEncryptionResponse;
import java.util.Objects;

@CustomType
public final class AutomaticResponse {
    /**
     * @return Optional. The customer-managed encryption configuration of the Secret. If no configuration is provided, Google-managed default encryption is used. Updates to the Secret encryption configuration only apply to SecretVersions added afterwards. They do not apply retroactively to existing SecretVersions.
     * 
     */
    private CustomerManagedEncryptionResponse customerManagedEncryption;

    private AutomaticResponse() {}
    /**
     * @return Optional. The customer-managed encryption configuration of the Secret. If no configuration is provided, Google-managed default encryption is used. Updates to the Secret encryption configuration only apply to SecretVersions added afterwards. They do not apply retroactively to existing SecretVersions.
     * 
     */
    public CustomerManagedEncryptionResponse customerManagedEncryption() {
        return this.customerManagedEncryption;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AutomaticResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private CustomerManagedEncryptionResponse customerManagedEncryption;
        public Builder() {}
        public Builder(AutomaticResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customerManagedEncryption = defaults.customerManagedEncryption;
        }

        @CustomType.Setter
        public Builder customerManagedEncryption(CustomerManagedEncryptionResponse customerManagedEncryption) {
            this.customerManagedEncryption = Objects.requireNonNull(customerManagedEncryption);
            return this;
        }
        public AutomaticResponse build() {
            final var o = new AutomaticResponse();
            o.customerManagedEncryption = customerManagedEncryption;
            return o;
        }
    }
}
