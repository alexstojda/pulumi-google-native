// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.osconfig.v1beta.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.osconfig.v1beta.outputs.AptSettingsResponse;
import com.pulumi.googlenative.osconfig.v1beta.outputs.ExecStepResponse;
import com.pulumi.googlenative.osconfig.v1beta.outputs.GooSettingsResponse;
import com.pulumi.googlenative.osconfig.v1beta.outputs.WindowsUpdateSettingsResponse;
import com.pulumi.googlenative.osconfig.v1beta.outputs.YumSettingsResponse;
import com.pulumi.googlenative.osconfig.v1beta.outputs.ZypperSettingsResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class PatchConfigResponse {
    /**
     * @return Apt update settings. Use this setting to override the default `apt` patch rules.
     * 
     */
    private AptSettingsResponse apt;
    /**
     * @return Goo update settings. Use this setting to override the default `goo` patch rules.
     * 
     */
    private GooSettingsResponse goo;
    /**
     * @return Allows the patch job to run on Managed instance groups (MIGs).
     * 
     */
    private Boolean migInstancesAllowed;
    /**
     * @return The `ExecStep` to run after the patch update.
     * 
     */
    private ExecStepResponse postStep;
    /**
     * @return The `ExecStep` to run before the patch update.
     * 
     */
    private ExecStepResponse preStep;
    /**
     * @return Post-patch reboot settings.
     * 
     */
    private String rebootConfig;
    /**
     * @return Windows update settings. Use this override the default windows patch rules.
     * 
     */
    private WindowsUpdateSettingsResponse windowsUpdate;
    /**
     * @return Yum update settings. Use this setting to override the default `yum` patch rules.
     * 
     */
    private YumSettingsResponse yum;
    /**
     * @return Zypper update settings. Use this setting to override the default `zypper` patch rules.
     * 
     */
    private ZypperSettingsResponse zypper;

    private PatchConfigResponse() {}
    /**
     * @return Apt update settings. Use this setting to override the default `apt` patch rules.
     * 
     */
    public AptSettingsResponse apt() {
        return this.apt;
    }
    /**
     * @return Goo update settings. Use this setting to override the default `goo` patch rules.
     * 
     */
    public GooSettingsResponse goo() {
        return this.goo;
    }
    /**
     * @return Allows the patch job to run on Managed instance groups (MIGs).
     * 
     */
    public Boolean migInstancesAllowed() {
        return this.migInstancesAllowed;
    }
    /**
     * @return The `ExecStep` to run after the patch update.
     * 
     */
    public ExecStepResponse postStep() {
        return this.postStep;
    }
    /**
     * @return The `ExecStep` to run before the patch update.
     * 
     */
    public ExecStepResponse preStep() {
        return this.preStep;
    }
    /**
     * @return Post-patch reboot settings.
     * 
     */
    public String rebootConfig() {
        return this.rebootConfig;
    }
    /**
     * @return Windows update settings. Use this override the default windows patch rules.
     * 
     */
    public WindowsUpdateSettingsResponse windowsUpdate() {
        return this.windowsUpdate;
    }
    /**
     * @return Yum update settings. Use this setting to override the default `yum` patch rules.
     * 
     */
    public YumSettingsResponse yum() {
        return this.yum;
    }
    /**
     * @return Zypper update settings. Use this setting to override the default `zypper` patch rules.
     * 
     */
    public ZypperSettingsResponse zypper() {
        return this.zypper;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PatchConfigResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private AptSettingsResponse apt;
        private GooSettingsResponse goo;
        private Boolean migInstancesAllowed;
        private ExecStepResponse postStep;
        private ExecStepResponse preStep;
        private String rebootConfig;
        private WindowsUpdateSettingsResponse windowsUpdate;
        private YumSettingsResponse yum;
        private ZypperSettingsResponse zypper;
        public Builder() {}
        public Builder(PatchConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apt = defaults.apt;
    	      this.goo = defaults.goo;
    	      this.migInstancesAllowed = defaults.migInstancesAllowed;
    	      this.postStep = defaults.postStep;
    	      this.preStep = defaults.preStep;
    	      this.rebootConfig = defaults.rebootConfig;
    	      this.windowsUpdate = defaults.windowsUpdate;
    	      this.yum = defaults.yum;
    	      this.zypper = defaults.zypper;
        }

        @CustomType.Setter
        public Builder apt(AptSettingsResponse apt) {
            this.apt = Objects.requireNonNull(apt);
            return this;
        }
        @CustomType.Setter
        public Builder goo(GooSettingsResponse goo) {
            this.goo = Objects.requireNonNull(goo);
            return this;
        }
        @CustomType.Setter
        public Builder migInstancesAllowed(Boolean migInstancesAllowed) {
            this.migInstancesAllowed = Objects.requireNonNull(migInstancesAllowed);
            return this;
        }
        @CustomType.Setter
        public Builder postStep(ExecStepResponse postStep) {
            this.postStep = Objects.requireNonNull(postStep);
            return this;
        }
        @CustomType.Setter
        public Builder preStep(ExecStepResponse preStep) {
            this.preStep = Objects.requireNonNull(preStep);
            return this;
        }
        @CustomType.Setter
        public Builder rebootConfig(String rebootConfig) {
            this.rebootConfig = Objects.requireNonNull(rebootConfig);
            return this;
        }
        @CustomType.Setter
        public Builder windowsUpdate(WindowsUpdateSettingsResponse windowsUpdate) {
            this.windowsUpdate = Objects.requireNonNull(windowsUpdate);
            return this;
        }
        @CustomType.Setter
        public Builder yum(YumSettingsResponse yum) {
            this.yum = Objects.requireNonNull(yum);
            return this;
        }
        @CustomType.Setter
        public Builder zypper(ZypperSettingsResponse zypper) {
            this.zypper = Objects.requireNonNull(zypper);
            return this;
        }
        public PatchConfigResponse build() {
            final var o = new PatchConfigResponse();
            o.apt = apt;
            o.goo = goo;
            o.migInstancesAllowed = migInstancesAllowed;
            o.postStep = postStep;
            o.preStep = preStep;
            o.rebootConfig = rebootConfig;
            o.windowsUpdate = windowsUpdate;
            o.yum = yum;
            o.zypper = zypper;
            return o;
        }
    }
}
