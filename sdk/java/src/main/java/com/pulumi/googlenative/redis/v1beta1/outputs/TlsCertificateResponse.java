// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.redis.v1beta1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class TlsCertificateResponse {
    /**
     * @return PEM representation.
     * 
     */
    private String cert;
    /**
     * @return The time when the certificate was created in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2020-05-18T00:00:00.094Z`.
     * 
     */
    private String createTime;
    /**
     * @return The time when the certificate expires in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2020-05-18T00:00:00.094Z`.
     * 
     */
    private String expireTime;
    /**
     * @return Serial number, as extracted from the certificate.
     * 
     */
    private String serialNumber;
    /**
     * @return Sha1 Fingerprint of the certificate.
     * 
     */
    private String sha1Fingerprint;

    private TlsCertificateResponse() {}
    /**
     * @return PEM representation.
     * 
     */
    public String cert() {
        return this.cert;
    }
    /**
     * @return The time when the certificate was created in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2020-05-18T00:00:00.094Z`.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return The time when the certificate expires in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2020-05-18T00:00:00.094Z`.
     * 
     */
    public String expireTime() {
        return this.expireTime;
    }
    /**
     * @return Serial number, as extracted from the certificate.
     * 
     */
    public String serialNumber() {
        return this.serialNumber;
    }
    /**
     * @return Sha1 Fingerprint of the certificate.
     * 
     */
    public String sha1Fingerprint() {
        return this.sha1Fingerprint;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TlsCertificateResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String cert;
        private String createTime;
        private String expireTime;
        private String serialNumber;
        private String sha1Fingerprint;
        public Builder() {}
        public Builder(TlsCertificateResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cert = defaults.cert;
    	      this.createTime = defaults.createTime;
    	      this.expireTime = defaults.expireTime;
    	      this.serialNumber = defaults.serialNumber;
    	      this.sha1Fingerprint = defaults.sha1Fingerprint;
        }

        @CustomType.Setter
        public Builder cert(String cert) {
            this.cert = Objects.requireNonNull(cert);
            return this;
        }
        @CustomType.Setter
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        @CustomType.Setter
        public Builder expireTime(String expireTime) {
            this.expireTime = Objects.requireNonNull(expireTime);
            return this;
        }
        @CustomType.Setter
        public Builder serialNumber(String serialNumber) {
            this.serialNumber = Objects.requireNonNull(serialNumber);
            return this;
        }
        @CustomType.Setter
        public Builder sha1Fingerprint(String sha1Fingerprint) {
            this.sha1Fingerprint = Objects.requireNonNull(sha1Fingerprint);
            return this;
        }
        public TlsCertificateResponse build() {
            final var o = new TlsCertificateResponse();
            o.cert = cert;
            o.createTime = createTime;
            o.expireTime = expireTime;
            o.serialNumber = serialNumber;
            o.sha1Fingerprint = sha1Fingerprint;
            return o;
        }
    }
}
