// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.testing.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.testing.v1.outputs.AndroidDeviceResponse;
import com.pulumi.googlenative.testing.v1.outputs.IosDeviceResponse;
import java.util.Objects;

@CustomType
public final class EnvironmentResponse {
    /**
     * @return An Android device which must be used with an Android test.
     * 
     */
    private AndroidDeviceResponse androidDevice;
    /**
     * @return An iOS device which must be used with an iOS test.
     * 
     */
    private IosDeviceResponse iosDevice;

    private EnvironmentResponse() {}
    /**
     * @return An Android device which must be used with an Android test.
     * 
     */
    public AndroidDeviceResponse androidDevice() {
        return this.androidDevice;
    }
    /**
     * @return An iOS device which must be used with an iOS test.
     * 
     */
    public IosDeviceResponse iosDevice() {
        return this.iosDevice;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EnvironmentResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private AndroidDeviceResponse androidDevice;
        private IosDeviceResponse iosDevice;
        public Builder() {}
        public Builder(EnvironmentResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.androidDevice = defaults.androidDevice;
    	      this.iosDevice = defaults.iosDevice;
        }

        @CustomType.Setter
        public Builder androidDevice(AndroidDeviceResponse androidDevice) {
            this.androidDevice = Objects.requireNonNull(androidDevice);
            return this;
        }
        @CustomType.Setter
        public Builder iosDevice(IosDeviceResponse iosDevice) {
            this.iosDevice = Objects.requireNonNull(iosDevice);
            return this;
        }
        public EnvironmentResponse build() {
            final var o = new EnvironmentResponse();
            o.androidDevice = androidDevice;
            o.iosDevice = iosDevice;
            return o;
        }
    }
}
