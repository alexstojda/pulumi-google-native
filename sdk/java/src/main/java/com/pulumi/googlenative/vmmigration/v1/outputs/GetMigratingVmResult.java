// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.vmmigration.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.vmmigration.v1.outputs.AwsSourceVmDetailsResponse;
import com.pulumi.googlenative.vmmigration.v1.outputs.CloneJobResponse;
import com.pulumi.googlenative.vmmigration.v1.outputs.ComputeEngineTargetDefaultsResponse;
import com.pulumi.googlenative.vmmigration.v1.outputs.CutoverJobResponse;
import com.pulumi.googlenative.vmmigration.v1.outputs.ReplicationCycleResponse;
import com.pulumi.googlenative.vmmigration.v1.outputs.ReplicationSyncResponse;
import com.pulumi.googlenative.vmmigration.v1.outputs.SchedulePolicyResponse;
import com.pulumi.googlenative.vmmigration.v1.outputs.StatusResponse;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetMigratingVmResult {
    /**
     * @return Details of the VM from an AWS source.
     * 
     */
    private AwsSourceVmDetailsResponse awsSourceVmDetails;
    /**
     * @return Details of the target VM in Compute Engine.
     * 
     */
    private ComputeEngineTargetDefaultsResponse computeEngineTargetDefaults;
    /**
     * @return The time the migrating VM was created (this refers to this resource and not to the time it was installed in the source).
     * 
     */
    private String createTime;
    /**
     * @return The percentage progress of the current running replication cycle.
     * 
     */
    private ReplicationCycleResponse currentSyncInfo;
    /**
     * @return The description attached to the migrating VM by the user.
     * 
     */
    private String description;
    /**
     * @return The display name attached to the MigratingVm by the user.
     * 
     */
    private String displayName;
    /**
     * @return Provides details on the state of the Migrating VM in case of an error in replication.
     * 
     */
    private StatusResponse error;
    /**
     * @return The group this migrating vm is included in, if any. The group is represented by the full path of the appropriate Group resource.
     * 
     */
    private String group;
    /**
     * @return The labels of the migrating VM.
     * 
     */
    private Map<String,String> labels;
    /**
     * @return The most updated snapshot created time in the source that finished replication.
     * 
     */
    private ReplicationSyncResponse lastSync;
    /**
     * @return The identifier of the MigratingVm.
     * 
     */
    private String name;
    /**
     * @return The replication schedule policy.
     * 
     */
    private SchedulePolicyResponse policy;
    /**
     * @return The recent clone jobs performed on the migrating VM. This field holds the vm&#39;s last completed clone job and the vm&#39;s running clone job, if one exists. Note: To have this field populated you need to explicitly request it via the &#34;view&#34; parameter of the Get/List request.
     * 
     */
    private List<CloneJobResponse> recentCloneJobs;
    /**
     * @return The recent cutover jobs performed on the migrating VM. This field holds the vm&#39;s last completed cutover job and the vm&#39;s running cutover job, if one exists. Note: To have this field populated you need to explicitly request it via the &#34;view&#34; parameter of the Get/List request.
     * 
     */
    private List<CutoverJobResponse> recentCutoverJobs;
    /**
     * @return The unique ID of the VM in the source. The VM&#39;s name in vSphere can be changed, so this is not the VM&#39;s name but rather its moRef id. This id is of the form vm-.
     * 
     */
    private String sourceVmId;
    /**
     * @return State of the MigratingVm.
     * 
     */
    private String state;
    /**
     * @return The last time the migrating VM state was updated.
     * 
     */
    private String stateTime;
    /**
     * @return The last time the migrating VM resource was updated.
     * 
     */
    private String updateTime;

    private GetMigratingVmResult() {}
    /**
     * @return Details of the VM from an AWS source.
     * 
     */
    public AwsSourceVmDetailsResponse awsSourceVmDetails() {
        return this.awsSourceVmDetails;
    }
    /**
     * @return Details of the target VM in Compute Engine.
     * 
     */
    public ComputeEngineTargetDefaultsResponse computeEngineTargetDefaults() {
        return this.computeEngineTargetDefaults;
    }
    /**
     * @return The time the migrating VM was created (this refers to this resource and not to the time it was installed in the source).
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return The percentage progress of the current running replication cycle.
     * 
     */
    public ReplicationCycleResponse currentSyncInfo() {
        return this.currentSyncInfo;
    }
    /**
     * @return The description attached to the migrating VM by the user.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The display name attached to the MigratingVm by the user.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Provides details on the state of the Migrating VM in case of an error in replication.
     * 
     */
    public StatusResponse error() {
        return this.error;
    }
    /**
     * @return The group this migrating vm is included in, if any. The group is represented by the full path of the appropriate Group resource.
     * 
     */
    public String group() {
        return this.group;
    }
    /**
     * @return The labels of the migrating VM.
     * 
     */
    public Map<String,String> labels() {
        return this.labels;
    }
    /**
     * @return The most updated snapshot created time in the source that finished replication.
     * 
     */
    public ReplicationSyncResponse lastSync() {
        return this.lastSync;
    }
    /**
     * @return The identifier of the MigratingVm.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The replication schedule policy.
     * 
     */
    public SchedulePolicyResponse policy() {
        return this.policy;
    }
    /**
     * @return The recent clone jobs performed on the migrating VM. This field holds the vm&#39;s last completed clone job and the vm&#39;s running clone job, if one exists. Note: To have this field populated you need to explicitly request it via the &#34;view&#34; parameter of the Get/List request.
     * 
     */
    public List<CloneJobResponse> recentCloneJobs() {
        return this.recentCloneJobs;
    }
    /**
     * @return The recent cutover jobs performed on the migrating VM. This field holds the vm&#39;s last completed cutover job and the vm&#39;s running cutover job, if one exists. Note: To have this field populated you need to explicitly request it via the &#34;view&#34; parameter of the Get/List request.
     * 
     */
    public List<CutoverJobResponse> recentCutoverJobs() {
        return this.recentCutoverJobs;
    }
    /**
     * @return The unique ID of the VM in the source. The VM&#39;s name in vSphere can be changed, so this is not the VM&#39;s name but rather its moRef id. This id is of the form vm-.
     * 
     */
    public String sourceVmId() {
        return this.sourceVmId;
    }
    /**
     * @return State of the MigratingVm.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The last time the migrating VM state was updated.
     * 
     */
    public String stateTime() {
        return this.stateTime;
    }
    /**
     * @return The last time the migrating VM resource was updated.
     * 
     */
    public String updateTime() {
        return this.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMigratingVmResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private AwsSourceVmDetailsResponse awsSourceVmDetails;
        private ComputeEngineTargetDefaultsResponse computeEngineTargetDefaults;
        private String createTime;
        private ReplicationCycleResponse currentSyncInfo;
        private String description;
        private String displayName;
        private StatusResponse error;
        private String group;
        private Map<String,String> labels;
        private ReplicationSyncResponse lastSync;
        private String name;
        private SchedulePolicyResponse policy;
        private List<CloneJobResponse> recentCloneJobs;
        private List<CutoverJobResponse> recentCutoverJobs;
        private String sourceVmId;
        private String state;
        private String stateTime;
        private String updateTime;
        public Builder() {}
        public Builder(GetMigratingVmResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.awsSourceVmDetails = defaults.awsSourceVmDetails;
    	      this.computeEngineTargetDefaults = defaults.computeEngineTargetDefaults;
    	      this.createTime = defaults.createTime;
    	      this.currentSyncInfo = defaults.currentSyncInfo;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.error = defaults.error;
    	      this.group = defaults.group;
    	      this.labels = defaults.labels;
    	      this.lastSync = defaults.lastSync;
    	      this.name = defaults.name;
    	      this.policy = defaults.policy;
    	      this.recentCloneJobs = defaults.recentCloneJobs;
    	      this.recentCutoverJobs = defaults.recentCutoverJobs;
    	      this.sourceVmId = defaults.sourceVmId;
    	      this.state = defaults.state;
    	      this.stateTime = defaults.stateTime;
    	      this.updateTime = defaults.updateTime;
        }

        @CustomType.Setter
        public Builder awsSourceVmDetails(AwsSourceVmDetailsResponse awsSourceVmDetails) {
            this.awsSourceVmDetails = Objects.requireNonNull(awsSourceVmDetails);
            return this;
        }
        @CustomType.Setter
        public Builder computeEngineTargetDefaults(ComputeEngineTargetDefaultsResponse computeEngineTargetDefaults) {
            this.computeEngineTargetDefaults = Objects.requireNonNull(computeEngineTargetDefaults);
            return this;
        }
        @CustomType.Setter
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        @CustomType.Setter
        public Builder currentSyncInfo(ReplicationCycleResponse currentSyncInfo) {
            this.currentSyncInfo = Objects.requireNonNull(currentSyncInfo);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder error(StatusResponse error) {
            this.error = Objects.requireNonNull(error);
            return this;
        }
        @CustomType.Setter
        public Builder group(String group) {
            this.group = Objects.requireNonNull(group);
            return this;
        }
        @CustomType.Setter
        public Builder labels(Map<String,String> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }
        @CustomType.Setter
        public Builder lastSync(ReplicationSyncResponse lastSync) {
            this.lastSync = Objects.requireNonNull(lastSync);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder policy(SchedulePolicyResponse policy) {
            this.policy = Objects.requireNonNull(policy);
            return this;
        }
        @CustomType.Setter
        public Builder recentCloneJobs(List<CloneJobResponse> recentCloneJobs) {
            this.recentCloneJobs = Objects.requireNonNull(recentCloneJobs);
            return this;
        }
        public Builder recentCloneJobs(CloneJobResponse... recentCloneJobs) {
            return recentCloneJobs(List.of(recentCloneJobs));
        }
        @CustomType.Setter
        public Builder recentCutoverJobs(List<CutoverJobResponse> recentCutoverJobs) {
            this.recentCutoverJobs = Objects.requireNonNull(recentCutoverJobs);
            return this;
        }
        public Builder recentCutoverJobs(CutoverJobResponse... recentCutoverJobs) {
            return recentCutoverJobs(List.of(recentCutoverJobs));
        }
        @CustomType.Setter
        public Builder sourceVmId(String sourceVmId) {
            this.sourceVmId = Objects.requireNonNull(sourceVmId);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder stateTime(String stateTime) {
            this.stateTime = Objects.requireNonNull(stateTime);
            return this;
        }
        @CustomType.Setter
        public Builder updateTime(String updateTime) {
            this.updateTime = Objects.requireNonNull(updateTime);
            return this;
        }
        public GetMigratingVmResult build() {
            final var o = new GetMigratingVmResult();
            o.awsSourceVmDetails = awsSourceVmDetails;
            o.computeEngineTargetDefaults = computeEngineTargetDefaults;
            o.createTime = createTime;
            o.currentSyncInfo = currentSyncInfo;
            o.description = description;
            o.displayName = displayName;
            o.error = error;
            o.group = group;
            o.labels = labels;
            o.lastSync = lastSync;
            o.name = name;
            o.policy = policy;
            o.recentCloneJobs = recentCloneJobs;
            o.recentCutoverJobs = recentCutoverJobs;
            o.sourceVmId = sourceVmId;
            o.state = state;
            o.stateTime = stateTime;
            o.updateTime = updateTime;
            return o;
        }
    }
}
