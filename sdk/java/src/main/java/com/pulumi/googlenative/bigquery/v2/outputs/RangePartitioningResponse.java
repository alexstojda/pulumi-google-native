// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.bigquery.v2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.bigquery.v2.outputs.RangePartitioningRangeResponse;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class RangePartitioningResponse {
    /**
     * @return [TrustedTester] [Required] The table is partitioned by this field. The field must be a top-level NULLABLE/REQUIRED field. The only supported type is INTEGER/INT64.
     * 
     */
    private String field;
    /**
     * @return [TrustedTester] [Required] Defines the ranges for range partitioning.
     * 
     */
    private RangePartitioningRangeResponse range;

    private RangePartitioningResponse() {}
    /**
     * @return [TrustedTester] [Required] The table is partitioned by this field. The field must be a top-level NULLABLE/REQUIRED field. The only supported type is INTEGER/INT64.
     * 
     */
    public String field() {
        return this.field;
    }
    /**
     * @return [TrustedTester] [Required] Defines the ranges for range partitioning.
     * 
     */
    public RangePartitioningRangeResponse range() {
        return this.range;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RangePartitioningResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String field;
        private RangePartitioningRangeResponse range;
        public Builder() {}
        public Builder(RangePartitioningResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.field = defaults.field;
    	      this.range = defaults.range;
        }

        @CustomType.Setter
        public Builder field(String field) {
            this.field = Objects.requireNonNull(field);
            return this;
        }
        @CustomType.Setter
        public Builder range(RangePartitioningRangeResponse range) {
            this.range = Objects.requireNonNull(range);
            return this;
        }
        public RangePartitioningResponse build() {
            final var o = new RangePartitioningResponse();
            o.field = field;
            o.range = range;
            return o;
        }
    }
}
