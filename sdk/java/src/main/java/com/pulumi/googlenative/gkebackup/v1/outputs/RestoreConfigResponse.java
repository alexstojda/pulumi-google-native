// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.gkebackup.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.gkebackup.v1.outputs.ClusterResourceRestoreScopeResponse;
import com.pulumi.googlenative.gkebackup.v1.outputs.NamespacedNamesResponse;
import com.pulumi.googlenative.gkebackup.v1.outputs.NamespacesResponse;
import com.pulumi.googlenative.gkebackup.v1.outputs.SubstitutionRuleResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class RestoreConfigResponse {
    /**
     * @return Restore all namespaced resources in the Backup if set to &#34;True&#34;. Specifying this field to &#34;False&#34; is an error.
     * 
     */
    private Boolean allNamespaces;
    /**
     * @return Defines the behavior for handling the situation where cluster-scoped resources being restored already exist in the target cluster. This MUST be set to a value other than CLUSTER_RESOURCE_CONFLICT_POLICY_UNSPECIFIED if cluster_resource_restore_scope is not empty.
     * 
     */
    private String clusterResourceConflictPolicy;
    /**
     * @return Identifies the cluster-scoped resources to restore from the Backup. Not specifying it means NO cluster resource will be restored.
     * 
     */
    private ClusterResourceRestoreScopeResponse clusterResourceRestoreScope;
    /**
     * @return Defines the behavior for handling the situation where sets of namespaced resources being restored already exist in the target cluster. This MUST be set to a value other than NAMESPACED_RESOURCE_RESTORE_MODE_UNSPECIFIED.
     * 
     */
    private String namespacedResourceRestoreMode;
    /**
     * @return A list of selected ProtectedApplications to restore. The listed ProtectedApplications and all the resources to which they refer will be restored.
     * 
     */
    private NamespacedNamesResponse selectedApplications;
    /**
     * @return A list of selected Namespaces to restore from the Backup. The listed Namespaces and all resources contained in them will be restored.
     * 
     */
    private NamespacesResponse selectedNamespaces;
    /**
     * @return A list of transformation rules to be applied against Kubernetes resources as they are selected for restoration from a Backup. Rules are executed in order defined - this order matters, as changes made by a rule may impact the filtering logic of subsequent rules. An empty list means no substitution will occur.
     * 
     */
    private List<SubstitutionRuleResponse> substitutionRules;
    /**
     * @return Specifies the mechanism to be used to restore volume data. Default: VOLUME_DATA_RESTORE_POLICY_UNSPECIFIED (will be treated as NO_VOLUME_DATA_RESTORATION).
     * 
     */
    private String volumeDataRestorePolicy;

    private RestoreConfigResponse() {}
    /**
     * @return Restore all namespaced resources in the Backup if set to &#34;True&#34;. Specifying this field to &#34;False&#34; is an error.
     * 
     */
    public Boolean allNamespaces() {
        return this.allNamespaces;
    }
    /**
     * @return Defines the behavior for handling the situation where cluster-scoped resources being restored already exist in the target cluster. This MUST be set to a value other than CLUSTER_RESOURCE_CONFLICT_POLICY_UNSPECIFIED if cluster_resource_restore_scope is not empty.
     * 
     */
    public String clusterResourceConflictPolicy() {
        return this.clusterResourceConflictPolicy;
    }
    /**
     * @return Identifies the cluster-scoped resources to restore from the Backup. Not specifying it means NO cluster resource will be restored.
     * 
     */
    public ClusterResourceRestoreScopeResponse clusterResourceRestoreScope() {
        return this.clusterResourceRestoreScope;
    }
    /**
     * @return Defines the behavior for handling the situation where sets of namespaced resources being restored already exist in the target cluster. This MUST be set to a value other than NAMESPACED_RESOURCE_RESTORE_MODE_UNSPECIFIED.
     * 
     */
    public String namespacedResourceRestoreMode() {
        return this.namespacedResourceRestoreMode;
    }
    /**
     * @return A list of selected ProtectedApplications to restore. The listed ProtectedApplications and all the resources to which they refer will be restored.
     * 
     */
    public NamespacedNamesResponse selectedApplications() {
        return this.selectedApplications;
    }
    /**
     * @return A list of selected Namespaces to restore from the Backup. The listed Namespaces and all resources contained in them will be restored.
     * 
     */
    public NamespacesResponse selectedNamespaces() {
        return this.selectedNamespaces;
    }
    /**
     * @return A list of transformation rules to be applied against Kubernetes resources as they are selected for restoration from a Backup. Rules are executed in order defined - this order matters, as changes made by a rule may impact the filtering logic of subsequent rules. An empty list means no substitution will occur.
     * 
     */
    public List<SubstitutionRuleResponse> substitutionRules() {
        return this.substitutionRules;
    }
    /**
     * @return Specifies the mechanism to be used to restore volume data. Default: VOLUME_DATA_RESTORE_POLICY_UNSPECIFIED (will be treated as NO_VOLUME_DATA_RESTORATION).
     * 
     */
    public String volumeDataRestorePolicy() {
        return this.volumeDataRestorePolicy;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RestoreConfigResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean allNamespaces;
        private String clusterResourceConflictPolicy;
        private ClusterResourceRestoreScopeResponse clusterResourceRestoreScope;
        private String namespacedResourceRestoreMode;
        private NamespacedNamesResponse selectedApplications;
        private NamespacesResponse selectedNamespaces;
        private List<SubstitutionRuleResponse> substitutionRules;
        private String volumeDataRestorePolicy;
        public Builder() {}
        public Builder(RestoreConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allNamespaces = defaults.allNamespaces;
    	      this.clusterResourceConflictPolicy = defaults.clusterResourceConflictPolicy;
    	      this.clusterResourceRestoreScope = defaults.clusterResourceRestoreScope;
    	      this.namespacedResourceRestoreMode = defaults.namespacedResourceRestoreMode;
    	      this.selectedApplications = defaults.selectedApplications;
    	      this.selectedNamespaces = defaults.selectedNamespaces;
    	      this.substitutionRules = defaults.substitutionRules;
    	      this.volumeDataRestorePolicy = defaults.volumeDataRestorePolicy;
        }

        @CustomType.Setter
        public Builder allNamespaces(Boolean allNamespaces) {
            this.allNamespaces = Objects.requireNonNull(allNamespaces);
            return this;
        }
        @CustomType.Setter
        public Builder clusterResourceConflictPolicy(String clusterResourceConflictPolicy) {
            this.clusterResourceConflictPolicy = Objects.requireNonNull(clusterResourceConflictPolicy);
            return this;
        }
        @CustomType.Setter
        public Builder clusterResourceRestoreScope(ClusterResourceRestoreScopeResponse clusterResourceRestoreScope) {
            this.clusterResourceRestoreScope = Objects.requireNonNull(clusterResourceRestoreScope);
            return this;
        }
        @CustomType.Setter
        public Builder namespacedResourceRestoreMode(String namespacedResourceRestoreMode) {
            this.namespacedResourceRestoreMode = Objects.requireNonNull(namespacedResourceRestoreMode);
            return this;
        }
        @CustomType.Setter
        public Builder selectedApplications(NamespacedNamesResponse selectedApplications) {
            this.selectedApplications = Objects.requireNonNull(selectedApplications);
            return this;
        }
        @CustomType.Setter
        public Builder selectedNamespaces(NamespacesResponse selectedNamespaces) {
            this.selectedNamespaces = Objects.requireNonNull(selectedNamespaces);
            return this;
        }
        @CustomType.Setter
        public Builder substitutionRules(List<SubstitutionRuleResponse> substitutionRules) {
            this.substitutionRules = Objects.requireNonNull(substitutionRules);
            return this;
        }
        public Builder substitutionRules(SubstitutionRuleResponse... substitutionRules) {
            return substitutionRules(List.of(substitutionRules));
        }
        @CustomType.Setter
        public Builder volumeDataRestorePolicy(String volumeDataRestorePolicy) {
            this.volumeDataRestorePolicy = Objects.requireNonNull(volumeDataRestorePolicy);
            return this;
        }
        public RestoreConfigResponse build() {
            final var o = new RestoreConfigResponse();
            o.allNamespaces = allNamespaces;
            o.clusterResourceConflictPolicy = clusterResourceConflictPolicy;
            o.clusterResourceRestoreScope = clusterResourceRestoreScope;
            o.namespacedResourceRestoreMode = namespacedResourceRestoreMode;
            o.selectedApplications = selectedApplications;
            o.selectedNamespaces = selectedNamespaces;
            o.substitutionRules = substitutionRules;
            o.volumeDataRestorePolicy = volumeDataRestorePolicy;
            return o;
        }
    }
}
