// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.storagetransfer.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class NotificationConfigResponse {
    /**
     * @return Event types for which a notification is desired. If empty, send notifications for all event types.
     * 
     */
    private List<String> eventTypes;
    /**
     * @return The desired format of the notification message payloads.
     * 
     */
    private String payloadFormat;
    /**
     * @return The `Topic.name` of the Pub/Sub topic to which to publish notifications. Must be of the format: `projects/{project}/topics/{topic}`. Not matching this format results in an INVALID_ARGUMENT error.
     * 
     */
    private String pubsubTopic;

    private NotificationConfigResponse() {}
    /**
     * @return Event types for which a notification is desired. If empty, send notifications for all event types.
     * 
     */
    public List<String> eventTypes() {
        return this.eventTypes;
    }
    /**
     * @return The desired format of the notification message payloads.
     * 
     */
    public String payloadFormat() {
        return this.payloadFormat;
    }
    /**
     * @return The `Topic.name` of the Pub/Sub topic to which to publish notifications. Must be of the format: `projects/{project}/topics/{topic}`. Not matching this format results in an INVALID_ARGUMENT error.
     * 
     */
    public String pubsubTopic() {
        return this.pubsubTopic;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NotificationConfigResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> eventTypes;
        private String payloadFormat;
        private String pubsubTopic;
        public Builder() {}
        public Builder(NotificationConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.eventTypes = defaults.eventTypes;
    	      this.payloadFormat = defaults.payloadFormat;
    	      this.pubsubTopic = defaults.pubsubTopic;
        }

        @CustomType.Setter
        public Builder eventTypes(List<String> eventTypes) {
            this.eventTypes = Objects.requireNonNull(eventTypes);
            return this;
        }
        public Builder eventTypes(String... eventTypes) {
            return eventTypes(List.of(eventTypes));
        }
        @CustomType.Setter
        public Builder payloadFormat(String payloadFormat) {
            this.payloadFormat = Objects.requireNonNull(payloadFormat);
            return this;
        }
        @CustomType.Setter
        public Builder pubsubTopic(String pubsubTopic) {
            this.pubsubTopic = Objects.requireNonNull(pubsubTopic);
            return this;
        }
        public NotificationConfigResponse build() {
            final var o = new NotificationConfigResponse();
            o.eventTypes = eventTypes;
            o.payloadFormat = payloadFormat;
            o.pubsubTopic = pubsubTopic;
            return o;
        }
    }
}
