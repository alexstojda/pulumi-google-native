// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.container.v1beta1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.container.v1beta1.outputs.CloudRunConfigResponse;
import com.pulumi.googlenative.container.v1beta1.outputs.ConfigConnectorConfigResponse;
import com.pulumi.googlenative.container.v1beta1.outputs.DnsCacheConfigResponse;
import com.pulumi.googlenative.container.v1beta1.outputs.GcePersistentDiskCsiDriverConfigResponse;
import com.pulumi.googlenative.container.v1beta1.outputs.GcpFilestoreCsiDriverConfigResponse;
import com.pulumi.googlenative.container.v1beta1.outputs.GkeBackupAgentConfigResponse;
import com.pulumi.googlenative.container.v1beta1.outputs.HorizontalPodAutoscalingResponse;
import com.pulumi.googlenative.container.v1beta1.outputs.HttpLoadBalancingResponse;
import com.pulumi.googlenative.container.v1beta1.outputs.IstioConfigResponse;
import com.pulumi.googlenative.container.v1beta1.outputs.KalmConfigResponse;
import com.pulumi.googlenative.container.v1beta1.outputs.KubernetesDashboardResponse;
import com.pulumi.googlenative.container.v1beta1.outputs.NetworkPolicyConfigResponse;
import java.util.Objects;

@CustomType
public final class AddonsConfigResponse {
    /**
     * @return Configuration for the Cloud Run addon. The `IstioConfig` addon must be enabled in order to enable Cloud Run addon. This option can only be enabled at cluster creation time.
     * 
     */
    private CloudRunConfigResponse cloudRunConfig;
    /**
     * @return Configuration for the ConfigConnector add-on, a Kubernetes extension to manage hosted GCP services through the Kubernetes API
     * 
     */
    private ConfigConnectorConfigResponse configConnectorConfig;
    /**
     * @return Configuration for NodeLocalDNS, a dns cache running on cluster nodes
     * 
     */
    private DnsCacheConfigResponse dnsCacheConfig;
    /**
     * @return Configuration for the Compute Engine Persistent Disk CSI driver.
     * 
     */
    private GcePersistentDiskCsiDriverConfigResponse gcePersistentDiskCsiDriverConfig;
    /**
     * @return Configuration for the GCP Filestore CSI driver.
     * 
     */
    private GcpFilestoreCsiDriverConfigResponse gcpFilestoreCsiDriverConfig;
    /**
     * @return Configuration for the Backup for GKE agent addon.
     * 
     */
    private GkeBackupAgentConfigResponse gkeBackupAgentConfig;
    /**
     * @return Configuration for the horizontal pod autoscaling feature, which increases or decreases the number of replica pods a replication controller has based on the resource usage of the existing pods.
     * 
     */
    private HorizontalPodAutoscalingResponse horizontalPodAutoscaling;
    /**
     * @return Configuration for the HTTP (L7) load balancing controller addon, which makes it easy to set up HTTP load balancers for services in a cluster.
     * 
     */
    private HttpLoadBalancingResponse httpLoadBalancing;
    /**
     * @return Configuration for Istio, an open platform to connect, manage, and secure microservices.
     * 
     */
    private IstioConfigResponse istioConfig;
    /**
     * @return Configuration for the KALM addon, which manages the lifecycle of k8s applications.
     * 
     */
    private KalmConfigResponse kalmConfig;
    /**
     * @return Configuration for the Kubernetes Dashboard. This addon is deprecated, and will be disabled in 1.15. It is recommended to use the Cloud Console to manage and monitor your Kubernetes clusters, workloads and applications. For more information, see: https://cloud.google.com/kubernetes-engine/docs/concepts/dashboards
     * 
     */
    private KubernetesDashboardResponse kubernetesDashboard;
    /**
     * @return Configuration for NetworkPolicy. This only tracks whether the addon is enabled or not on the Master, it does not track whether network policy is enabled for the nodes.
     * 
     */
    private NetworkPolicyConfigResponse networkPolicyConfig;

    private AddonsConfigResponse() {}
    /**
     * @return Configuration for the Cloud Run addon. The `IstioConfig` addon must be enabled in order to enable Cloud Run addon. This option can only be enabled at cluster creation time.
     * 
     */
    public CloudRunConfigResponse cloudRunConfig() {
        return this.cloudRunConfig;
    }
    /**
     * @return Configuration for the ConfigConnector add-on, a Kubernetes extension to manage hosted GCP services through the Kubernetes API
     * 
     */
    public ConfigConnectorConfigResponse configConnectorConfig() {
        return this.configConnectorConfig;
    }
    /**
     * @return Configuration for NodeLocalDNS, a dns cache running on cluster nodes
     * 
     */
    public DnsCacheConfigResponse dnsCacheConfig() {
        return this.dnsCacheConfig;
    }
    /**
     * @return Configuration for the Compute Engine Persistent Disk CSI driver.
     * 
     */
    public GcePersistentDiskCsiDriverConfigResponse gcePersistentDiskCsiDriverConfig() {
        return this.gcePersistentDiskCsiDriverConfig;
    }
    /**
     * @return Configuration for the GCP Filestore CSI driver.
     * 
     */
    public GcpFilestoreCsiDriverConfigResponse gcpFilestoreCsiDriverConfig() {
        return this.gcpFilestoreCsiDriverConfig;
    }
    /**
     * @return Configuration for the Backup for GKE agent addon.
     * 
     */
    public GkeBackupAgentConfigResponse gkeBackupAgentConfig() {
        return this.gkeBackupAgentConfig;
    }
    /**
     * @return Configuration for the horizontal pod autoscaling feature, which increases or decreases the number of replica pods a replication controller has based on the resource usage of the existing pods.
     * 
     */
    public HorizontalPodAutoscalingResponse horizontalPodAutoscaling() {
        return this.horizontalPodAutoscaling;
    }
    /**
     * @return Configuration for the HTTP (L7) load balancing controller addon, which makes it easy to set up HTTP load balancers for services in a cluster.
     * 
     */
    public HttpLoadBalancingResponse httpLoadBalancing() {
        return this.httpLoadBalancing;
    }
    /**
     * @return Configuration for Istio, an open platform to connect, manage, and secure microservices.
     * 
     */
    public IstioConfigResponse istioConfig() {
        return this.istioConfig;
    }
    /**
     * @return Configuration for the KALM addon, which manages the lifecycle of k8s applications.
     * 
     */
    public KalmConfigResponse kalmConfig() {
        return this.kalmConfig;
    }
    /**
     * @return Configuration for the Kubernetes Dashboard. This addon is deprecated, and will be disabled in 1.15. It is recommended to use the Cloud Console to manage and monitor your Kubernetes clusters, workloads and applications. For more information, see: https://cloud.google.com/kubernetes-engine/docs/concepts/dashboards
     * 
     */
    public KubernetesDashboardResponse kubernetesDashboard() {
        return this.kubernetesDashboard;
    }
    /**
     * @return Configuration for NetworkPolicy. This only tracks whether the addon is enabled or not on the Master, it does not track whether network policy is enabled for the nodes.
     * 
     */
    public NetworkPolicyConfigResponse networkPolicyConfig() {
        return this.networkPolicyConfig;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AddonsConfigResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private CloudRunConfigResponse cloudRunConfig;
        private ConfigConnectorConfigResponse configConnectorConfig;
        private DnsCacheConfigResponse dnsCacheConfig;
        private GcePersistentDiskCsiDriverConfigResponse gcePersistentDiskCsiDriverConfig;
        private GcpFilestoreCsiDriverConfigResponse gcpFilestoreCsiDriverConfig;
        private GkeBackupAgentConfigResponse gkeBackupAgentConfig;
        private HorizontalPodAutoscalingResponse horizontalPodAutoscaling;
        private HttpLoadBalancingResponse httpLoadBalancing;
        private IstioConfigResponse istioConfig;
        private KalmConfigResponse kalmConfig;
        private KubernetesDashboardResponse kubernetesDashboard;
        private NetworkPolicyConfigResponse networkPolicyConfig;
        public Builder() {}
        public Builder(AddonsConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudRunConfig = defaults.cloudRunConfig;
    	      this.configConnectorConfig = defaults.configConnectorConfig;
    	      this.dnsCacheConfig = defaults.dnsCacheConfig;
    	      this.gcePersistentDiskCsiDriverConfig = defaults.gcePersistentDiskCsiDriverConfig;
    	      this.gcpFilestoreCsiDriverConfig = defaults.gcpFilestoreCsiDriverConfig;
    	      this.gkeBackupAgentConfig = defaults.gkeBackupAgentConfig;
    	      this.horizontalPodAutoscaling = defaults.horizontalPodAutoscaling;
    	      this.httpLoadBalancing = defaults.httpLoadBalancing;
    	      this.istioConfig = defaults.istioConfig;
    	      this.kalmConfig = defaults.kalmConfig;
    	      this.kubernetesDashboard = defaults.kubernetesDashboard;
    	      this.networkPolicyConfig = defaults.networkPolicyConfig;
        }

        @CustomType.Setter
        public Builder cloudRunConfig(CloudRunConfigResponse cloudRunConfig) {
            this.cloudRunConfig = Objects.requireNonNull(cloudRunConfig);
            return this;
        }
        @CustomType.Setter
        public Builder configConnectorConfig(ConfigConnectorConfigResponse configConnectorConfig) {
            this.configConnectorConfig = Objects.requireNonNull(configConnectorConfig);
            return this;
        }
        @CustomType.Setter
        public Builder dnsCacheConfig(DnsCacheConfigResponse dnsCacheConfig) {
            this.dnsCacheConfig = Objects.requireNonNull(dnsCacheConfig);
            return this;
        }
        @CustomType.Setter
        public Builder gcePersistentDiskCsiDriverConfig(GcePersistentDiskCsiDriverConfigResponse gcePersistentDiskCsiDriverConfig) {
            this.gcePersistentDiskCsiDriverConfig = Objects.requireNonNull(gcePersistentDiskCsiDriverConfig);
            return this;
        }
        @CustomType.Setter
        public Builder gcpFilestoreCsiDriverConfig(GcpFilestoreCsiDriverConfigResponse gcpFilestoreCsiDriverConfig) {
            this.gcpFilestoreCsiDriverConfig = Objects.requireNonNull(gcpFilestoreCsiDriverConfig);
            return this;
        }
        @CustomType.Setter
        public Builder gkeBackupAgentConfig(GkeBackupAgentConfigResponse gkeBackupAgentConfig) {
            this.gkeBackupAgentConfig = Objects.requireNonNull(gkeBackupAgentConfig);
            return this;
        }
        @CustomType.Setter
        public Builder horizontalPodAutoscaling(HorizontalPodAutoscalingResponse horizontalPodAutoscaling) {
            this.horizontalPodAutoscaling = Objects.requireNonNull(horizontalPodAutoscaling);
            return this;
        }
        @CustomType.Setter
        public Builder httpLoadBalancing(HttpLoadBalancingResponse httpLoadBalancing) {
            this.httpLoadBalancing = Objects.requireNonNull(httpLoadBalancing);
            return this;
        }
        @CustomType.Setter
        public Builder istioConfig(IstioConfigResponse istioConfig) {
            this.istioConfig = Objects.requireNonNull(istioConfig);
            return this;
        }
        @CustomType.Setter
        public Builder kalmConfig(KalmConfigResponse kalmConfig) {
            this.kalmConfig = Objects.requireNonNull(kalmConfig);
            return this;
        }
        @CustomType.Setter
        public Builder kubernetesDashboard(KubernetesDashboardResponse kubernetesDashboard) {
            this.kubernetesDashboard = Objects.requireNonNull(kubernetesDashboard);
            return this;
        }
        @CustomType.Setter
        public Builder networkPolicyConfig(NetworkPolicyConfigResponse networkPolicyConfig) {
            this.networkPolicyConfig = Objects.requireNonNull(networkPolicyConfig);
            return this;
        }
        public AddonsConfigResponse build() {
            final var o = new AddonsConfigResponse();
            o.cloudRunConfig = cloudRunConfig;
            o.configConnectorConfig = configConnectorConfig;
            o.dnsCacheConfig = dnsCacheConfig;
            o.gcePersistentDiskCsiDriverConfig = gcePersistentDiskCsiDriverConfig;
            o.gcpFilestoreCsiDriverConfig = gcpFilestoreCsiDriverConfig;
            o.gkeBackupAgentConfig = gkeBackupAgentConfig;
            o.horizontalPodAutoscaling = horizontalPodAutoscaling;
            o.httpLoadBalancing = httpLoadBalancing;
            o.istioConfig = istioConfig;
            o.kalmConfig = kalmConfig;
            o.kubernetesDashboard = kubernetesDashboard;
            o.networkPolicyConfig = networkPolicyConfig;
            return o;
        }
    }
}
