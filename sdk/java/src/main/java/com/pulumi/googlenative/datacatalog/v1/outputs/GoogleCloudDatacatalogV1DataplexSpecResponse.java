// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.datacatalog.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.datacatalog.v1.outputs.GoogleCloudDatacatalogV1PhysicalSchemaResponse;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GoogleCloudDatacatalogV1DataplexSpecResponse {
    /**
     * @return Fully qualified resource name of an asset in Dataplex, to which the underlying data source (Cloud Storage bucket or BigQuery dataset) of the entity is attached.
     * 
     */
    private String asset;
    /**
     * @return Compression format of the data, e.g., zip, gzip etc.
     * 
     */
    private String compressionFormat;
    /**
     * @return Format of the data.
     * 
     */
    private GoogleCloudDatacatalogV1PhysicalSchemaResponse dataFormat;
    /**
     * @return Project ID of the underlying Cloud Storage or BigQuery data. Note that this may not be the same project as the correspondingly Dataplex lake / zone / asset.
     * 
     */
    private String project;

    private GoogleCloudDatacatalogV1DataplexSpecResponse() {}
    /**
     * @return Fully qualified resource name of an asset in Dataplex, to which the underlying data source (Cloud Storage bucket or BigQuery dataset) of the entity is attached.
     * 
     */
    public String asset() {
        return this.asset;
    }
    /**
     * @return Compression format of the data, e.g., zip, gzip etc.
     * 
     */
    public String compressionFormat() {
        return this.compressionFormat;
    }
    /**
     * @return Format of the data.
     * 
     */
    public GoogleCloudDatacatalogV1PhysicalSchemaResponse dataFormat() {
        return this.dataFormat;
    }
    /**
     * @return Project ID of the underlying Cloud Storage or BigQuery data. Note that this may not be the same project as the correspondingly Dataplex lake / zone / asset.
     * 
     */
    public String project() {
        return this.project;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudDatacatalogV1DataplexSpecResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String asset;
        private String compressionFormat;
        private GoogleCloudDatacatalogV1PhysicalSchemaResponse dataFormat;
        private String project;
        public Builder() {}
        public Builder(GoogleCloudDatacatalogV1DataplexSpecResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.asset = defaults.asset;
    	      this.compressionFormat = defaults.compressionFormat;
    	      this.dataFormat = defaults.dataFormat;
    	      this.project = defaults.project;
        }

        @CustomType.Setter
        public Builder asset(String asset) {
            this.asset = Objects.requireNonNull(asset);
            return this;
        }
        @CustomType.Setter
        public Builder compressionFormat(String compressionFormat) {
            this.compressionFormat = Objects.requireNonNull(compressionFormat);
            return this;
        }
        @CustomType.Setter
        public Builder dataFormat(GoogleCloudDatacatalogV1PhysicalSchemaResponse dataFormat) {
            this.dataFormat = Objects.requireNonNull(dataFormat);
            return this;
        }
        @CustomType.Setter
        public Builder project(String project) {
            this.project = Objects.requireNonNull(project);
            return this;
        }
        public GoogleCloudDatacatalogV1DataplexSpecResponse build() {
            final var o = new GoogleCloudDatacatalogV1DataplexSpecResponse();
            o.asset = asset;
            o.compressionFormat = compressionFormat;
            o.dataFormat = dataFormat;
            o.project = project;
            return o;
        }
    }
}
