// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.privateca.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class SubjectResponse {
    /**
     * @return The &#34;common name&#34; of the subject.
     * 
     */
    private String commonName;
    /**
     * @return The country code of the subject.
     * 
     */
    private String countryCode;
    /**
     * @return The locality or city of the subject.
     * 
     */
    private String locality;
    /**
     * @return The organization of the subject.
     * 
     */
    private String organization;
    /**
     * @return The organizational_unit of the subject.
     * 
     */
    private String organizationalUnit;
    /**
     * @return The postal code of the subject.
     * 
     */
    private String postalCode;
    /**
     * @return The province, territory, or regional state of the subject.
     * 
     */
    private String province;
    /**
     * @return The street address of the subject.
     * 
     */
    private String streetAddress;

    private SubjectResponse() {}
    /**
     * @return The &#34;common name&#34; of the subject.
     * 
     */
    public String commonName() {
        return this.commonName;
    }
    /**
     * @return The country code of the subject.
     * 
     */
    public String countryCode() {
        return this.countryCode;
    }
    /**
     * @return The locality or city of the subject.
     * 
     */
    public String locality() {
        return this.locality;
    }
    /**
     * @return The organization of the subject.
     * 
     */
    public String organization() {
        return this.organization;
    }
    /**
     * @return The organizational_unit of the subject.
     * 
     */
    public String organizationalUnit() {
        return this.organizationalUnit;
    }
    /**
     * @return The postal code of the subject.
     * 
     */
    public String postalCode() {
        return this.postalCode;
    }
    /**
     * @return The province, territory, or regional state of the subject.
     * 
     */
    public String province() {
        return this.province;
    }
    /**
     * @return The street address of the subject.
     * 
     */
    public String streetAddress() {
        return this.streetAddress;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SubjectResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String commonName;
        private String countryCode;
        private String locality;
        private String organization;
        private String organizationalUnit;
        private String postalCode;
        private String province;
        private String streetAddress;
        public Builder() {}
        public Builder(SubjectResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.commonName = defaults.commonName;
    	      this.countryCode = defaults.countryCode;
    	      this.locality = defaults.locality;
    	      this.organization = defaults.organization;
    	      this.organizationalUnit = defaults.organizationalUnit;
    	      this.postalCode = defaults.postalCode;
    	      this.province = defaults.province;
    	      this.streetAddress = defaults.streetAddress;
        }

        @CustomType.Setter
        public Builder commonName(String commonName) {
            this.commonName = Objects.requireNonNull(commonName);
            return this;
        }
        @CustomType.Setter
        public Builder countryCode(String countryCode) {
            this.countryCode = Objects.requireNonNull(countryCode);
            return this;
        }
        @CustomType.Setter
        public Builder locality(String locality) {
            this.locality = Objects.requireNonNull(locality);
            return this;
        }
        @CustomType.Setter
        public Builder organization(String organization) {
            this.organization = Objects.requireNonNull(organization);
            return this;
        }
        @CustomType.Setter
        public Builder organizationalUnit(String organizationalUnit) {
            this.organizationalUnit = Objects.requireNonNull(organizationalUnit);
            return this;
        }
        @CustomType.Setter
        public Builder postalCode(String postalCode) {
            this.postalCode = Objects.requireNonNull(postalCode);
            return this;
        }
        @CustomType.Setter
        public Builder province(String province) {
            this.province = Objects.requireNonNull(province);
            return this;
        }
        @CustomType.Setter
        public Builder streetAddress(String streetAddress) {
            this.streetAddress = Objects.requireNonNull(streetAddress);
            return this;
        }
        public SubjectResponse build() {
            final var o = new SubjectResponse();
            o.commonName = commonName;
            o.countryCode = countryCode;
            o.locality = locality;
            o.organization = organization;
            o.organizationalUnit = organizationalUnit;
            o.postalCode = postalCode;
            o.province = province;
            o.streetAddress = streetAddress;
            return o;
        }
    }
}
