// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.storage.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.storage.v1.outputs.BucketIamConfigurationBucketPolicyOnlyResponse;
import com.pulumi.googlenative.storage.v1.outputs.BucketIamConfigurationUniformBucketLevelAccessResponse;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class BucketIamConfigurationResponse {
    /**
     * @return The bucket&#39;s uniform bucket-level access configuration. The feature was formerly known as Bucket Policy Only. For backward compatibility, this field will be populated with identical information as the uniformBucketLevelAccess field. We recommend using the uniformBucketLevelAccess field to enable and disable the feature.
     * 
     */
    private BucketIamConfigurationBucketPolicyOnlyResponse bucketPolicyOnly;
    /**
     * @return The bucket&#39;s Public Access Prevention configuration. Currently, &#39;inherited&#39; and &#39;enforced&#39; are supported.
     * 
     */
    private String publicAccessPrevention;
    /**
     * @return The bucket&#39;s uniform bucket-level access configuration.
     * 
     */
    private BucketIamConfigurationUniformBucketLevelAccessResponse uniformBucketLevelAccess;

    private BucketIamConfigurationResponse() {}
    /**
     * @return The bucket&#39;s uniform bucket-level access configuration. The feature was formerly known as Bucket Policy Only. For backward compatibility, this field will be populated with identical information as the uniformBucketLevelAccess field. We recommend using the uniformBucketLevelAccess field to enable and disable the feature.
     * 
     */
    public BucketIamConfigurationBucketPolicyOnlyResponse bucketPolicyOnly() {
        return this.bucketPolicyOnly;
    }
    /**
     * @return The bucket&#39;s Public Access Prevention configuration. Currently, &#39;inherited&#39; and &#39;enforced&#39; are supported.
     * 
     */
    public String publicAccessPrevention() {
        return this.publicAccessPrevention;
    }
    /**
     * @return The bucket&#39;s uniform bucket-level access configuration.
     * 
     */
    public BucketIamConfigurationUniformBucketLevelAccessResponse uniformBucketLevelAccess() {
        return this.uniformBucketLevelAccess;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketIamConfigurationResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private BucketIamConfigurationBucketPolicyOnlyResponse bucketPolicyOnly;
        private String publicAccessPrevention;
        private BucketIamConfigurationUniformBucketLevelAccessResponse uniformBucketLevelAccess;
        public Builder() {}
        public Builder(BucketIamConfigurationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucketPolicyOnly = defaults.bucketPolicyOnly;
    	      this.publicAccessPrevention = defaults.publicAccessPrevention;
    	      this.uniformBucketLevelAccess = defaults.uniformBucketLevelAccess;
        }

        @CustomType.Setter
        public Builder bucketPolicyOnly(BucketIamConfigurationBucketPolicyOnlyResponse bucketPolicyOnly) {
            this.bucketPolicyOnly = Objects.requireNonNull(bucketPolicyOnly);
            return this;
        }
        @CustomType.Setter
        public Builder publicAccessPrevention(String publicAccessPrevention) {
            this.publicAccessPrevention = Objects.requireNonNull(publicAccessPrevention);
            return this;
        }
        @CustomType.Setter
        public Builder uniformBucketLevelAccess(BucketIamConfigurationUniformBucketLevelAccessResponse uniformBucketLevelAccess) {
            this.uniformBucketLevelAccess = Objects.requireNonNull(uniformBucketLevelAccess);
            return this;
        }
        public BucketIamConfigurationResponse build() {
            final var o = new BucketIamConfigurationResponse();
            o.bucketPolicyOnly = bucketPolicyOnly;
            o.publicAccessPrevention = publicAccessPrevention;
            o.uniformBucketLevelAccess = uniformBucketLevelAccess;
            return o;
        }
    }
}
