// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.compute.v1.outputs.AcceleratorConfigResponse;
import com.pulumi.googlenative.compute.v1.outputs.AdvancedMachineFeaturesResponse;
import com.pulumi.googlenative.compute.v1.outputs.AttachedDiskResponse;
import com.pulumi.googlenative.compute.v1.outputs.ConfidentialInstanceConfigResponse;
import com.pulumi.googlenative.compute.v1.outputs.CustomerEncryptionKeyResponse;
import com.pulumi.googlenative.compute.v1.outputs.DisplayDeviceResponse;
import com.pulumi.googlenative.compute.v1.outputs.InstanceParamsResponse;
import com.pulumi.googlenative.compute.v1.outputs.MetadataResponse;
import com.pulumi.googlenative.compute.v1.outputs.NetworkInterfaceResponse;
import com.pulumi.googlenative.compute.v1.outputs.NetworkPerformanceConfigResponse;
import com.pulumi.googlenative.compute.v1.outputs.ReservationAffinityResponse;
import com.pulumi.googlenative.compute.v1.outputs.SchedulingResponse;
import com.pulumi.googlenative.compute.v1.outputs.ServiceAccountResponse;
import com.pulumi.googlenative.compute.v1.outputs.ShieldedInstanceConfigResponse;
import com.pulumi.googlenative.compute.v1.outputs.ShieldedInstanceIntegrityPolicyResponse;
import com.pulumi.googlenative.compute.v1.outputs.TagsResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetInstanceResult {
    /**
     * @return Controls for advanced machine-related behavior features.
     * 
     */
    private AdvancedMachineFeaturesResponse advancedMachineFeatures;
    /**
     * @return Allows this instance to send and receive packets with non-matching destination or source IPs. This is required if you plan to use this instance to forward routes. For more information, see Enabling IP Forwarding .
     * 
     */
    private Boolean canIpForward;
    private ConfidentialInstanceConfigResponse confidentialInstanceConfig;
    /**
     * @return The CPU platform used by this instance.
     * 
     */
    private String cpuPlatform;
    /**
     * @return Creation timestamp in RFC3339 text format.
     * 
     */
    private String creationTimestamp;
    /**
     * @return Whether the resource should be protected against deletion.
     * 
     */
    private Boolean deletionProtection;
    /**
     * @return An optional description of this resource. Provide this property when you create the resource.
     * 
     */
    private String description;
    /**
     * @return Array of disks associated with this instance. Persistent disks must be created before you can assign them.
     * 
     */
    private List<AttachedDiskResponse> disks;
    /**
     * @return Enables display device for the instance.
     * 
     */
    private DisplayDeviceResponse displayDevice;
    /**
     * @return Specifies a fingerprint for this resource, which is essentially a hash of the instance&#39;s contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update the instance. You must always provide an up-to-date fingerprint hash in order to update the instance. To see the latest fingerprint, make get() request to the instance.
     * 
     */
    private String fingerprint;
    /**
     * @return A list of the type and count of accelerator cards attached to the instance.
     * 
     */
    private List<AcceleratorConfigResponse> guestAccelerators;
    /**
     * @return Specifies the hostname of the instance. The specified hostname must be RFC1035 compliant. If hostname is not specified, the default hostname is [INSTANCE_NAME].c.[PROJECT_ID].internal when using the global DNS, and [INSTANCE_NAME].[ZONE].c.[PROJECT_ID].internal when using zonal DNS.
     * 
     */
    private String hostname;
    /**
     * @return KeyRevocationActionType of the instance. Supported options are &#34;STOP&#34; and &#34;NONE&#34;. The default value is &#34;NONE&#34; if it is not specified.
     * 
     */
    private String keyRevocationActionType;
    /**
     * @return Type of the resource. Always compute#instance for instances.
     * 
     */
    private String kind;
    /**
     * @return A fingerprint for this request, which is essentially a hash of the label&#39;s contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels. To see the latest fingerprint, make get() request to the instance.
     * 
     */
    private String labelFingerprint;
    /**
     * @return Labels to apply to this instance. These can be later modified by the setLabels method.
     * 
     */
    private Map<String,String> labels;
    /**
     * @return Last start timestamp in RFC3339 text format.
     * 
     */
    private String lastStartTimestamp;
    /**
     * @return Last stop timestamp in RFC3339 text format.
     * 
     */
    private String lastStopTimestamp;
    /**
     * @return Last suspended timestamp in RFC3339 text format.
     * 
     */
    private String lastSuspendedTimestamp;
    /**
     * @return Full or partial URL of the machine type resource to use for this instance, in the format: zones/zone/machineTypes/machine-type. This is provided by the client when the instance is created. For example, the following is a valid partial url to a predefined machine type: zones/us-central1-f/machineTypes/n1-standard-1 To create a custom machine type, provide a URL to a machine type in the following format, where CPUS is 1 or an even number up to 32 (2, 4, 6, ... 24, etc), and MEMORY is the total memory for this instance. Memory must be a multiple of 256 MB and must be supplied in MB (e.g. 5 GB of memory is 5120 MB): zones/zone/machineTypes/custom-CPUS-MEMORY For example: zones/us-central1-f/machineTypes/custom-4-5120 For a full list of restrictions, read the Specifications for custom machine types.
     * 
     */
    private String machineType;
    /**
     * @return The metadata key/value pairs assigned to this instance. This includes custom metadata and predefined keys.
     * 
     */
    private MetadataResponse metadata;
    /**
     * @return Specifies a minimum CPU platform for the VM instance. Applicable values are the friendly names of CPU platforms, such as minCpuPlatform: &#34;Intel Haswell&#34; or minCpuPlatform: &#34;Intel Sandy Bridge&#34;.
     * 
     */
    private String minCpuPlatform;
    /**
     * @return The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     * 
     */
    private String name;
    /**
     * @return An array of network configurations for this instance. These specify how interfaces are configured to interact with other network services, such as connecting to the internet. Multiple interfaces are supported per instance.
     * 
     */
    private List<NetworkInterfaceResponse> networkInterfaces;
    private NetworkPerformanceConfigResponse networkPerformanceConfig;
    /**
     * @return Input only. [Input Only] Additional params passed with the request, but not persisted as part of resource payload.
     * 
     */
    private InstanceParamsResponse params;
    /**
     * @return The private IPv6 google access type for the VM. If not specified, use INHERIT_FROM_SUBNETWORK as default.
     * 
     */
    private String privateIpv6GoogleAccess;
    /**
     * @return Specifies the reservations that this instance can consume from.
     * 
     */
    private ReservationAffinityResponse reservationAffinity;
    /**
     * @return Resource policies applied to this instance.
     * 
     */
    private List<String> resourcePolicies;
    /**
     * @return Reserved for future use.
     * 
     */
    private Boolean satisfiesPzs;
    /**
     * @return Sets the scheduling options for this instance.
     * 
     */
    private SchedulingResponse scheduling;
    /**
     * @return Server-defined URL for this resource.
     * 
     */
    private String selfLink;
    /**
     * @return A list of service accounts, with their specified scopes, authorized for this instance. Only one service account per VM instance is supported. Service accounts generate access tokens that can be accessed through the metadata server and used to authenticate applications on the instance. See Service Accounts for more information.
     * 
     */
    private List<ServiceAccountResponse> serviceAccounts;
    private ShieldedInstanceConfigResponse shieldedInstanceConfig;
    private ShieldedInstanceIntegrityPolicyResponse shieldedInstanceIntegrityPolicy;
    /**
     * @return Source machine image
     * 
     */
    private String sourceMachineImage;
    /**
     * @return Source machine image encryption key when creating an instance from a machine image.
     * 
     */
    private CustomerEncryptionKeyResponse sourceMachineImageEncryptionKey;
    /**
     * @return Whether a VM has been restricted for start because Compute Engine has detected suspicious activity.
     * 
     */
    private Boolean startRestricted;
    /**
     * @return The status of the instance. One of the following values: PROVISIONING, STAGING, RUNNING, STOPPING, SUSPENDING, SUSPENDED, REPAIRING, and TERMINATED. For more information about the status of the instance, see Instance life cycle.
     * 
     */
    private String status;
    /**
     * @return An optional, human-readable explanation of the status.
     * 
     */
    private String statusMessage;
    /**
     * @return Tags to apply to this instance. Tags are used to identify valid sources or targets for network firewalls and are specified by the client during instance creation. The tags can be later modified by the setTags method. Each tag within the list must comply with RFC1035. Multiple tags can be specified via the &#39;tags.items&#39; field.
     * 
     */
    private TagsResponse tags;
    /**
     * @return URL of the zone where the instance resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
     * 
     */
    private String zone;

    private GetInstanceResult() {}
    /**
     * @return Controls for advanced machine-related behavior features.
     * 
     */
    public AdvancedMachineFeaturesResponse advancedMachineFeatures() {
        return this.advancedMachineFeatures;
    }
    /**
     * @return Allows this instance to send and receive packets with non-matching destination or source IPs. This is required if you plan to use this instance to forward routes. For more information, see Enabling IP Forwarding .
     * 
     */
    public Boolean canIpForward() {
        return this.canIpForward;
    }
    public ConfidentialInstanceConfigResponse confidentialInstanceConfig() {
        return this.confidentialInstanceConfig;
    }
    /**
     * @return The CPU platform used by this instance.
     * 
     */
    public String cpuPlatform() {
        return this.cpuPlatform;
    }
    /**
     * @return Creation timestamp in RFC3339 text format.
     * 
     */
    public String creationTimestamp() {
        return this.creationTimestamp;
    }
    /**
     * @return Whether the resource should be protected against deletion.
     * 
     */
    public Boolean deletionProtection() {
        return this.deletionProtection;
    }
    /**
     * @return An optional description of this resource. Provide this property when you create the resource.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Array of disks associated with this instance. Persistent disks must be created before you can assign them.
     * 
     */
    public List<AttachedDiskResponse> disks() {
        return this.disks;
    }
    /**
     * @return Enables display device for the instance.
     * 
     */
    public DisplayDeviceResponse displayDevice() {
        return this.displayDevice;
    }
    /**
     * @return Specifies a fingerprint for this resource, which is essentially a hash of the instance&#39;s contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update the instance. You must always provide an up-to-date fingerprint hash in order to update the instance. To see the latest fingerprint, make get() request to the instance.
     * 
     */
    public String fingerprint() {
        return this.fingerprint;
    }
    /**
     * @return A list of the type and count of accelerator cards attached to the instance.
     * 
     */
    public List<AcceleratorConfigResponse> guestAccelerators() {
        return this.guestAccelerators;
    }
    /**
     * @return Specifies the hostname of the instance. The specified hostname must be RFC1035 compliant. If hostname is not specified, the default hostname is [INSTANCE_NAME].c.[PROJECT_ID].internal when using the global DNS, and [INSTANCE_NAME].[ZONE].c.[PROJECT_ID].internal when using zonal DNS.
     * 
     */
    public String hostname() {
        return this.hostname;
    }
    /**
     * @return KeyRevocationActionType of the instance. Supported options are &#34;STOP&#34; and &#34;NONE&#34;. The default value is &#34;NONE&#34; if it is not specified.
     * 
     */
    public String keyRevocationActionType() {
        return this.keyRevocationActionType;
    }
    /**
     * @return Type of the resource. Always compute#instance for instances.
     * 
     */
    public String kind() {
        return this.kind;
    }
    /**
     * @return A fingerprint for this request, which is essentially a hash of the label&#39;s contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels. To see the latest fingerprint, make get() request to the instance.
     * 
     */
    public String labelFingerprint() {
        return this.labelFingerprint;
    }
    /**
     * @return Labels to apply to this instance. These can be later modified by the setLabels method.
     * 
     */
    public Map<String,String> labels() {
        return this.labels;
    }
    /**
     * @return Last start timestamp in RFC3339 text format.
     * 
     */
    public String lastStartTimestamp() {
        return this.lastStartTimestamp;
    }
    /**
     * @return Last stop timestamp in RFC3339 text format.
     * 
     */
    public String lastStopTimestamp() {
        return this.lastStopTimestamp;
    }
    /**
     * @return Last suspended timestamp in RFC3339 text format.
     * 
     */
    public String lastSuspendedTimestamp() {
        return this.lastSuspendedTimestamp;
    }
    /**
     * @return Full or partial URL of the machine type resource to use for this instance, in the format: zones/zone/machineTypes/machine-type. This is provided by the client when the instance is created. For example, the following is a valid partial url to a predefined machine type: zones/us-central1-f/machineTypes/n1-standard-1 To create a custom machine type, provide a URL to a machine type in the following format, where CPUS is 1 or an even number up to 32 (2, 4, 6, ... 24, etc), and MEMORY is the total memory for this instance. Memory must be a multiple of 256 MB and must be supplied in MB (e.g. 5 GB of memory is 5120 MB): zones/zone/machineTypes/custom-CPUS-MEMORY For example: zones/us-central1-f/machineTypes/custom-4-5120 For a full list of restrictions, read the Specifications for custom machine types.
     * 
     */
    public String machineType() {
        return this.machineType;
    }
    /**
     * @return The metadata key/value pairs assigned to this instance. This includes custom metadata and predefined keys.
     * 
     */
    public MetadataResponse metadata() {
        return this.metadata;
    }
    /**
     * @return Specifies a minimum CPU platform for the VM instance. Applicable values are the friendly names of CPU platforms, such as minCpuPlatform: &#34;Intel Haswell&#34; or minCpuPlatform: &#34;Intel Sandy Bridge&#34;.
     * 
     */
    public String minCpuPlatform() {
        return this.minCpuPlatform;
    }
    /**
     * @return The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return An array of network configurations for this instance. These specify how interfaces are configured to interact with other network services, such as connecting to the internet. Multiple interfaces are supported per instance.
     * 
     */
    public List<NetworkInterfaceResponse> networkInterfaces() {
        return this.networkInterfaces;
    }
    public NetworkPerformanceConfigResponse networkPerformanceConfig() {
        return this.networkPerformanceConfig;
    }
    /**
     * @return Input only. [Input Only] Additional params passed with the request, but not persisted as part of resource payload.
     * 
     */
    public InstanceParamsResponse params() {
        return this.params;
    }
    /**
     * @return The private IPv6 google access type for the VM. If not specified, use INHERIT_FROM_SUBNETWORK as default.
     * 
     */
    public String privateIpv6GoogleAccess() {
        return this.privateIpv6GoogleAccess;
    }
    /**
     * @return Specifies the reservations that this instance can consume from.
     * 
     */
    public ReservationAffinityResponse reservationAffinity() {
        return this.reservationAffinity;
    }
    /**
     * @return Resource policies applied to this instance.
     * 
     */
    public List<String> resourcePolicies() {
        return this.resourcePolicies;
    }
    /**
     * @return Reserved for future use.
     * 
     */
    public Boolean satisfiesPzs() {
        return this.satisfiesPzs;
    }
    /**
     * @return Sets the scheduling options for this instance.
     * 
     */
    public SchedulingResponse scheduling() {
        return this.scheduling;
    }
    /**
     * @return Server-defined URL for this resource.
     * 
     */
    public String selfLink() {
        return this.selfLink;
    }
    /**
     * @return A list of service accounts, with their specified scopes, authorized for this instance. Only one service account per VM instance is supported. Service accounts generate access tokens that can be accessed through the metadata server and used to authenticate applications on the instance. See Service Accounts for more information.
     * 
     */
    public List<ServiceAccountResponse> serviceAccounts() {
        return this.serviceAccounts;
    }
    public ShieldedInstanceConfigResponse shieldedInstanceConfig() {
        return this.shieldedInstanceConfig;
    }
    public ShieldedInstanceIntegrityPolicyResponse shieldedInstanceIntegrityPolicy() {
        return this.shieldedInstanceIntegrityPolicy;
    }
    /**
     * @return Source machine image
     * 
     */
    public String sourceMachineImage() {
        return this.sourceMachineImage;
    }
    /**
     * @return Source machine image encryption key when creating an instance from a machine image.
     * 
     */
    public CustomerEncryptionKeyResponse sourceMachineImageEncryptionKey() {
        return this.sourceMachineImageEncryptionKey;
    }
    /**
     * @return Whether a VM has been restricted for start because Compute Engine has detected suspicious activity.
     * 
     */
    public Boolean startRestricted() {
        return this.startRestricted;
    }
    /**
     * @return The status of the instance. One of the following values: PROVISIONING, STAGING, RUNNING, STOPPING, SUSPENDING, SUSPENDED, REPAIRING, and TERMINATED. For more information about the status of the instance, see Instance life cycle.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return An optional, human-readable explanation of the status.
     * 
     */
    public String statusMessage() {
        return this.statusMessage;
    }
    /**
     * @return Tags to apply to this instance. Tags are used to identify valid sources or targets for network firewalls and are specified by the client during instance creation. The tags can be later modified by the setTags method. Each tag within the list must comply with RFC1035. Multiple tags can be specified via the &#39;tags.items&#39; field.
     * 
     */
    public TagsResponse tags() {
        return this.tags;
    }
    /**
     * @return URL of the zone where the instance resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
     * 
     */
    public String zone() {
        return this.zone;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private AdvancedMachineFeaturesResponse advancedMachineFeatures;
        private Boolean canIpForward;
        private ConfidentialInstanceConfigResponse confidentialInstanceConfig;
        private String cpuPlatform;
        private String creationTimestamp;
        private Boolean deletionProtection;
        private String description;
        private List<AttachedDiskResponse> disks;
        private DisplayDeviceResponse displayDevice;
        private String fingerprint;
        private List<AcceleratorConfigResponse> guestAccelerators;
        private String hostname;
        private String keyRevocationActionType;
        private String kind;
        private String labelFingerprint;
        private Map<String,String> labels;
        private String lastStartTimestamp;
        private String lastStopTimestamp;
        private String lastSuspendedTimestamp;
        private String machineType;
        private MetadataResponse metadata;
        private String minCpuPlatform;
        private String name;
        private List<NetworkInterfaceResponse> networkInterfaces;
        private NetworkPerformanceConfigResponse networkPerformanceConfig;
        private InstanceParamsResponse params;
        private String privateIpv6GoogleAccess;
        private ReservationAffinityResponse reservationAffinity;
        private List<String> resourcePolicies;
        private Boolean satisfiesPzs;
        private SchedulingResponse scheduling;
        private String selfLink;
        private List<ServiceAccountResponse> serviceAccounts;
        private ShieldedInstanceConfigResponse shieldedInstanceConfig;
        private ShieldedInstanceIntegrityPolicyResponse shieldedInstanceIntegrityPolicy;
        private String sourceMachineImage;
        private CustomerEncryptionKeyResponse sourceMachineImageEncryptionKey;
        private Boolean startRestricted;
        private String status;
        private String statusMessage;
        private TagsResponse tags;
        private String zone;
        public Builder() {}
        public Builder(GetInstanceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.advancedMachineFeatures = defaults.advancedMachineFeatures;
    	      this.canIpForward = defaults.canIpForward;
    	      this.confidentialInstanceConfig = defaults.confidentialInstanceConfig;
    	      this.cpuPlatform = defaults.cpuPlatform;
    	      this.creationTimestamp = defaults.creationTimestamp;
    	      this.deletionProtection = defaults.deletionProtection;
    	      this.description = defaults.description;
    	      this.disks = defaults.disks;
    	      this.displayDevice = defaults.displayDevice;
    	      this.fingerprint = defaults.fingerprint;
    	      this.guestAccelerators = defaults.guestAccelerators;
    	      this.hostname = defaults.hostname;
    	      this.keyRevocationActionType = defaults.keyRevocationActionType;
    	      this.kind = defaults.kind;
    	      this.labelFingerprint = defaults.labelFingerprint;
    	      this.labels = defaults.labels;
    	      this.lastStartTimestamp = defaults.lastStartTimestamp;
    	      this.lastStopTimestamp = defaults.lastStopTimestamp;
    	      this.lastSuspendedTimestamp = defaults.lastSuspendedTimestamp;
    	      this.machineType = defaults.machineType;
    	      this.metadata = defaults.metadata;
    	      this.minCpuPlatform = defaults.minCpuPlatform;
    	      this.name = defaults.name;
    	      this.networkInterfaces = defaults.networkInterfaces;
    	      this.networkPerformanceConfig = defaults.networkPerformanceConfig;
    	      this.params = defaults.params;
    	      this.privateIpv6GoogleAccess = defaults.privateIpv6GoogleAccess;
    	      this.reservationAffinity = defaults.reservationAffinity;
    	      this.resourcePolicies = defaults.resourcePolicies;
    	      this.satisfiesPzs = defaults.satisfiesPzs;
    	      this.scheduling = defaults.scheduling;
    	      this.selfLink = defaults.selfLink;
    	      this.serviceAccounts = defaults.serviceAccounts;
    	      this.shieldedInstanceConfig = defaults.shieldedInstanceConfig;
    	      this.shieldedInstanceIntegrityPolicy = defaults.shieldedInstanceIntegrityPolicy;
    	      this.sourceMachineImage = defaults.sourceMachineImage;
    	      this.sourceMachineImageEncryptionKey = defaults.sourceMachineImageEncryptionKey;
    	      this.startRestricted = defaults.startRestricted;
    	      this.status = defaults.status;
    	      this.statusMessage = defaults.statusMessage;
    	      this.tags = defaults.tags;
    	      this.zone = defaults.zone;
        }

        @CustomType.Setter
        public Builder advancedMachineFeatures(AdvancedMachineFeaturesResponse advancedMachineFeatures) {
            this.advancedMachineFeatures = Objects.requireNonNull(advancedMachineFeatures);
            return this;
        }
        @CustomType.Setter
        public Builder canIpForward(Boolean canIpForward) {
            this.canIpForward = Objects.requireNonNull(canIpForward);
            return this;
        }
        @CustomType.Setter
        public Builder confidentialInstanceConfig(ConfidentialInstanceConfigResponse confidentialInstanceConfig) {
            this.confidentialInstanceConfig = Objects.requireNonNull(confidentialInstanceConfig);
            return this;
        }
        @CustomType.Setter
        public Builder cpuPlatform(String cpuPlatform) {
            this.cpuPlatform = Objects.requireNonNull(cpuPlatform);
            return this;
        }
        @CustomType.Setter
        public Builder creationTimestamp(String creationTimestamp) {
            this.creationTimestamp = Objects.requireNonNull(creationTimestamp);
            return this;
        }
        @CustomType.Setter
        public Builder deletionProtection(Boolean deletionProtection) {
            this.deletionProtection = Objects.requireNonNull(deletionProtection);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder disks(List<AttachedDiskResponse> disks) {
            this.disks = Objects.requireNonNull(disks);
            return this;
        }
        public Builder disks(AttachedDiskResponse... disks) {
            return disks(List.of(disks));
        }
        @CustomType.Setter
        public Builder displayDevice(DisplayDeviceResponse displayDevice) {
            this.displayDevice = Objects.requireNonNull(displayDevice);
            return this;
        }
        @CustomType.Setter
        public Builder fingerprint(String fingerprint) {
            this.fingerprint = Objects.requireNonNull(fingerprint);
            return this;
        }
        @CustomType.Setter
        public Builder guestAccelerators(List<AcceleratorConfigResponse> guestAccelerators) {
            this.guestAccelerators = Objects.requireNonNull(guestAccelerators);
            return this;
        }
        public Builder guestAccelerators(AcceleratorConfigResponse... guestAccelerators) {
            return guestAccelerators(List.of(guestAccelerators));
        }
        @CustomType.Setter
        public Builder hostname(String hostname) {
            this.hostname = Objects.requireNonNull(hostname);
            return this;
        }
        @CustomType.Setter
        public Builder keyRevocationActionType(String keyRevocationActionType) {
            this.keyRevocationActionType = Objects.requireNonNull(keyRevocationActionType);
            return this;
        }
        @CustomType.Setter
        public Builder kind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }
        @CustomType.Setter
        public Builder labelFingerprint(String labelFingerprint) {
            this.labelFingerprint = Objects.requireNonNull(labelFingerprint);
            return this;
        }
        @CustomType.Setter
        public Builder labels(Map<String,String> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }
        @CustomType.Setter
        public Builder lastStartTimestamp(String lastStartTimestamp) {
            this.lastStartTimestamp = Objects.requireNonNull(lastStartTimestamp);
            return this;
        }
        @CustomType.Setter
        public Builder lastStopTimestamp(String lastStopTimestamp) {
            this.lastStopTimestamp = Objects.requireNonNull(lastStopTimestamp);
            return this;
        }
        @CustomType.Setter
        public Builder lastSuspendedTimestamp(String lastSuspendedTimestamp) {
            this.lastSuspendedTimestamp = Objects.requireNonNull(lastSuspendedTimestamp);
            return this;
        }
        @CustomType.Setter
        public Builder machineType(String machineType) {
            this.machineType = Objects.requireNonNull(machineType);
            return this;
        }
        @CustomType.Setter
        public Builder metadata(MetadataResponse metadata) {
            this.metadata = Objects.requireNonNull(metadata);
            return this;
        }
        @CustomType.Setter
        public Builder minCpuPlatform(String minCpuPlatform) {
            this.minCpuPlatform = Objects.requireNonNull(minCpuPlatform);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder networkInterfaces(List<NetworkInterfaceResponse> networkInterfaces) {
            this.networkInterfaces = Objects.requireNonNull(networkInterfaces);
            return this;
        }
        public Builder networkInterfaces(NetworkInterfaceResponse... networkInterfaces) {
            return networkInterfaces(List.of(networkInterfaces));
        }
        @CustomType.Setter
        public Builder networkPerformanceConfig(NetworkPerformanceConfigResponse networkPerformanceConfig) {
            this.networkPerformanceConfig = Objects.requireNonNull(networkPerformanceConfig);
            return this;
        }
        @CustomType.Setter
        public Builder params(InstanceParamsResponse params) {
            this.params = Objects.requireNonNull(params);
            return this;
        }
        @CustomType.Setter
        public Builder privateIpv6GoogleAccess(String privateIpv6GoogleAccess) {
            this.privateIpv6GoogleAccess = Objects.requireNonNull(privateIpv6GoogleAccess);
            return this;
        }
        @CustomType.Setter
        public Builder reservationAffinity(ReservationAffinityResponse reservationAffinity) {
            this.reservationAffinity = Objects.requireNonNull(reservationAffinity);
            return this;
        }
        @CustomType.Setter
        public Builder resourcePolicies(List<String> resourcePolicies) {
            this.resourcePolicies = Objects.requireNonNull(resourcePolicies);
            return this;
        }
        public Builder resourcePolicies(String... resourcePolicies) {
            return resourcePolicies(List.of(resourcePolicies));
        }
        @CustomType.Setter
        public Builder satisfiesPzs(Boolean satisfiesPzs) {
            this.satisfiesPzs = Objects.requireNonNull(satisfiesPzs);
            return this;
        }
        @CustomType.Setter
        public Builder scheduling(SchedulingResponse scheduling) {
            this.scheduling = Objects.requireNonNull(scheduling);
            return this;
        }
        @CustomType.Setter
        public Builder selfLink(String selfLink) {
            this.selfLink = Objects.requireNonNull(selfLink);
            return this;
        }
        @CustomType.Setter
        public Builder serviceAccounts(List<ServiceAccountResponse> serviceAccounts) {
            this.serviceAccounts = Objects.requireNonNull(serviceAccounts);
            return this;
        }
        public Builder serviceAccounts(ServiceAccountResponse... serviceAccounts) {
            return serviceAccounts(List.of(serviceAccounts));
        }
        @CustomType.Setter
        public Builder shieldedInstanceConfig(ShieldedInstanceConfigResponse shieldedInstanceConfig) {
            this.shieldedInstanceConfig = Objects.requireNonNull(shieldedInstanceConfig);
            return this;
        }
        @CustomType.Setter
        public Builder shieldedInstanceIntegrityPolicy(ShieldedInstanceIntegrityPolicyResponse shieldedInstanceIntegrityPolicy) {
            this.shieldedInstanceIntegrityPolicy = Objects.requireNonNull(shieldedInstanceIntegrityPolicy);
            return this;
        }
        @CustomType.Setter
        public Builder sourceMachineImage(String sourceMachineImage) {
            this.sourceMachineImage = Objects.requireNonNull(sourceMachineImage);
            return this;
        }
        @CustomType.Setter
        public Builder sourceMachineImageEncryptionKey(CustomerEncryptionKeyResponse sourceMachineImageEncryptionKey) {
            this.sourceMachineImageEncryptionKey = Objects.requireNonNull(sourceMachineImageEncryptionKey);
            return this;
        }
        @CustomType.Setter
        public Builder startRestricted(Boolean startRestricted) {
            this.startRestricted = Objects.requireNonNull(startRestricted);
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        @CustomType.Setter
        public Builder statusMessage(String statusMessage) {
            this.statusMessage = Objects.requireNonNull(statusMessage);
            return this;
        }
        @CustomType.Setter
        public Builder tags(TagsResponse tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        @CustomType.Setter
        public Builder zone(String zone) {
            this.zone = Objects.requireNonNull(zone);
            return this;
        }
        public GetInstanceResult build() {
            final var o = new GetInstanceResult();
            o.advancedMachineFeatures = advancedMachineFeatures;
            o.canIpForward = canIpForward;
            o.confidentialInstanceConfig = confidentialInstanceConfig;
            o.cpuPlatform = cpuPlatform;
            o.creationTimestamp = creationTimestamp;
            o.deletionProtection = deletionProtection;
            o.description = description;
            o.disks = disks;
            o.displayDevice = displayDevice;
            o.fingerprint = fingerprint;
            o.guestAccelerators = guestAccelerators;
            o.hostname = hostname;
            o.keyRevocationActionType = keyRevocationActionType;
            o.kind = kind;
            o.labelFingerprint = labelFingerprint;
            o.labels = labels;
            o.lastStartTimestamp = lastStartTimestamp;
            o.lastStopTimestamp = lastStopTimestamp;
            o.lastSuspendedTimestamp = lastSuspendedTimestamp;
            o.machineType = machineType;
            o.metadata = metadata;
            o.minCpuPlatform = minCpuPlatform;
            o.name = name;
            o.networkInterfaces = networkInterfaces;
            o.networkPerformanceConfig = networkPerformanceConfig;
            o.params = params;
            o.privateIpv6GoogleAccess = privateIpv6GoogleAccess;
            o.reservationAffinity = reservationAffinity;
            o.resourcePolicies = resourcePolicies;
            o.satisfiesPzs = satisfiesPzs;
            o.scheduling = scheduling;
            o.selfLink = selfLink;
            o.serviceAccounts = serviceAccounts;
            o.shieldedInstanceConfig = shieldedInstanceConfig;
            o.shieldedInstanceIntegrityPolicy = shieldedInstanceIntegrityPolicy;
            o.sourceMachineImage = sourceMachineImage;
            o.sourceMachineImageEncryptionKey = sourceMachineImageEncryptionKey;
            o.startRestricted = startRestricted;
            o.status = status;
            o.statusMessage = statusMessage;
            o.tags = tags;
            o.zone = zone;
            return o;
        }
    }
}
