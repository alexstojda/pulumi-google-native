// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute.alpha.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class CustomErrorResponsePolicyCustomErrorResponseRuleResponse {
    /**
     * @return Valid values include: - A number between 400 and 599: For example 401 or 503, in which case the load balancer applies the policy if the error code exactly matches this value. - 5xx: Load Balancer will apply the policy if the backend service responds with any response code in the range of 500 to 599. - 4xx: Load Balancer will apply the policy if the backend service responds with any response code in the range of 400 to 499. Values must be unique within matchResponseCodes and across all errorResponseRules of CustomErrorResponsePolicy.
     * 
     */
    private List<String> matchResponseCodes;
    /**
     * @return The HTTP status code returned with the response containing the custom error content. If overrideResponseCode is not supplied, the same response code returned by the original backend bucket or backend service is returned to the client.
     * 
     */
    private Integer overrideResponseCode;
    /**
     * @return The full path to a file within backendBucket . For example: /errors/defaultError.html path must start with a leading slash. path cannot have trailing slashes. If the file is not available in backendBucket or the load balancer cannot reach the BackendBucket, a simple Not Found Error is returned to the client. The value must be from 1 to 1024 characters
     * 
     */
    private String path;

    private CustomErrorResponsePolicyCustomErrorResponseRuleResponse() {}
    /**
     * @return Valid values include: - A number between 400 and 599: For example 401 or 503, in which case the load balancer applies the policy if the error code exactly matches this value. - 5xx: Load Balancer will apply the policy if the backend service responds with any response code in the range of 500 to 599. - 4xx: Load Balancer will apply the policy if the backend service responds with any response code in the range of 400 to 499. Values must be unique within matchResponseCodes and across all errorResponseRules of CustomErrorResponsePolicy.
     * 
     */
    public List<String> matchResponseCodes() {
        return this.matchResponseCodes;
    }
    /**
     * @return The HTTP status code returned with the response containing the custom error content. If overrideResponseCode is not supplied, the same response code returned by the original backend bucket or backend service is returned to the client.
     * 
     */
    public Integer overrideResponseCode() {
        return this.overrideResponseCode;
    }
    /**
     * @return The full path to a file within backendBucket . For example: /errors/defaultError.html path must start with a leading slash. path cannot have trailing slashes. If the file is not available in backendBucket or the load balancer cannot reach the BackendBucket, a simple Not Found Error is returned to the client. The value must be from 1 to 1024 characters
     * 
     */
    public String path() {
        return this.path;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CustomErrorResponsePolicyCustomErrorResponseRuleResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> matchResponseCodes;
        private Integer overrideResponseCode;
        private String path;
        public Builder() {}
        public Builder(CustomErrorResponsePolicyCustomErrorResponseRuleResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.matchResponseCodes = defaults.matchResponseCodes;
    	      this.overrideResponseCode = defaults.overrideResponseCode;
    	      this.path = defaults.path;
        }

        @CustomType.Setter
        public Builder matchResponseCodes(List<String> matchResponseCodes) {
            this.matchResponseCodes = Objects.requireNonNull(matchResponseCodes);
            return this;
        }
        public Builder matchResponseCodes(String... matchResponseCodes) {
            return matchResponseCodes(List.of(matchResponseCodes));
        }
        @CustomType.Setter
        public Builder overrideResponseCode(Integer overrideResponseCode) {
            this.overrideResponseCode = Objects.requireNonNull(overrideResponseCode);
            return this;
        }
        @CustomType.Setter
        public Builder path(String path) {
            this.path = Objects.requireNonNull(path);
            return this;
        }
        public CustomErrorResponsePolicyCustomErrorResponseRuleResponse build() {
            final var o = new CustomErrorResponsePolicyCustomErrorResponseRuleResponse();
            o.matchResponseCodes = matchResponseCodes;
            o.overrideResponseCode = overrideResponseCode;
            o.path = path;
            return o;
        }
    }
}
