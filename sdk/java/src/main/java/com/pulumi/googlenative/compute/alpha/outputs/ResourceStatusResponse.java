// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute.alpha.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.compute.alpha.outputs.ResourceStatusSchedulingResponse;
import com.pulumi.googlenative.compute.alpha.outputs.ResourceStatusUpcomingMaintenanceResponse;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ResourceStatusResponse {
    /**
     * @return An opaque ID of the host on which the VM is running.
     * 
     */
    private String physicalHost;
    private ResourceStatusSchedulingResponse scheduling;
    private ResourceStatusUpcomingMaintenanceResponse upcomingMaintenance;

    private ResourceStatusResponse() {}
    /**
     * @return An opaque ID of the host on which the VM is running.
     * 
     */
    public String physicalHost() {
        return this.physicalHost;
    }
    public ResourceStatusSchedulingResponse scheduling() {
        return this.scheduling;
    }
    public ResourceStatusUpcomingMaintenanceResponse upcomingMaintenance() {
        return this.upcomingMaintenance;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResourceStatusResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String physicalHost;
        private ResourceStatusSchedulingResponse scheduling;
        private ResourceStatusUpcomingMaintenanceResponse upcomingMaintenance;
        public Builder() {}
        public Builder(ResourceStatusResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.physicalHost = defaults.physicalHost;
    	      this.scheduling = defaults.scheduling;
    	      this.upcomingMaintenance = defaults.upcomingMaintenance;
        }

        @CustomType.Setter
        public Builder physicalHost(String physicalHost) {
            this.physicalHost = Objects.requireNonNull(physicalHost);
            return this;
        }
        @CustomType.Setter
        public Builder scheduling(ResourceStatusSchedulingResponse scheduling) {
            this.scheduling = Objects.requireNonNull(scheduling);
            return this;
        }
        @CustomType.Setter
        public Builder upcomingMaintenance(ResourceStatusUpcomingMaintenanceResponse upcomingMaintenance) {
            this.upcomingMaintenance = Objects.requireNonNull(upcomingMaintenance);
            return this;
        }
        public ResourceStatusResponse build() {
            final var o = new ResourceStatusResponse();
            o.physicalHost = physicalHost;
            o.scheduling = scheduling;
            o.upcomingMaintenance = upcomingMaintenance;
            return o;
        }
    }
}
