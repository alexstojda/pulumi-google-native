// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.privateca.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.privateca.v1.outputs.EcKeyTypeResponse;
import com.pulumi.googlenative.privateca.v1.outputs.RsaKeyTypeResponse;
import java.util.Objects;

@CustomType
public final class AllowedKeyTypeResponse {
    /**
     * @return Represents an allowed Elliptic Curve key type.
     * 
     */
    private EcKeyTypeResponse ellipticCurve;
    /**
     * @return Represents an allowed RSA key type.
     * 
     */
    private RsaKeyTypeResponse rsa;

    private AllowedKeyTypeResponse() {}
    /**
     * @return Represents an allowed Elliptic Curve key type.
     * 
     */
    public EcKeyTypeResponse ellipticCurve() {
        return this.ellipticCurve;
    }
    /**
     * @return Represents an allowed RSA key type.
     * 
     */
    public RsaKeyTypeResponse rsa() {
        return this.rsa;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AllowedKeyTypeResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private EcKeyTypeResponse ellipticCurve;
        private RsaKeyTypeResponse rsa;
        public Builder() {}
        public Builder(AllowedKeyTypeResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ellipticCurve = defaults.ellipticCurve;
    	      this.rsa = defaults.rsa;
        }

        @CustomType.Setter
        public Builder ellipticCurve(EcKeyTypeResponse ellipticCurve) {
            this.ellipticCurve = Objects.requireNonNull(ellipticCurve);
            return this;
        }
        @CustomType.Setter
        public Builder rsa(RsaKeyTypeResponse rsa) {
            this.rsa = Objects.requireNonNull(rsa);
            return this;
        }
        public AllowedKeyTypeResponse build() {
            final var o = new AllowedKeyTypeResponse();
            o.ellipticCurve = ellipticCurve;
            o.rsa = rsa;
            return o;
        }
    }
}
