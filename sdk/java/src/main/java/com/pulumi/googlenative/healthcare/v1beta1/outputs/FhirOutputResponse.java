// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.healthcare.v1beta1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class FhirOutputResponse {
    /**
     * @return Name of the output FHIR store, which must already exist. You must grant the healthcare.fhirResources.update permission on the destination store to your project&#39;s **Cloud Healthcare Service Agent** [service account](https://cloud.google.com/healthcare/docs/how-tos/permissions-healthcare-api-gcp-products#the_cloud_healthcare_service_agent). The destination store must set `enable_update_create` to true. The destination store must use FHIR version R4. Writing these resources will consume FHIR operations quota from the project containing the source data. De-identify operation metadata is only generated for DICOM de-identification operations.
     * 
     */
    private String fhirStore;

    private FhirOutputResponse() {}
    /**
     * @return Name of the output FHIR store, which must already exist. You must grant the healthcare.fhirResources.update permission on the destination store to your project&#39;s **Cloud Healthcare Service Agent** [service account](https://cloud.google.com/healthcare/docs/how-tos/permissions-healthcare-api-gcp-products#the_cloud_healthcare_service_agent). The destination store must set `enable_update_create` to true. The destination store must use FHIR version R4. Writing these resources will consume FHIR operations quota from the project containing the source data. De-identify operation metadata is only generated for DICOM de-identification operations.
     * 
     */
    public String fhirStore() {
        return this.fhirStore;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FhirOutputResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String fhirStore;
        public Builder() {}
        public Builder(FhirOutputResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fhirStore = defaults.fhirStore;
        }

        @CustomType.Setter
        public Builder fhirStore(String fhirStore) {
            this.fhirStore = Objects.requireNonNull(fhirStore);
            return this;
        }
        public FhirOutputResponse build() {
            final var o = new FhirOutputResponse();
            o.fhirStore = fhirStore;
            return o;
        }
    }
}
