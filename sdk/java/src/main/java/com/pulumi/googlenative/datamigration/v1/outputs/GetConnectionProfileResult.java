// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.datamigration.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.datamigration.v1.outputs.CloudSqlConnectionProfileResponse;
import com.pulumi.googlenative.datamigration.v1.outputs.MySqlConnectionProfileResponse;
import com.pulumi.googlenative.datamigration.v1.outputs.PostgreSqlConnectionProfileResponse;
import com.pulumi.googlenative.datamigration.v1.outputs.StatusResponse;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetConnectionProfileResult {
    /**
     * @return A CloudSQL database connection profile.
     * 
     */
    private CloudSqlConnectionProfileResponse cloudsql;
    /**
     * @return The timestamp when the resource was created. A timestamp in RFC3339 UTC &#34;Zulu&#34; format, accurate to nanoseconds. Example: &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    private String createTime;
    /**
     * @return The connection profile display name.
     * 
     */
    private String displayName;
    /**
     * @return The error details in case of state FAILED.
     * 
     */
    private StatusResponse error;
    /**
     * @return The resource labels for connection profile to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of &#34;key&#34;: &#34;value&#34; pairs. Example: `{ &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }`.
     * 
     */
    private Map<String,String> labels;
    /**
     * @return A MySQL database connection profile.
     * 
     */
    private MySqlConnectionProfileResponse mysql;
    /**
     * @return The name of this connection profile resource in the form of projects/{project}/locations/{location}/connectionProfiles/{connectionProfile}.
     * 
     */
    private String name;
    /**
     * @return A PostgreSQL database connection profile.
     * 
     */
    private PostgreSqlConnectionProfileResponse postgresql;
    /**
     * @return The database provider.
     * 
     */
    private String provider;
    /**
     * @return The current connection profile state (e.g. DRAFT, READY, or FAILED).
     * 
     */
    private String state;
    /**
     * @return The timestamp when the resource was last updated. A timestamp in RFC3339 UTC &#34;Zulu&#34; format, accurate to nanoseconds. Example: &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    private String updateTime;

    private GetConnectionProfileResult() {}
    /**
     * @return A CloudSQL database connection profile.
     * 
     */
    public CloudSqlConnectionProfileResponse cloudsql() {
        return this.cloudsql;
    }
    /**
     * @return The timestamp when the resource was created. A timestamp in RFC3339 UTC &#34;Zulu&#34; format, accurate to nanoseconds. Example: &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return The connection profile display name.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The error details in case of state FAILED.
     * 
     */
    public StatusResponse error() {
        return this.error;
    }
    /**
     * @return The resource labels for connection profile to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of &#34;key&#34;: &#34;value&#34; pairs. Example: `{ &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }`.
     * 
     */
    public Map<String,String> labels() {
        return this.labels;
    }
    /**
     * @return A MySQL database connection profile.
     * 
     */
    public MySqlConnectionProfileResponse mysql() {
        return this.mysql;
    }
    /**
     * @return The name of this connection profile resource in the form of projects/{project}/locations/{location}/connectionProfiles/{connectionProfile}.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return A PostgreSQL database connection profile.
     * 
     */
    public PostgreSqlConnectionProfileResponse postgresql() {
        return this.postgresql;
    }
    /**
     * @return The database provider.
     * 
     */
    public String provider() {
        return this.provider;
    }
    /**
     * @return The current connection profile state (e.g. DRAFT, READY, or FAILED).
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The timestamp when the resource was last updated. A timestamp in RFC3339 UTC &#34;Zulu&#34; format, accurate to nanoseconds. Example: &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    public String updateTime() {
        return this.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConnectionProfileResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private CloudSqlConnectionProfileResponse cloudsql;
        private String createTime;
        private String displayName;
        private StatusResponse error;
        private Map<String,String> labels;
        private MySqlConnectionProfileResponse mysql;
        private String name;
        private PostgreSqlConnectionProfileResponse postgresql;
        private String provider;
        private String state;
        private String updateTime;
        public Builder() {}
        public Builder(GetConnectionProfileResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudsql = defaults.cloudsql;
    	      this.createTime = defaults.createTime;
    	      this.displayName = defaults.displayName;
    	      this.error = defaults.error;
    	      this.labels = defaults.labels;
    	      this.mysql = defaults.mysql;
    	      this.name = defaults.name;
    	      this.postgresql = defaults.postgresql;
    	      this.provider = defaults.provider;
    	      this.state = defaults.state;
    	      this.updateTime = defaults.updateTime;
        }

        @CustomType.Setter
        public Builder cloudsql(CloudSqlConnectionProfileResponse cloudsql) {
            this.cloudsql = Objects.requireNonNull(cloudsql);
            return this;
        }
        @CustomType.Setter
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder error(StatusResponse error) {
            this.error = Objects.requireNonNull(error);
            return this;
        }
        @CustomType.Setter
        public Builder labels(Map<String,String> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }
        @CustomType.Setter
        public Builder mysql(MySqlConnectionProfileResponse mysql) {
            this.mysql = Objects.requireNonNull(mysql);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder postgresql(PostgreSqlConnectionProfileResponse postgresql) {
            this.postgresql = Objects.requireNonNull(postgresql);
            return this;
        }
        @CustomType.Setter
        public Builder provider(String provider) {
            this.provider = Objects.requireNonNull(provider);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder updateTime(String updateTime) {
            this.updateTime = Objects.requireNonNull(updateTime);
            return this;
        }
        public GetConnectionProfileResult build() {
            final var o = new GetConnectionProfileResult();
            o.cloudsql = cloudsql;
            o.createTime = createTime;
            o.displayName = displayName;
            o.error = error;
            o.labels = labels;
            o.mysql = mysql;
            o.name = name;
            o.postgresql = postgresql;
            o.provider = provider;
            o.state = state;
            o.updateTime = updateTime;
            return o;
        }
    }
}
