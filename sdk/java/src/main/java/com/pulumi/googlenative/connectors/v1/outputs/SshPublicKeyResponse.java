// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.connectors.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.connectors.v1.outputs.SecretResponse;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class SshPublicKeyResponse {
    /**
     * @return Format of SSH Client cert.
     * 
     */
    private String certType;
    /**
     * @return This is an optional field used in case client has enabled multi-factor authentication
     * 
     */
    private SecretResponse password;
    /**
     * @return SSH Client Cert. It should contain both public and private key.
     * 
     */
    private SecretResponse sshClientCert;
    /**
     * @return Password (passphrase) for ssh client certificate if it has one.
     * 
     */
    private SecretResponse sshClientCertPass;
    /**
     * @return The user account used to authenticate.
     * 
     */
    private String username;

    private SshPublicKeyResponse() {}
    /**
     * @return Format of SSH Client cert.
     * 
     */
    public String certType() {
        return this.certType;
    }
    /**
     * @return This is an optional field used in case client has enabled multi-factor authentication
     * 
     */
    public SecretResponse password() {
        return this.password;
    }
    /**
     * @return SSH Client Cert. It should contain both public and private key.
     * 
     */
    public SecretResponse sshClientCert() {
        return this.sshClientCert;
    }
    /**
     * @return Password (passphrase) for ssh client certificate if it has one.
     * 
     */
    public SecretResponse sshClientCertPass() {
        return this.sshClientCertPass;
    }
    /**
     * @return The user account used to authenticate.
     * 
     */
    public String username() {
        return this.username;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SshPublicKeyResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String certType;
        private SecretResponse password;
        private SecretResponse sshClientCert;
        private SecretResponse sshClientCertPass;
        private String username;
        public Builder() {}
        public Builder(SshPublicKeyResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certType = defaults.certType;
    	      this.password = defaults.password;
    	      this.sshClientCert = defaults.sshClientCert;
    	      this.sshClientCertPass = defaults.sshClientCertPass;
    	      this.username = defaults.username;
        }

        @CustomType.Setter
        public Builder certType(String certType) {
            this.certType = Objects.requireNonNull(certType);
            return this;
        }
        @CustomType.Setter
        public Builder password(SecretResponse password) {
            this.password = Objects.requireNonNull(password);
            return this;
        }
        @CustomType.Setter
        public Builder sshClientCert(SecretResponse sshClientCert) {
            this.sshClientCert = Objects.requireNonNull(sshClientCert);
            return this;
        }
        @CustomType.Setter
        public Builder sshClientCertPass(SecretResponse sshClientCertPass) {
            this.sshClientCertPass = Objects.requireNonNull(sshClientCertPass);
            return this;
        }
        @CustomType.Setter
        public Builder username(String username) {
            this.username = Objects.requireNonNull(username);
            return this;
        }
        public SshPublicKeyResponse build() {
            final var o = new SshPublicKeyResponse();
            o.certType = certType;
            o.password = password;
            o.sshClientCert = sshClientCert;
            o.sshClientCertPass = sshClientCertPass;
            o.username = username;
            return o;
        }
    }
}
