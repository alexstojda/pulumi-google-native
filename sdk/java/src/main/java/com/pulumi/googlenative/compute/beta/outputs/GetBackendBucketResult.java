// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute.beta.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.compute.beta.outputs.BackendBucketCdnPolicyResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetBackendBucketResult {
    /**
     * @return Cloud Storage bucket name.
     * 
     */
    private String bucketName;
    /**
     * @return Cloud CDN configuration for this BackendBucket.
     * 
     */
    private BackendBucketCdnPolicyResponse cdnPolicy;
    /**
     * @return Compress text responses using Brotli or gzip compression, based on the client&#39;s Accept-Encoding header.
     * 
     */
    private String compressionMode;
    /**
     * @return Creation timestamp in RFC3339 text format.
     * 
     */
    private String creationTimestamp;
    /**
     * @return Headers that the HTTP/S load balancer should add to proxied responses.
     * 
     */
    private List<String> customResponseHeaders;
    /**
     * @return An optional textual description of the resource; provided by the client when the resource is created.
     * 
     */
    private String description;
    /**
     * @return The resource URL for the edge security policy associated with this backend bucket.
     * 
     */
    private String edgeSecurityPolicy;
    /**
     * @return If true, enable Cloud CDN for this BackendBucket.
     * 
     */
    private Boolean enableCdn;
    /**
     * @return Type of the resource.
     * 
     */
    private String kind;
    /**
     * @return Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     * 
     */
    private String name;
    /**
     * @return Server-defined URL for the resource.
     * 
     */
    private String selfLink;

    private GetBackendBucketResult() {}
    /**
     * @return Cloud Storage bucket name.
     * 
     */
    public String bucketName() {
        return this.bucketName;
    }
    /**
     * @return Cloud CDN configuration for this BackendBucket.
     * 
     */
    public BackendBucketCdnPolicyResponse cdnPolicy() {
        return this.cdnPolicy;
    }
    /**
     * @return Compress text responses using Brotli or gzip compression, based on the client&#39;s Accept-Encoding header.
     * 
     */
    public String compressionMode() {
        return this.compressionMode;
    }
    /**
     * @return Creation timestamp in RFC3339 text format.
     * 
     */
    public String creationTimestamp() {
        return this.creationTimestamp;
    }
    /**
     * @return Headers that the HTTP/S load balancer should add to proxied responses.
     * 
     */
    public List<String> customResponseHeaders() {
        return this.customResponseHeaders;
    }
    /**
     * @return An optional textual description of the resource; provided by the client when the resource is created.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The resource URL for the edge security policy associated with this backend bucket.
     * 
     */
    public String edgeSecurityPolicy() {
        return this.edgeSecurityPolicy;
    }
    /**
     * @return If true, enable Cloud CDN for this BackendBucket.
     * 
     */
    public Boolean enableCdn() {
        return this.enableCdn;
    }
    /**
     * @return Type of the resource.
     * 
     */
    public String kind() {
        return this.kind;
    }
    /**
     * @return Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Server-defined URL for the resource.
     * 
     */
    public String selfLink() {
        return this.selfLink;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBackendBucketResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String bucketName;
        private BackendBucketCdnPolicyResponse cdnPolicy;
        private String compressionMode;
        private String creationTimestamp;
        private List<String> customResponseHeaders;
        private String description;
        private String edgeSecurityPolicy;
        private Boolean enableCdn;
        private String kind;
        private String name;
        private String selfLink;
        public Builder() {}
        public Builder(GetBackendBucketResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucketName = defaults.bucketName;
    	      this.cdnPolicy = defaults.cdnPolicy;
    	      this.compressionMode = defaults.compressionMode;
    	      this.creationTimestamp = defaults.creationTimestamp;
    	      this.customResponseHeaders = defaults.customResponseHeaders;
    	      this.description = defaults.description;
    	      this.edgeSecurityPolicy = defaults.edgeSecurityPolicy;
    	      this.enableCdn = defaults.enableCdn;
    	      this.kind = defaults.kind;
    	      this.name = defaults.name;
    	      this.selfLink = defaults.selfLink;
        }

        @CustomType.Setter
        public Builder bucketName(String bucketName) {
            this.bucketName = Objects.requireNonNull(bucketName);
            return this;
        }
        @CustomType.Setter
        public Builder cdnPolicy(BackendBucketCdnPolicyResponse cdnPolicy) {
            this.cdnPolicy = Objects.requireNonNull(cdnPolicy);
            return this;
        }
        @CustomType.Setter
        public Builder compressionMode(String compressionMode) {
            this.compressionMode = Objects.requireNonNull(compressionMode);
            return this;
        }
        @CustomType.Setter
        public Builder creationTimestamp(String creationTimestamp) {
            this.creationTimestamp = Objects.requireNonNull(creationTimestamp);
            return this;
        }
        @CustomType.Setter
        public Builder customResponseHeaders(List<String> customResponseHeaders) {
            this.customResponseHeaders = Objects.requireNonNull(customResponseHeaders);
            return this;
        }
        public Builder customResponseHeaders(String... customResponseHeaders) {
            return customResponseHeaders(List.of(customResponseHeaders));
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder edgeSecurityPolicy(String edgeSecurityPolicy) {
            this.edgeSecurityPolicy = Objects.requireNonNull(edgeSecurityPolicy);
            return this;
        }
        @CustomType.Setter
        public Builder enableCdn(Boolean enableCdn) {
            this.enableCdn = Objects.requireNonNull(enableCdn);
            return this;
        }
        @CustomType.Setter
        public Builder kind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder selfLink(String selfLink) {
            this.selfLink = Objects.requireNonNull(selfLink);
            return this;
        }
        public GetBackendBucketResult build() {
            final var o = new GetBackendBucketResult();
            o.bucketName = bucketName;
            o.cdnPolicy = cdnPolicy;
            o.compressionMode = compressionMode;
            o.creationTimestamp = creationTimestamp;
            o.customResponseHeaders = customResponseHeaders;
            o.description = description;
            o.edgeSecurityPolicy = edgeSecurityPolicy;
            o.enableCdn = enableCdn;
            o.kind = kind;
            o.name = name;
            o.selfLink = selfLink;
            return o;
        }
    }
}
