// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.transcoder.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.transcoder.v1.outputs.TextMappingResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class TextStreamResponse {
    /**
     * @return The codec for this text stream. The default is `webvtt`. Supported text codecs: - `srt` - `ttml` - `cea608` - `cea708` - `webvtt`
     * 
     */
    private String codec;
    /**
     * @return The mapping for the `Job.edit_list` atoms with text `EditAtom.inputs`.
     * 
     */
    private List<TextMappingResponse> mapping;

    private TextStreamResponse() {}
    /**
     * @return The codec for this text stream. The default is `webvtt`. Supported text codecs: - `srt` - `ttml` - `cea608` - `cea708` - `webvtt`
     * 
     */
    public String codec() {
        return this.codec;
    }
    /**
     * @return The mapping for the `Job.edit_list` atoms with text `EditAtom.inputs`.
     * 
     */
    public List<TextMappingResponse> mapping() {
        return this.mapping;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TextStreamResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String codec;
        private List<TextMappingResponse> mapping;
        public Builder() {}
        public Builder(TextStreamResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.codec = defaults.codec;
    	      this.mapping = defaults.mapping;
        }

        @CustomType.Setter
        public Builder codec(String codec) {
            this.codec = Objects.requireNonNull(codec);
            return this;
        }
        @CustomType.Setter
        public Builder mapping(List<TextMappingResponse> mapping) {
            this.mapping = Objects.requireNonNull(mapping);
            return this;
        }
        public Builder mapping(TextMappingResponse... mapping) {
            return mapping(List.of(mapping));
        }
        public TextStreamResponse build() {
            final var o = new TextStreamResponse();
            o.codec = codec;
            o.mapping = mapping;
            return o;
        }
    }
}
