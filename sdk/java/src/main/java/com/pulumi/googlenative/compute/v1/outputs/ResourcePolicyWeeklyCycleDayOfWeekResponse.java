// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ResourcePolicyWeeklyCycleDayOfWeekResponse {
    /**
     * @return Defines a schedule that runs on specific days of the week. Specify one or more days. The following options are available: MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY.
     * 
     */
    private String day;
    /**
     * @return [Output only] Duration of the time window, automatically chosen to be smallest possible in the given scenario.
     * 
     */
    private String duration;
    /**
     * @return Time within the window to start the operations. It must be in format &#34;HH:MM&#34;, where HH : [00-23] and MM : [00-00] GMT.
     * 
     */
    private String startTime;

    private ResourcePolicyWeeklyCycleDayOfWeekResponse() {}
    /**
     * @return Defines a schedule that runs on specific days of the week. Specify one or more days. The following options are available: MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY.
     * 
     */
    public String day() {
        return this.day;
    }
    /**
     * @return [Output only] Duration of the time window, automatically chosen to be smallest possible in the given scenario.
     * 
     */
    public String duration() {
        return this.duration;
    }
    /**
     * @return Time within the window to start the operations. It must be in format &#34;HH:MM&#34;, where HH : [00-23] and MM : [00-00] GMT.
     * 
     */
    public String startTime() {
        return this.startTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResourcePolicyWeeklyCycleDayOfWeekResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String day;
        private String duration;
        private String startTime;
        public Builder() {}
        public Builder(ResourcePolicyWeeklyCycleDayOfWeekResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.day = defaults.day;
    	      this.duration = defaults.duration;
    	      this.startTime = defaults.startTime;
        }

        @CustomType.Setter
        public Builder day(String day) {
            this.day = Objects.requireNonNull(day);
            return this;
        }
        @CustomType.Setter
        public Builder duration(String duration) {
            this.duration = Objects.requireNonNull(duration);
            return this;
        }
        @CustomType.Setter
        public Builder startTime(String startTime) {
            this.startTime = Objects.requireNonNull(startTime);
            return this;
        }
        public ResourcePolicyWeeklyCycleDayOfWeekResponse build() {
            final var o = new ResourcePolicyWeeklyCycleDayOfWeekResponse();
            o.day = day;
            o.duration = duration;
            o.startTime = startTime;
            return o;
        }
    }
}
