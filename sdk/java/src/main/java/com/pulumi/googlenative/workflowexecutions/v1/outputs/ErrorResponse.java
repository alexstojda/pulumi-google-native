// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.workflowexecutions.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.workflowexecutions.v1.outputs.StackTraceResponse;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ErrorResponse {
    /**
     * @return Human-readable stack trace string.
     * 
     */
    private String context;
    /**
     * @return Error message and data returned represented as a JSON string.
     * 
     */
    private String payload;
    /**
     * @return Stack trace with detailed information of where error was generated.
     * 
     */
    private StackTraceResponse stackTrace;

    private ErrorResponse() {}
    /**
     * @return Human-readable stack trace string.
     * 
     */
    public String context() {
        return this.context;
    }
    /**
     * @return Error message and data returned represented as a JSON string.
     * 
     */
    public String payload() {
        return this.payload;
    }
    /**
     * @return Stack trace with detailed information of where error was generated.
     * 
     */
    public StackTraceResponse stackTrace() {
        return this.stackTrace;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ErrorResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String context;
        private String payload;
        private StackTraceResponse stackTrace;
        public Builder() {}
        public Builder(ErrorResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.context = defaults.context;
    	      this.payload = defaults.payload;
    	      this.stackTrace = defaults.stackTrace;
        }

        @CustomType.Setter
        public Builder context(String context) {
            this.context = Objects.requireNonNull(context);
            return this;
        }
        @CustomType.Setter
        public Builder payload(String payload) {
            this.payload = Objects.requireNonNull(payload);
            return this;
        }
        @CustomType.Setter
        public Builder stackTrace(StackTraceResponse stackTrace) {
            this.stackTrace = Objects.requireNonNull(stackTrace);
            return this;
        }
        public ErrorResponse build() {
            final var o = new ErrorResponse();
            o.context = context;
            o.payload = payload;
            o.stackTrace = stackTrace;
            return o;
        }
    }
}
