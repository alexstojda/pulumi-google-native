// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudidentity.v1beta1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.cloudidentity.v1beta1.outputs.AndroidAttributesResponse;
import com.pulumi.googlenative.cloudidentity.v1beta1.outputs.EndpointVerificationSpecificAttributesResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDeviceResult {
    /**
     * @return Attributes specific to Android devices.
     * 
     */
    private AndroidAttributesResponse androidSpecificAttributes;
    /**
     * @return Asset tag of the device.
     * 
     */
    private String assetTag;
    /**
     * @return Baseband version of the device.
     * 
     */
    private String basebandVersion;
    /**
     * @return Device bootloader version. Example: 0.6.7.
     * 
     */
    private String bootloaderVersion;
    /**
     * @return Device brand. Example: Samsung.
     * 
     */
    private String brand;
    /**
     * @return Build number of the device.
     * 
     */
    private String buildNumber;
    /**
     * @return Represents whether the Device is compromised.
     * 
     */
    private String compromisedState;
    /**
     * @return When the Company-Owned device was imported. This field is empty for BYOD devices.
     * 
     */
    private String createTime;
    /**
     * @return Unique identifier for the device.
     * 
     */
    private String deviceId;
    /**
     * @return Type of device.
     * 
     */
    private String deviceType;
    /**
     * @return Whether developer options is enabled on device.
     * 
     */
    private Boolean enabledDeveloperOptions;
    /**
     * @return Whether USB debugging is enabled on device.
     * 
     */
    private Boolean enabledUsbDebugging;
    /**
     * @return Device encryption state.
     * 
     */
    private String encryptionState;
    /**
     * @return Attributes specific to Endpoint Verification devices.
     * 
     */
    private EndpointVerificationSpecificAttributesResponse endpointVerificationSpecificAttributes;
    /**
     * @return IMEI number of device if GSM device; empty otherwise.
     * 
     */
    private String imei;
    /**
     * @return Kernel version of the device.
     * 
     */
    private String kernelVersion;
    /**
     * @return Most recent time when device synced with this service.
     * 
     */
    private String lastSyncTime;
    /**
     * @return Management state of the device
     * 
     */
    private String managementState;
    /**
     * @return Device manufacturer. Example: Motorola.
     * 
     */
    private String manufacturer;
    /**
     * @return MEID number of device if CDMA device; empty otherwise.
     * 
     */
    private String meid;
    /**
     * @return Model name of device. Example: Pixel 3.
     * 
     */
    private String model;
    /**
     * @return [Resource name](https://cloud.google.com/apis/design/resource_names) of the Device in format: `devices/{device_id}`, where device_id is the unique id assigned to the Device.
     * 
     */
    private String name;
    /**
     * @return Mobile or network operator of device, if available.
     * 
     */
    private String networkOperator;
    /**
     * @return OS version of the device. Example: Android 8.1.0.
     * 
     */
    private String osVersion;
    /**
     * @return Domain name for Google accounts on device. Type for other accounts on device. On Android, will only be populated if |ownership_privilege| is |PROFILE_OWNER| or |DEVICE_OWNER|. Does not include the account signed in to the device policy app if that account&#39;s domain has only one account. Examples: &#34;com.example&#34;, &#34;xyz.com&#34;.
     * 
     */
    private List<String> otherAccounts;
    /**
     * @return Whether the device is owned by the company or an individual
     * 
     */
    private String ownerType;
    /**
     * @return OS release version. Example: 6.0.
     * 
     */
    private String releaseVersion;
    /**
     * @return OS security patch update time on device.
     * 
     */
    private String securityPatchTime;
    /**
     * @return Serial Number of device. Example: HT82V1A01076.
     * 
     */
    private String serialNumber;
    /**
     * @return WiFi MAC addresses of device.
     * 
     */
    private List<String> wifiMacAddresses;

    private GetDeviceResult() {}
    /**
     * @return Attributes specific to Android devices.
     * 
     */
    public AndroidAttributesResponse androidSpecificAttributes() {
        return this.androidSpecificAttributes;
    }
    /**
     * @return Asset tag of the device.
     * 
     */
    public String assetTag() {
        return this.assetTag;
    }
    /**
     * @return Baseband version of the device.
     * 
     */
    public String basebandVersion() {
        return this.basebandVersion;
    }
    /**
     * @return Device bootloader version. Example: 0.6.7.
     * 
     */
    public String bootloaderVersion() {
        return this.bootloaderVersion;
    }
    /**
     * @return Device brand. Example: Samsung.
     * 
     */
    public String brand() {
        return this.brand;
    }
    /**
     * @return Build number of the device.
     * 
     */
    public String buildNumber() {
        return this.buildNumber;
    }
    /**
     * @return Represents whether the Device is compromised.
     * 
     */
    public String compromisedState() {
        return this.compromisedState;
    }
    /**
     * @return When the Company-Owned device was imported. This field is empty for BYOD devices.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return Unique identifier for the device.
     * 
     */
    public String deviceId() {
        return this.deviceId;
    }
    /**
     * @return Type of device.
     * 
     */
    public String deviceType() {
        return this.deviceType;
    }
    /**
     * @return Whether developer options is enabled on device.
     * 
     */
    public Boolean enabledDeveloperOptions() {
        return this.enabledDeveloperOptions;
    }
    /**
     * @return Whether USB debugging is enabled on device.
     * 
     */
    public Boolean enabledUsbDebugging() {
        return this.enabledUsbDebugging;
    }
    /**
     * @return Device encryption state.
     * 
     */
    public String encryptionState() {
        return this.encryptionState;
    }
    /**
     * @return Attributes specific to Endpoint Verification devices.
     * 
     */
    public EndpointVerificationSpecificAttributesResponse endpointVerificationSpecificAttributes() {
        return this.endpointVerificationSpecificAttributes;
    }
    /**
     * @return IMEI number of device if GSM device; empty otherwise.
     * 
     */
    public String imei() {
        return this.imei;
    }
    /**
     * @return Kernel version of the device.
     * 
     */
    public String kernelVersion() {
        return this.kernelVersion;
    }
    /**
     * @return Most recent time when device synced with this service.
     * 
     */
    public String lastSyncTime() {
        return this.lastSyncTime;
    }
    /**
     * @return Management state of the device
     * 
     */
    public String managementState() {
        return this.managementState;
    }
    /**
     * @return Device manufacturer. Example: Motorola.
     * 
     */
    public String manufacturer() {
        return this.manufacturer;
    }
    /**
     * @return MEID number of device if CDMA device; empty otherwise.
     * 
     */
    public String meid() {
        return this.meid;
    }
    /**
     * @return Model name of device. Example: Pixel 3.
     * 
     */
    public String model() {
        return this.model;
    }
    /**
     * @return [Resource name](https://cloud.google.com/apis/design/resource_names) of the Device in format: `devices/{device_id}`, where device_id is the unique id assigned to the Device.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Mobile or network operator of device, if available.
     * 
     */
    public String networkOperator() {
        return this.networkOperator;
    }
    /**
     * @return OS version of the device. Example: Android 8.1.0.
     * 
     */
    public String osVersion() {
        return this.osVersion;
    }
    /**
     * @return Domain name for Google accounts on device. Type for other accounts on device. On Android, will only be populated if |ownership_privilege| is |PROFILE_OWNER| or |DEVICE_OWNER|. Does not include the account signed in to the device policy app if that account&#39;s domain has only one account. Examples: &#34;com.example&#34;, &#34;xyz.com&#34;.
     * 
     */
    public List<String> otherAccounts() {
        return this.otherAccounts;
    }
    /**
     * @return Whether the device is owned by the company or an individual
     * 
     */
    public String ownerType() {
        return this.ownerType;
    }
    /**
     * @return OS release version. Example: 6.0.
     * 
     */
    public String releaseVersion() {
        return this.releaseVersion;
    }
    /**
     * @return OS security patch update time on device.
     * 
     */
    public String securityPatchTime() {
        return this.securityPatchTime;
    }
    /**
     * @return Serial Number of device. Example: HT82V1A01076.
     * 
     */
    public String serialNumber() {
        return this.serialNumber;
    }
    /**
     * @return WiFi MAC addresses of device.
     * 
     */
    public List<String> wifiMacAddresses() {
        return this.wifiMacAddresses;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDeviceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private AndroidAttributesResponse androidSpecificAttributes;
        private String assetTag;
        private String basebandVersion;
        private String bootloaderVersion;
        private String brand;
        private String buildNumber;
        private String compromisedState;
        private String createTime;
        private String deviceId;
        private String deviceType;
        private Boolean enabledDeveloperOptions;
        private Boolean enabledUsbDebugging;
        private String encryptionState;
        private EndpointVerificationSpecificAttributesResponse endpointVerificationSpecificAttributes;
        private String imei;
        private String kernelVersion;
        private String lastSyncTime;
        private String managementState;
        private String manufacturer;
        private String meid;
        private String model;
        private String name;
        private String networkOperator;
        private String osVersion;
        private List<String> otherAccounts;
        private String ownerType;
        private String releaseVersion;
        private String securityPatchTime;
        private String serialNumber;
        private List<String> wifiMacAddresses;
        public Builder() {}
        public Builder(GetDeviceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.androidSpecificAttributes = defaults.androidSpecificAttributes;
    	      this.assetTag = defaults.assetTag;
    	      this.basebandVersion = defaults.basebandVersion;
    	      this.bootloaderVersion = defaults.bootloaderVersion;
    	      this.brand = defaults.brand;
    	      this.buildNumber = defaults.buildNumber;
    	      this.compromisedState = defaults.compromisedState;
    	      this.createTime = defaults.createTime;
    	      this.deviceId = defaults.deviceId;
    	      this.deviceType = defaults.deviceType;
    	      this.enabledDeveloperOptions = defaults.enabledDeveloperOptions;
    	      this.enabledUsbDebugging = defaults.enabledUsbDebugging;
    	      this.encryptionState = defaults.encryptionState;
    	      this.endpointVerificationSpecificAttributes = defaults.endpointVerificationSpecificAttributes;
    	      this.imei = defaults.imei;
    	      this.kernelVersion = defaults.kernelVersion;
    	      this.lastSyncTime = defaults.lastSyncTime;
    	      this.managementState = defaults.managementState;
    	      this.manufacturer = defaults.manufacturer;
    	      this.meid = defaults.meid;
    	      this.model = defaults.model;
    	      this.name = defaults.name;
    	      this.networkOperator = defaults.networkOperator;
    	      this.osVersion = defaults.osVersion;
    	      this.otherAccounts = defaults.otherAccounts;
    	      this.ownerType = defaults.ownerType;
    	      this.releaseVersion = defaults.releaseVersion;
    	      this.securityPatchTime = defaults.securityPatchTime;
    	      this.serialNumber = defaults.serialNumber;
    	      this.wifiMacAddresses = defaults.wifiMacAddresses;
        }

        @CustomType.Setter
        public Builder androidSpecificAttributes(AndroidAttributesResponse androidSpecificAttributes) {
            this.androidSpecificAttributes = Objects.requireNonNull(androidSpecificAttributes);
            return this;
        }
        @CustomType.Setter
        public Builder assetTag(String assetTag) {
            this.assetTag = Objects.requireNonNull(assetTag);
            return this;
        }
        @CustomType.Setter
        public Builder basebandVersion(String basebandVersion) {
            this.basebandVersion = Objects.requireNonNull(basebandVersion);
            return this;
        }
        @CustomType.Setter
        public Builder bootloaderVersion(String bootloaderVersion) {
            this.bootloaderVersion = Objects.requireNonNull(bootloaderVersion);
            return this;
        }
        @CustomType.Setter
        public Builder brand(String brand) {
            this.brand = Objects.requireNonNull(brand);
            return this;
        }
        @CustomType.Setter
        public Builder buildNumber(String buildNumber) {
            this.buildNumber = Objects.requireNonNull(buildNumber);
            return this;
        }
        @CustomType.Setter
        public Builder compromisedState(String compromisedState) {
            this.compromisedState = Objects.requireNonNull(compromisedState);
            return this;
        }
        @CustomType.Setter
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        @CustomType.Setter
        public Builder deviceId(String deviceId) {
            this.deviceId = Objects.requireNonNull(deviceId);
            return this;
        }
        @CustomType.Setter
        public Builder deviceType(String deviceType) {
            this.deviceType = Objects.requireNonNull(deviceType);
            return this;
        }
        @CustomType.Setter
        public Builder enabledDeveloperOptions(Boolean enabledDeveloperOptions) {
            this.enabledDeveloperOptions = Objects.requireNonNull(enabledDeveloperOptions);
            return this;
        }
        @CustomType.Setter
        public Builder enabledUsbDebugging(Boolean enabledUsbDebugging) {
            this.enabledUsbDebugging = Objects.requireNonNull(enabledUsbDebugging);
            return this;
        }
        @CustomType.Setter
        public Builder encryptionState(String encryptionState) {
            this.encryptionState = Objects.requireNonNull(encryptionState);
            return this;
        }
        @CustomType.Setter
        public Builder endpointVerificationSpecificAttributes(EndpointVerificationSpecificAttributesResponse endpointVerificationSpecificAttributes) {
            this.endpointVerificationSpecificAttributes = Objects.requireNonNull(endpointVerificationSpecificAttributes);
            return this;
        }
        @CustomType.Setter
        public Builder imei(String imei) {
            this.imei = Objects.requireNonNull(imei);
            return this;
        }
        @CustomType.Setter
        public Builder kernelVersion(String kernelVersion) {
            this.kernelVersion = Objects.requireNonNull(kernelVersion);
            return this;
        }
        @CustomType.Setter
        public Builder lastSyncTime(String lastSyncTime) {
            this.lastSyncTime = Objects.requireNonNull(lastSyncTime);
            return this;
        }
        @CustomType.Setter
        public Builder managementState(String managementState) {
            this.managementState = Objects.requireNonNull(managementState);
            return this;
        }
        @CustomType.Setter
        public Builder manufacturer(String manufacturer) {
            this.manufacturer = Objects.requireNonNull(manufacturer);
            return this;
        }
        @CustomType.Setter
        public Builder meid(String meid) {
            this.meid = Objects.requireNonNull(meid);
            return this;
        }
        @CustomType.Setter
        public Builder model(String model) {
            this.model = Objects.requireNonNull(model);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder networkOperator(String networkOperator) {
            this.networkOperator = Objects.requireNonNull(networkOperator);
            return this;
        }
        @CustomType.Setter
        public Builder osVersion(String osVersion) {
            this.osVersion = Objects.requireNonNull(osVersion);
            return this;
        }
        @CustomType.Setter
        public Builder otherAccounts(List<String> otherAccounts) {
            this.otherAccounts = Objects.requireNonNull(otherAccounts);
            return this;
        }
        public Builder otherAccounts(String... otherAccounts) {
            return otherAccounts(List.of(otherAccounts));
        }
        @CustomType.Setter
        public Builder ownerType(String ownerType) {
            this.ownerType = Objects.requireNonNull(ownerType);
            return this;
        }
        @CustomType.Setter
        public Builder releaseVersion(String releaseVersion) {
            this.releaseVersion = Objects.requireNonNull(releaseVersion);
            return this;
        }
        @CustomType.Setter
        public Builder securityPatchTime(String securityPatchTime) {
            this.securityPatchTime = Objects.requireNonNull(securityPatchTime);
            return this;
        }
        @CustomType.Setter
        public Builder serialNumber(String serialNumber) {
            this.serialNumber = Objects.requireNonNull(serialNumber);
            return this;
        }
        @CustomType.Setter
        public Builder wifiMacAddresses(List<String> wifiMacAddresses) {
            this.wifiMacAddresses = Objects.requireNonNull(wifiMacAddresses);
            return this;
        }
        public Builder wifiMacAddresses(String... wifiMacAddresses) {
            return wifiMacAddresses(List.of(wifiMacAddresses));
        }
        public GetDeviceResult build() {
            final var o = new GetDeviceResult();
            o.androidSpecificAttributes = androidSpecificAttributes;
            o.assetTag = assetTag;
            o.basebandVersion = basebandVersion;
            o.bootloaderVersion = bootloaderVersion;
            o.brand = brand;
            o.buildNumber = buildNumber;
            o.compromisedState = compromisedState;
            o.createTime = createTime;
            o.deviceId = deviceId;
            o.deviceType = deviceType;
            o.enabledDeveloperOptions = enabledDeveloperOptions;
            o.enabledUsbDebugging = enabledUsbDebugging;
            o.encryptionState = encryptionState;
            o.endpointVerificationSpecificAttributes = endpointVerificationSpecificAttributes;
            o.imei = imei;
            o.kernelVersion = kernelVersion;
            o.lastSyncTime = lastSyncTime;
            o.managementState = managementState;
            o.manufacturer = manufacturer;
            o.meid = meid;
            o.model = model;
            o.name = name;
            o.networkOperator = networkOperator;
            o.osVersion = osVersion;
            o.otherAccounts = otherAccounts;
            o.ownerType = ownerType;
            o.releaseVersion = releaseVersion;
            o.securityPatchTime = securityPatchTime;
            o.serialNumber = serialNumber;
            o.wifiMacAddresses = wifiMacAddresses;
            return o;
        }
    }
}
