// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.healthcare.v1beta1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class AnnotationConfigResponse {
    /**
     * @return The name of the annotation store, in the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/annotationStores/{annotation_store_id}`). * The destination annotation store must be in the same project as the source data. De-identifying data across multiple projects is not supported. * The destination annotation store must exist when using DeidentifyDicomStore or DeidentifyFhirStore. DeidentifyDataset automatically creates the destination annotation store.
     * 
     */
    private String annotationStoreName;
    /**
     * @return If set to true, the sensitive texts are included in SensitiveTextAnnotation of Annotation.
     * 
     */
    private Boolean storeQuote;

    private AnnotationConfigResponse() {}
    /**
     * @return The name of the annotation store, in the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/annotationStores/{annotation_store_id}`). * The destination annotation store must be in the same project as the source data. De-identifying data across multiple projects is not supported. * The destination annotation store must exist when using DeidentifyDicomStore or DeidentifyFhirStore. DeidentifyDataset automatically creates the destination annotation store.
     * 
     */
    public String annotationStoreName() {
        return this.annotationStoreName;
    }
    /**
     * @return If set to true, the sensitive texts are included in SensitiveTextAnnotation of Annotation.
     * 
     */
    public Boolean storeQuote() {
        return this.storeQuote;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AnnotationConfigResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String annotationStoreName;
        private Boolean storeQuote;
        public Builder() {}
        public Builder(AnnotationConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.annotationStoreName = defaults.annotationStoreName;
    	      this.storeQuote = defaults.storeQuote;
        }

        @CustomType.Setter
        public Builder annotationStoreName(String annotationStoreName) {
            this.annotationStoreName = Objects.requireNonNull(annotationStoreName);
            return this;
        }
        @CustomType.Setter
        public Builder storeQuote(Boolean storeQuote) {
            this.storeQuote = Objects.requireNonNull(storeQuote);
            return this;
        }
        public AnnotationConfigResponse build() {
            final var o = new AnnotationConfigResponse();
            o.annotationStoreName = annotationStoreName;
            o.storeQuote = storeQuote;
            return o;
        }
    }
}
