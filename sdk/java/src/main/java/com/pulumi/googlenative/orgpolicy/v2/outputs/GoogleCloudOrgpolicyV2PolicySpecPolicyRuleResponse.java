// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.orgpolicy.v2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.orgpolicy.v2.outputs.GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValuesResponse;
import com.pulumi.googlenative.orgpolicy.v2.outputs.GoogleTypeExprResponse;
import java.lang.Boolean;
import java.util.Objects;

@CustomType
public final class GoogleCloudOrgpolicyV2PolicySpecPolicyRuleResponse {
    /**
     * @return Setting this to true means that all values are allowed. This field can be set only in Policies for list constraints.
     * 
     */
    private Boolean allowAll;
    /**
     * @return A condition which determines whether this rule is used in the evaluation of the policy. When set, the `expression` field in the `Expr&#39; must include from 1 to 10 subexpressions, joined by the &#34;||&#34; or &#34;&amp;&amp;&#34; operators. Each subexpression must be of the form &#34;resource.matchTag(&#39;/tag_key_short_name, &#39;tag_value_short_name&#39;)&#34;. or &#34;resource.matchTagId(&#39;tagKeys/key_id&#39;, &#39;tagValues/value_id&#39;)&#34;. where key_name and value_name are the resource names for Label Keys and Values. These names are available from the Tag Manager Service. An example expression is: &#34;resource.matchTag(&#39;123456789/environment, &#39;prod&#39;)&#34;. or &#34;resource.matchTagId(&#39;tagKeys/123&#39;, &#39;tagValues/456&#39;)&#34;.
     * 
     */
    private GoogleTypeExprResponse condition;
    /**
     * @return Setting this to true means that all values are denied. This field can be set only in Policies for list constraints.
     * 
     */
    private Boolean denyAll;
    /**
     * @return If `true`, then the `Policy` is enforced. If `false`, then any configuration is acceptable. This field can be set only in Policies for boolean constraints.
     * 
     */
    private Boolean enforce;
    /**
     * @return List of values to be used for this PolicyRule. This field can be set only in Policies for list constraints.
     * 
     */
    private GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValuesResponse values;

    private GoogleCloudOrgpolicyV2PolicySpecPolicyRuleResponse() {}
    /**
     * @return Setting this to true means that all values are allowed. This field can be set only in Policies for list constraints.
     * 
     */
    public Boolean allowAll() {
        return this.allowAll;
    }
    /**
     * @return A condition which determines whether this rule is used in the evaluation of the policy. When set, the `expression` field in the `Expr&#39; must include from 1 to 10 subexpressions, joined by the &#34;||&#34; or &#34;&amp;&amp;&#34; operators. Each subexpression must be of the form &#34;resource.matchTag(&#39;/tag_key_short_name, &#39;tag_value_short_name&#39;)&#34;. or &#34;resource.matchTagId(&#39;tagKeys/key_id&#39;, &#39;tagValues/value_id&#39;)&#34;. where key_name and value_name are the resource names for Label Keys and Values. These names are available from the Tag Manager Service. An example expression is: &#34;resource.matchTag(&#39;123456789/environment, &#39;prod&#39;)&#34;. or &#34;resource.matchTagId(&#39;tagKeys/123&#39;, &#39;tagValues/456&#39;)&#34;.
     * 
     */
    public GoogleTypeExprResponse condition() {
        return this.condition;
    }
    /**
     * @return Setting this to true means that all values are denied. This field can be set only in Policies for list constraints.
     * 
     */
    public Boolean denyAll() {
        return this.denyAll;
    }
    /**
     * @return If `true`, then the `Policy` is enforced. If `false`, then any configuration is acceptable. This field can be set only in Policies for boolean constraints.
     * 
     */
    public Boolean enforce() {
        return this.enforce;
    }
    /**
     * @return List of values to be used for this PolicyRule. This field can be set only in Policies for list constraints.
     * 
     */
    public GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValuesResponse values() {
        return this.values;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudOrgpolicyV2PolicySpecPolicyRuleResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean allowAll;
        private GoogleTypeExprResponse condition;
        private Boolean denyAll;
        private Boolean enforce;
        private GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValuesResponse values;
        public Builder() {}
        public Builder(GoogleCloudOrgpolicyV2PolicySpecPolicyRuleResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowAll = defaults.allowAll;
    	      this.condition = defaults.condition;
    	      this.denyAll = defaults.denyAll;
    	      this.enforce = defaults.enforce;
    	      this.values = defaults.values;
        }

        @CustomType.Setter
        public Builder allowAll(Boolean allowAll) {
            this.allowAll = Objects.requireNonNull(allowAll);
            return this;
        }
        @CustomType.Setter
        public Builder condition(GoogleTypeExprResponse condition) {
            this.condition = Objects.requireNonNull(condition);
            return this;
        }
        @CustomType.Setter
        public Builder denyAll(Boolean denyAll) {
            this.denyAll = Objects.requireNonNull(denyAll);
            return this;
        }
        @CustomType.Setter
        public Builder enforce(Boolean enforce) {
            this.enforce = Objects.requireNonNull(enforce);
            return this;
        }
        @CustomType.Setter
        public Builder values(GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValuesResponse values) {
            this.values = Objects.requireNonNull(values);
            return this;
        }
        public GoogleCloudOrgpolicyV2PolicySpecPolicyRuleResponse build() {
            final var o = new GoogleCloudOrgpolicyV2PolicySpecPolicyRuleResponse();
            o.allowAll = allowAll;
            o.condition = condition;
            o.denyAll = denyAll;
            o.enforce = enforce;
            o.values = values;
            return o;
        }
    }
}
