// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dataproc.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.dataproc.v1.outputs.GkeNodePoolAcceleratorConfigResponse;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GkeNodeConfigResponse {
    /**
     * @return Optional. A list of hardware accelerators (https://cloud.google.com/compute/docs/gpus) to attach to each node.
     * 
     */
    private List<GkeNodePoolAcceleratorConfigResponse> accelerators;
    /**
     * @return Optional. The Customer Managed Encryption Key (CMEK) (https://cloud.google.com/kubernetes-engine/docs/how-to/using-cmek) used to encrypt the boot disk attached to each node in the node pool. Specify the key using the following format: projects/KEY_PROJECT_ID/locations/LOCATION /keyRings/RING_NAME/cryptoKeys/KEY_NAME.
     * 
     */
    private String bootDiskKmsKey;
    /**
     * @return Optional. The number of local SSD disks to attach to the node, which is limited by the maximum number of disks allowable per zone (see Adding Local SSDs (https://cloud.google.com/compute/docs/disks/local-ssd)).
     * 
     */
    private Integer localSsdCount;
    /**
     * @return Optional. The name of a Compute Engine machine type (https://cloud.google.com/compute/docs/machine-types).
     * 
     */
    private String machineType;
    /**
     * @return Optional. Minimum CPU platform (https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform) to be used by this instance. The instance may be scheduled on the specified or a newer CPU platform. Specify the friendly names of CPU platforms, such as &#34;Intel Haswell&#34;` or Intel Sandy Bridge&#34;.
     * 
     */
    private String minCpuPlatform;
    /**
     * @return Optional. Whether the nodes are created as preemptible VM instances (https://cloud.google.com/compute/docs/instances/preemptible). Preemptible nodes cannot be used in a node pool with the CONTROLLER role or in the DEFAULT node pool if the CONTROLLER role is not assigned (the DEFAULT node pool will assume the CONTROLLER role).
     * 
     */
    private Boolean preemptible;
    /**
     * @return Optional. Spot flag for enabling Spot VM, which is a rebrand of the existing preemptible flag.
     * 
     */
    private Boolean spot;

    private GkeNodeConfigResponse() {}
    /**
     * @return Optional. A list of hardware accelerators (https://cloud.google.com/compute/docs/gpus) to attach to each node.
     * 
     */
    public List<GkeNodePoolAcceleratorConfigResponse> accelerators() {
        return this.accelerators;
    }
    /**
     * @return Optional. The Customer Managed Encryption Key (CMEK) (https://cloud.google.com/kubernetes-engine/docs/how-to/using-cmek) used to encrypt the boot disk attached to each node in the node pool. Specify the key using the following format: projects/KEY_PROJECT_ID/locations/LOCATION /keyRings/RING_NAME/cryptoKeys/KEY_NAME.
     * 
     */
    public String bootDiskKmsKey() {
        return this.bootDiskKmsKey;
    }
    /**
     * @return Optional. The number of local SSD disks to attach to the node, which is limited by the maximum number of disks allowable per zone (see Adding Local SSDs (https://cloud.google.com/compute/docs/disks/local-ssd)).
     * 
     */
    public Integer localSsdCount() {
        return this.localSsdCount;
    }
    /**
     * @return Optional. The name of a Compute Engine machine type (https://cloud.google.com/compute/docs/machine-types).
     * 
     */
    public String machineType() {
        return this.machineType;
    }
    /**
     * @return Optional. Minimum CPU platform (https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform) to be used by this instance. The instance may be scheduled on the specified or a newer CPU platform. Specify the friendly names of CPU platforms, such as &#34;Intel Haswell&#34;` or Intel Sandy Bridge&#34;.
     * 
     */
    public String minCpuPlatform() {
        return this.minCpuPlatform;
    }
    /**
     * @return Optional. Whether the nodes are created as preemptible VM instances (https://cloud.google.com/compute/docs/instances/preemptible). Preemptible nodes cannot be used in a node pool with the CONTROLLER role or in the DEFAULT node pool if the CONTROLLER role is not assigned (the DEFAULT node pool will assume the CONTROLLER role).
     * 
     */
    public Boolean preemptible() {
        return this.preemptible;
    }
    /**
     * @return Optional. Spot flag for enabling Spot VM, which is a rebrand of the existing preemptible flag.
     * 
     */
    public Boolean spot() {
        return this.spot;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GkeNodeConfigResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GkeNodePoolAcceleratorConfigResponse> accelerators;
        private String bootDiskKmsKey;
        private Integer localSsdCount;
        private String machineType;
        private String minCpuPlatform;
        private Boolean preemptible;
        private Boolean spot;
        public Builder() {}
        public Builder(GkeNodeConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accelerators = defaults.accelerators;
    	      this.bootDiskKmsKey = defaults.bootDiskKmsKey;
    	      this.localSsdCount = defaults.localSsdCount;
    	      this.machineType = defaults.machineType;
    	      this.minCpuPlatform = defaults.minCpuPlatform;
    	      this.preemptible = defaults.preemptible;
    	      this.spot = defaults.spot;
        }

        @CustomType.Setter
        public Builder accelerators(List<GkeNodePoolAcceleratorConfigResponse> accelerators) {
            this.accelerators = Objects.requireNonNull(accelerators);
            return this;
        }
        public Builder accelerators(GkeNodePoolAcceleratorConfigResponse... accelerators) {
            return accelerators(List.of(accelerators));
        }
        @CustomType.Setter
        public Builder bootDiskKmsKey(String bootDiskKmsKey) {
            this.bootDiskKmsKey = Objects.requireNonNull(bootDiskKmsKey);
            return this;
        }
        @CustomType.Setter
        public Builder localSsdCount(Integer localSsdCount) {
            this.localSsdCount = Objects.requireNonNull(localSsdCount);
            return this;
        }
        @CustomType.Setter
        public Builder machineType(String machineType) {
            this.machineType = Objects.requireNonNull(machineType);
            return this;
        }
        @CustomType.Setter
        public Builder minCpuPlatform(String minCpuPlatform) {
            this.minCpuPlatform = Objects.requireNonNull(minCpuPlatform);
            return this;
        }
        @CustomType.Setter
        public Builder preemptible(Boolean preemptible) {
            this.preemptible = Objects.requireNonNull(preemptible);
            return this;
        }
        @CustomType.Setter
        public Builder spot(Boolean spot) {
            this.spot = Objects.requireNonNull(spot);
            return this;
        }
        public GkeNodeConfigResponse build() {
            final var o = new GkeNodeConfigResponse();
            o.accelerators = accelerators;
            o.bootDiskKmsKey = bootDiskKmsKey;
            o.localSsdCount = localSsdCount;
            o.machineType = machineType;
            o.minCpuPlatform = minCpuPlatform;
            o.preemptible = preemptible;
            o.spot = spot;
            return o;
        }
    }
}
