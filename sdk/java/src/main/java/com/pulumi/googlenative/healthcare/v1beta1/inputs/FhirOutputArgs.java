// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.healthcare.v1beta1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Details about the FHIR store to write the output to.
 * 
 */
public final class FhirOutputArgs extends com.pulumi.resources.ResourceArgs {

    public static final FhirOutputArgs Empty = new FhirOutputArgs();

    /**
     * Name of the output FHIR store, which must already exist. You must grant the healthcare.fhirResources.update permission on the destination store to your project&#39;s **Cloud Healthcare Service Agent** [service account](https://cloud.google.com/healthcare/docs/how-tos/permissions-healthcare-api-gcp-products#the_cloud_healthcare_service_agent). The destination store must set `enable_update_create` to true. The destination store must use FHIR version R4. Writing these resources will consume FHIR operations quota from the project containing the source data. De-identify operation metadata is only generated for DICOM de-identification operations.
     * 
     */
    @Import(name="fhirStore")
    private @Nullable Output<String> fhirStore;

    /**
     * @return Name of the output FHIR store, which must already exist. You must grant the healthcare.fhirResources.update permission on the destination store to your project&#39;s **Cloud Healthcare Service Agent** [service account](https://cloud.google.com/healthcare/docs/how-tos/permissions-healthcare-api-gcp-products#the_cloud_healthcare_service_agent). The destination store must set `enable_update_create` to true. The destination store must use FHIR version R4. Writing these resources will consume FHIR operations quota from the project containing the source data. De-identify operation metadata is only generated for DICOM de-identification operations.
     * 
     */
    public Optional<Output<String>> fhirStore() {
        return Optional.ofNullable(this.fhirStore);
    }

    private FhirOutputArgs() {}

    private FhirOutputArgs(FhirOutputArgs $) {
        this.fhirStore = $.fhirStore;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FhirOutputArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FhirOutputArgs $;

        public Builder() {
            $ = new FhirOutputArgs();
        }

        public Builder(FhirOutputArgs defaults) {
            $ = new FhirOutputArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param fhirStore Name of the output FHIR store, which must already exist. You must grant the healthcare.fhirResources.update permission on the destination store to your project&#39;s **Cloud Healthcare Service Agent** [service account](https://cloud.google.com/healthcare/docs/how-tos/permissions-healthcare-api-gcp-products#the_cloud_healthcare_service_agent). The destination store must set `enable_update_create` to true. The destination store must use FHIR version R4. Writing these resources will consume FHIR operations quota from the project containing the source data. De-identify operation metadata is only generated for DICOM de-identification operations.
         * 
         * @return builder
         * 
         */
        public Builder fhirStore(@Nullable Output<String> fhirStore) {
            $.fhirStore = fhirStore;
            return this;
        }

        /**
         * @param fhirStore Name of the output FHIR store, which must already exist. You must grant the healthcare.fhirResources.update permission on the destination store to your project&#39;s **Cloud Healthcare Service Agent** [service account](https://cloud.google.com/healthcare/docs/how-tos/permissions-healthcare-api-gcp-products#the_cloud_healthcare_service_agent). The destination store must set `enable_update_create` to true. The destination store must use FHIR version R4. Writing these resources will consume FHIR operations quota from the project containing the source data. De-identify operation metadata is only generated for DICOM de-identification operations.
         * 
         * @return builder
         * 
         */
        public Builder fhirStore(String fhirStore) {
            return fhirStore(Output.of(fhirStore));
        }

        public FhirOutputArgs build() {
            return $;
        }
    }

}
