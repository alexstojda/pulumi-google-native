// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.apigee.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.apigee.v1.outputs.GoogleCloudApigeeV1CustomReportMetricResponse;
import com.pulumi.googlenative.apigee.v1.outputs.GoogleCloudApigeeV1ReportPropertyResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetReportResult {
    /**
     * @return This field contains the chart type for the report
     * 
     */
    private String chartType;
    /**
     * @return Legacy field: not used. This field contains a list of comments associated with custom report
     * 
     */
    private List<String> comments;
    /**
     * @return Unix time when the app was created json key: createdAt
     * 
     */
    private String createdAt;
    /**
     * @return This contains the list of dimensions for the report
     * 
     */
    private List<String> dimensions;
    /**
     * @return This is the display name for the report
     * 
     */
    private String displayName;
    /**
     * @return Environment name
     * 
     */
    private String environment;
    /**
     * @return This field contains the filter expression
     * 
     */
    private String filter;
    /**
     * @return Legacy field: not used. Contains the from time for the report
     * 
     */
    private String fromTime;
    /**
     * @return Modified time of this entity as milliseconds since epoch. json key: lastModifiedAt
     * 
     */
    private String lastModifiedAt;
    /**
     * @return Last viewed time of this entity as milliseconds since epoch
     * 
     */
    private String lastViewedAt;
    /**
     * @return Legacy field: not used This field contains the limit for the result retrieved
     * 
     */
    private String limit;
    /**
     * @return This contains the list of metrics
     * 
     */
    private List<GoogleCloudApigeeV1CustomReportMetricResponse> metrics;
    /**
     * @return Unique identifier for the report T his is a legacy field used to encode custom report unique id
     * 
     */
    private String name;
    /**
     * @return Legacy field: not used. This field contains the offset for the data
     * 
     */
    private String offset;
    /**
     * @return Organization name
     * 
     */
    private String organization;
    /**
     * @return This field contains report properties such as ui metadata etc.
     * 
     */
    private List<GoogleCloudApigeeV1ReportPropertyResponse> properties;
    /**
     * @return Legacy field: not used much. Contains the list of sort by columns
     * 
     */
    private List<String> sortByCols;
    /**
     * @return Legacy field: not used much. Contains the sort order for the sort columns
     * 
     */
    private String sortOrder;
    /**
     * @return Legacy field: not used. This field contains a list of tags associated with custom report
     * 
     */
    private List<String> tags;
    /**
     * @return This field contains the time unit of aggregation for the report
     * 
     */
    private String timeUnit;
    /**
     * @return Legacy field: not used. Contains the end time for the report
     * 
     */
    private String toTime;
    /**
     * @return Legacy field: not used. This field contains the top k parameter value for restricting the result
     * 
     */
    private String topk;

    private GetReportResult() {}
    /**
     * @return This field contains the chart type for the report
     * 
     */
    public String chartType() {
        return this.chartType;
    }
    /**
     * @return Legacy field: not used. This field contains a list of comments associated with custom report
     * 
     */
    public List<String> comments() {
        return this.comments;
    }
    /**
     * @return Unix time when the app was created json key: createdAt
     * 
     */
    public String createdAt() {
        return this.createdAt;
    }
    /**
     * @return This contains the list of dimensions for the report
     * 
     */
    public List<String> dimensions() {
        return this.dimensions;
    }
    /**
     * @return This is the display name for the report
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Environment name
     * 
     */
    public String environment() {
        return this.environment;
    }
    /**
     * @return This field contains the filter expression
     * 
     */
    public String filter() {
        return this.filter;
    }
    /**
     * @return Legacy field: not used. Contains the from time for the report
     * 
     */
    public String fromTime() {
        return this.fromTime;
    }
    /**
     * @return Modified time of this entity as milliseconds since epoch. json key: lastModifiedAt
     * 
     */
    public String lastModifiedAt() {
        return this.lastModifiedAt;
    }
    /**
     * @return Last viewed time of this entity as milliseconds since epoch
     * 
     */
    public String lastViewedAt() {
        return this.lastViewedAt;
    }
    /**
     * @return Legacy field: not used This field contains the limit for the result retrieved
     * 
     */
    public String limit() {
        return this.limit;
    }
    /**
     * @return This contains the list of metrics
     * 
     */
    public List<GoogleCloudApigeeV1CustomReportMetricResponse> metrics() {
        return this.metrics;
    }
    /**
     * @return Unique identifier for the report T his is a legacy field used to encode custom report unique id
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Legacy field: not used. This field contains the offset for the data
     * 
     */
    public String offset() {
        return this.offset;
    }
    /**
     * @return Organization name
     * 
     */
    public String organization() {
        return this.organization;
    }
    /**
     * @return This field contains report properties such as ui metadata etc.
     * 
     */
    public List<GoogleCloudApigeeV1ReportPropertyResponse> properties() {
        return this.properties;
    }
    /**
     * @return Legacy field: not used much. Contains the list of sort by columns
     * 
     */
    public List<String> sortByCols() {
        return this.sortByCols;
    }
    /**
     * @return Legacy field: not used much. Contains the sort order for the sort columns
     * 
     */
    public String sortOrder() {
        return this.sortOrder;
    }
    /**
     * @return Legacy field: not used. This field contains a list of tags associated with custom report
     * 
     */
    public List<String> tags() {
        return this.tags;
    }
    /**
     * @return This field contains the time unit of aggregation for the report
     * 
     */
    public String timeUnit() {
        return this.timeUnit;
    }
    /**
     * @return Legacy field: not used. Contains the end time for the report
     * 
     */
    public String toTime() {
        return this.toTime;
    }
    /**
     * @return Legacy field: not used. This field contains the top k parameter value for restricting the result
     * 
     */
    public String topk() {
        return this.topk;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetReportResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String chartType;
        private List<String> comments;
        private String createdAt;
        private List<String> dimensions;
        private String displayName;
        private String environment;
        private String filter;
        private String fromTime;
        private String lastModifiedAt;
        private String lastViewedAt;
        private String limit;
        private List<GoogleCloudApigeeV1CustomReportMetricResponse> metrics;
        private String name;
        private String offset;
        private String organization;
        private List<GoogleCloudApigeeV1ReportPropertyResponse> properties;
        private List<String> sortByCols;
        private String sortOrder;
        private List<String> tags;
        private String timeUnit;
        private String toTime;
        private String topk;
        public Builder() {}
        public Builder(GetReportResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.chartType = defaults.chartType;
    	      this.comments = defaults.comments;
    	      this.createdAt = defaults.createdAt;
    	      this.dimensions = defaults.dimensions;
    	      this.displayName = defaults.displayName;
    	      this.environment = defaults.environment;
    	      this.filter = defaults.filter;
    	      this.fromTime = defaults.fromTime;
    	      this.lastModifiedAt = defaults.lastModifiedAt;
    	      this.lastViewedAt = defaults.lastViewedAt;
    	      this.limit = defaults.limit;
    	      this.metrics = defaults.metrics;
    	      this.name = defaults.name;
    	      this.offset = defaults.offset;
    	      this.organization = defaults.organization;
    	      this.properties = defaults.properties;
    	      this.sortByCols = defaults.sortByCols;
    	      this.sortOrder = defaults.sortOrder;
    	      this.tags = defaults.tags;
    	      this.timeUnit = defaults.timeUnit;
    	      this.toTime = defaults.toTime;
    	      this.topk = defaults.topk;
        }

        @CustomType.Setter
        public Builder chartType(String chartType) {
            this.chartType = Objects.requireNonNull(chartType);
            return this;
        }
        @CustomType.Setter
        public Builder comments(List<String> comments) {
            this.comments = Objects.requireNonNull(comments);
            return this;
        }
        public Builder comments(String... comments) {
            return comments(List.of(comments));
        }
        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            this.createdAt = Objects.requireNonNull(createdAt);
            return this;
        }
        @CustomType.Setter
        public Builder dimensions(List<String> dimensions) {
            this.dimensions = Objects.requireNonNull(dimensions);
            return this;
        }
        public Builder dimensions(String... dimensions) {
            return dimensions(List.of(dimensions));
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder environment(String environment) {
            this.environment = Objects.requireNonNull(environment);
            return this;
        }
        @CustomType.Setter
        public Builder filter(String filter) {
            this.filter = Objects.requireNonNull(filter);
            return this;
        }
        @CustomType.Setter
        public Builder fromTime(String fromTime) {
            this.fromTime = Objects.requireNonNull(fromTime);
            return this;
        }
        @CustomType.Setter
        public Builder lastModifiedAt(String lastModifiedAt) {
            this.lastModifiedAt = Objects.requireNonNull(lastModifiedAt);
            return this;
        }
        @CustomType.Setter
        public Builder lastViewedAt(String lastViewedAt) {
            this.lastViewedAt = Objects.requireNonNull(lastViewedAt);
            return this;
        }
        @CustomType.Setter
        public Builder limit(String limit) {
            this.limit = Objects.requireNonNull(limit);
            return this;
        }
        @CustomType.Setter
        public Builder metrics(List<GoogleCloudApigeeV1CustomReportMetricResponse> metrics) {
            this.metrics = Objects.requireNonNull(metrics);
            return this;
        }
        public Builder metrics(GoogleCloudApigeeV1CustomReportMetricResponse... metrics) {
            return metrics(List.of(metrics));
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder offset(String offset) {
            this.offset = Objects.requireNonNull(offset);
            return this;
        }
        @CustomType.Setter
        public Builder organization(String organization) {
            this.organization = Objects.requireNonNull(organization);
            return this;
        }
        @CustomType.Setter
        public Builder properties(List<GoogleCloudApigeeV1ReportPropertyResponse> properties) {
            this.properties = Objects.requireNonNull(properties);
            return this;
        }
        public Builder properties(GoogleCloudApigeeV1ReportPropertyResponse... properties) {
            return properties(List.of(properties));
        }
        @CustomType.Setter
        public Builder sortByCols(List<String> sortByCols) {
            this.sortByCols = Objects.requireNonNull(sortByCols);
            return this;
        }
        public Builder sortByCols(String... sortByCols) {
            return sortByCols(List.of(sortByCols));
        }
        @CustomType.Setter
        public Builder sortOrder(String sortOrder) {
            this.sortOrder = Objects.requireNonNull(sortOrder);
            return this;
        }
        @CustomType.Setter
        public Builder tags(List<String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder timeUnit(String timeUnit) {
            this.timeUnit = Objects.requireNonNull(timeUnit);
            return this;
        }
        @CustomType.Setter
        public Builder toTime(String toTime) {
            this.toTime = Objects.requireNonNull(toTime);
            return this;
        }
        @CustomType.Setter
        public Builder topk(String topk) {
            this.topk = Objects.requireNonNull(topk);
            return this;
        }
        public GetReportResult build() {
            final var o = new GetReportResult();
            o.chartType = chartType;
            o.comments = comments;
            o.createdAt = createdAt;
            o.dimensions = dimensions;
            o.displayName = displayName;
            o.environment = environment;
            o.filter = filter;
            o.fromTime = fromTime;
            o.lastModifiedAt = lastModifiedAt;
            o.lastViewedAt = lastViewedAt;
            o.limit = limit;
            o.metrics = metrics;
            o.name = name;
            o.offset = offset;
            o.organization = organization;
            o.properties = properties;
            o.sortByCols = sortByCols;
            o.sortOrder = sortOrder;
            o.tags = tags;
            o.timeUnit = timeUnit;
            o.toTime = toTime;
            o.topk = topk;
            return o;
        }
    }
}
