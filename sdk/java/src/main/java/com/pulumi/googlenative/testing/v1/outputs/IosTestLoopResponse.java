// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.testing.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.testing.v1.outputs.FileReferenceResponse;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class IosTestLoopResponse {
    /**
     * @return The bundle id for the application under test.
     * 
     */
    private String appBundleId;
    /**
     * @return The .ipa of the application to test.
     * 
     */
    private FileReferenceResponse appIpa;
    /**
     * @return The list of scenarios that should be run during the test. Defaults to the single scenario 0 if unspecified.
     * 
     */
    private List<Integer> scenarios;

    private IosTestLoopResponse() {}
    /**
     * @return The bundle id for the application under test.
     * 
     */
    public String appBundleId() {
        return this.appBundleId;
    }
    /**
     * @return The .ipa of the application to test.
     * 
     */
    public FileReferenceResponse appIpa() {
        return this.appIpa;
    }
    /**
     * @return The list of scenarios that should be run during the test. Defaults to the single scenario 0 if unspecified.
     * 
     */
    public List<Integer> scenarios() {
        return this.scenarios;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IosTestLoopResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String appBundleId;
        private FileReferenceResponse appIpa;
        private List<Integer> scenarios;
        public Builder() {}
        public Builder(IosTestLoopResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appBundleId = defaults.appBundleId;
    	      this.appIpa = defaults.appIpa;
    	      this.scenarios = defaults.scenarios;
        }

        @CustomType.Setter
        public Builder appBundleId(String appBundleId) {
            this.appBundleId = Objects.requireNonNull(appBundleId);
            return this;
        }
        @CustomType.Setter
        public Builder appIpa(FileReferenceResponse appIpa) {
            this.appIpa = Objects.requireNonNull(appIpa);
            return this;
        }
        @CustomType.Setter
        public Builder scenarios(List<Integer> scenarios) {
            this.scenarios = Objects.requireNonNull(scenarios);
            return this;
        }
        public Builder scenarios(Integer... scenarios) {
            return scenarios(List.of(scenarios));
        }
        public IosTestLoopResponse build() {
            final var o = new IosTestLoopResponse();
            o.appBundleId = appBundleId;
            o.appIpa = appIpa;
            o.scenarios = scenarios;
            return o;
        }
    }
}
