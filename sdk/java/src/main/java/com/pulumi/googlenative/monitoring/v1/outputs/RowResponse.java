// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.monitoring.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.monitoring.v1.outputs.WidgetResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class RowResponse {
    /**
     * @return The relative weight of this row. The row weight is used to adjust the height of rows on the screen (relative to peers). Greater the weight, greater the height of the row on the screen. If omitted, a value of 1 is used while rendering.
     * 
     */
    private String weight;
    /**
     * @return The display widgets arranged horizontally in this row.
     * 
     */
    private List<WidgetResponse> widgets;

    private RowResponse() {}
    /**
     * @return The relative weight of this row. The row weight is used to adjust the height of rows on the screen (relative to peers). Greater the weight, greater the height of the row on the screen. If omitted, a value of 1 is used while rendering.
     * 
     */
    public String weight() {
        return this.weight;
    }
    /**
     * @return The display widgets arranged horizontally in this row.
     * 
     */
    public List<WidgetResponse> widgets() {
        return this.widgets;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RowResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String weight;
        private List<WidgetResponse> widgets;
        public Builder() {}
        public Builder(RowResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.weight = defaults.weight;
    	      this.widgets = defaults.widgets;
        }

        @CustomType.Setter
        public Builder weight(String weight) {
            this.weight = Objects.requireNonNull(weight);
            return this;
        }
        @CustomType.Setter
        public Builder widgets(List<WidgetResponse> widgets) {
            this.widgets = Objects.requireNonNull(widgets);
            return this;
        }
        public Builder widgets(WidgetResponse... widgets) {
            return widgets(List.of(widgets));
        }
        public RowResponse build() {
            final var o = new RowResponse();
            o.weight = weight;
            o.widgets = widgets;
            return o;
        }
    }
}
