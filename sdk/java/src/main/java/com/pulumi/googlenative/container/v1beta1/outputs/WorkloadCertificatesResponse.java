// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.container.v1beta1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.util.Objects;

@CustomType
public final class WorkloadCertificatesResponse {
    /**
     * @return enable_certificates controls issuance of workload mTLS certificates. If set, the GKE Workload Identity Certificates controller and node agent will be deployed in the cluster, which can then be configured by creating a WorkloadCertificateConfig Custom Resource. Requires Workload Identity (workload_pool must be non-empty).
     * 
     */
    private Boolean enableCertificates;

    private WorkloadCertificatesResponse() {}
    /**
     * @return enable_certificates controls issuance of workload mTLS certificates. If set, the GKE Workload Identity Certificates controller and node agent will be deployed in the cluster, which can then be configured by creating a WorkloadCertificateConfig Custom Resource. Requires Workload Identity (workload_pool must be non-empty).
     * 
     */
    public Boolean enableCertificates() {
        return this.enableCertificates;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkloadCertificatesResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean enableCertificates;
        public Builder() {}
        public Builder(WorkloadCertificatesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enableCertificates = defaults.enableCertificates;
        }

        @CustomType.Setter
        public Builder enableCertificates(Boolean enableCertificates) {
            this.enableCertificates = Objects.requireNonNull(enableCertificates);
            return this;
        }
        public WorkloadCertificatesResponse build() {
            final var o = new WorkloadCertificatesResponse();
            o.enableCertificates = enableCertificates;
            return o;
        }
    }
}
