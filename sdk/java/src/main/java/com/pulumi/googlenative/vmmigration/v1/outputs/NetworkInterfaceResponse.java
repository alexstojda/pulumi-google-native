// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.vmmigration.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class NetworkInterfaceResponse {
    /**
     * @return The external IP to define in the NIC.
     * 
     */
    private String externalIp;
    /**
     * @return The internal IP to define in the NIC. The formats accepted are: `ephemeral` \ ipv4 address \ a named address resource full path.
     * 
     */
    private String internalIp;
    /**
     * @return The network to connect the NIC to.
     * 
     */
    private String network;
    /**
     * @return The subnetwork to connect the NIC to.
     * 
     */
    private String subnetwork;

    private NetworkInterfaceResponse() {}
    /**
     * @return The external IP to define in the NIC.
     * 
     */
    public String externalIp() {
        return this.externalIp;
    }
    /**
     * @return The internal IP to define in the NIC. The formats accepted are: `ephemeral` \ ipv4 address \ a named address resource full path.
     * 
     */
    public String internalIp() {
        return this.internalIp;
    }
    /**
     * @return The network to connect the NIC to.
     * 
     */
    public String network() {
        return this.network;
    }
    /**
     * @return The subnetwork to connect the NIC to.
     * 
     */
    public String subnetwork() {
        return this.subnetwork;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NetworkInterfaceResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String externalIp;
        private String internalIp;
        private String network;
        private String subnetwork;
        public Builder() {}
        public Builder(NetworkInterfaceResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.externalIp = defaults.externalIp;
    	      this.internalIp = defaults.internalIp;
    	      this.network = defaults.network;
    	      this.subnetwork = defaults.subnetwork;
        }

        @CustomType.Setter
        public Builder externalIp(String externalIp) {
            this.externalIp = Objects.requireNonNull(externalIp);
            return this;
        }
        @CustomType.Setter
        public Builder internalIp(String internalIp) {
            this.internalIp = Objects.requireNonNull(internalIp);
            return this;
        }
        @CustomType.Setter
        public Builder network(String network) {
            this.network = Objects.requireNonNull(network);
            return this;
        }
        @CustomType.Setter
        public Builder subnetwork(String subnetwork) {
            this.subnetwork = Objects.requireNonNull(subnetwork);
            return this;
        }
        public NetworkInterfaceResponse build() {
            final var o = new NetworkInterfaceResponse();
            o.externalIp = externalIp;
            o.internalIp = internalIp;
            o.network = network;
            o.subnetwork = subnetwork;
            return o;
        }
    }
}
