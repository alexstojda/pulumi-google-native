// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.ml.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.ml.v1.outputs.GoogleCloudMlV1_Trial_ParameterResponse;
import com.pulumi.googlenative.ml.v1.outputs.GoogleCloudMlV1__MeasurementResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetTrialResult {
    /**
     * @return The identifier of the client that originally requested this trial.
     * 
     */
    private String clientId;
    /**
     * @return Time at which the trial&#39;s status changed to COMPLETED.
     * 
     */
    private String endTime;
    /**
     * @return The final measurement containing the objective value.
     * 
     */
    private GoogleCloudMlV1__MeasurementResponse finalMeasurement;
    /**
     * @return A human readable string describing why the trial is infeasible. This should only be set if trial_infeasible is true.
     * 
     */
    private String infeasibleReason;
    /**
     * @return A list of measurements that are strictly lexicographically ordered by their induced tuples (steps, elapsed_time). These are used for early stopping computations.
     * 
     */
    private List<GoogleCloudMlV1__MeasurementResponse> measurements;
    /**
     * @return Name of the trial assigned by the service.
     * 
     */
    private String name;
    /**
     * @return The parameters of the trial.
     * 
     */
    private List<GoogleCloudMlV1_Trial_ParameterResponse> parameters;
    /**
     * @return Time at which the trial was started.
     * 
     */
    private String startTime;
    /**
     * @return The detailed state of a trial.
     * 
     */
    private String state;
    /**
     * @return If true, the parameters in this trial are not attempted again.
     * 
     */
    private Boolean trialInfeasible;

    private GetTrialResult() {}
    /**
     * @return The identifier of the client that originally requested this trial.
     * 
     */
    public String clientId() {
        return this.clientId;
    }
    /**
     * @return Time at which the trial&#39;s status changed to COMPLETED.
     * 
     */
    public String endTime() {
        return this.endTime;
    }
    /**
     * @return The final measurement containing the objective value.
     * 
     */
    public GoogleCloudMlV1__MeasurementResponse finalMeasurement() {
        return this.finalMeasurement;
    }
    /**
     * @return A human readable string describing why the trial is infeasible. This should only be set if trial_infeasible is true.
     * 
     */
    public String infeasibleReason() {
        return this.infeasibleReason;
    }
    /**
     * @return A list of measurements that are strictly lexicographically ordered by their induced tuples (steps, elapsed_time). These are used for early stopping computations.
     * 
     */
    public List<GoogleCloudMlV1__MeasurementResponse> measurements() {
        return this.measurements;
    }
    /**
     * @return Name of the trial assigned by the service.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The parameters of the trial.
     * 
     */
    public List<GoogleCloudMlV1_Trial_ParameterResponse> parameters() {
        return this.parameters;
    }
    /**
     * @return Time at which the trial was started.
     * 
     */
    public String startTime() {
        return this.startTime;
    }
    /**
     * @return The detailed state of a trial.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return If true, the parameters in this trial are not attempted again.
     * 
     */
    public Boolean trialInfeasible() {
        return this.trialInfeasible;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTrialResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String clientId;
        private String endTime;
        private GoogleCloudMlV1__MeasurementResponse finalMeasurement;
        private String infeasibleReason;
        private List<GoogleCloudMlV1__MeasurementResponse> measurements;
        private String name;
        private List<GoogleCloudMlV1_Trial_ParameterResponse> parameters;
        private String startTime;
        private String state;
        private Boolean trialInfeasible;
        public Builder() {}
        public Builder(GetTrialResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientId = defaults.clientId;
    	      this.endTime = defaults.endTime;
    	      this.finalMeasurement = defaults.finalMeasurement;
    	      this.infeasibleReason = defaults.infeasibleReason;
    	      this.measurements = defaults.measurements;
    	      this.name = defaults.name;
    	      this.parameters = defaults.parameters;
    	      this.startTime = defaults.startTime;
    	      this.state = defaults.state;
    	      this.trialInfeasible = defaults.trialInfeasible;
        }

        @CustomType.Setter
        public Builder clientId(String clientId) {
            this.clientId = Objects.requireNonNull(clientId);
            return this;
        }
        @CustomType.Setter
        public Builder endTime(String endTime) {
            this.endTime = Objects.requireNonNull(endTime);
            return this;
        }
        @CustomType.Setter
        public Builder finalMeasurement(GoogleCloudMlV1__MeasurementResponse finalMeasurement) {
            this.finalMeasurement = Objects.requireNonNull(finalMeasurement);
            return this;
        }
        @CustomType.Setter
        public Builder infeasibleReason(String infeasibleReason) {
            this.infeasibleReason = Objects.requireNonNull(infeasibleReason);
            return this;
        }
        @CustomType.Setter
        public Builder measurements(List<GoogleCloudMlV1__MeasurementResponse> measurements) {
            this.measurements = Objects.requireNonNull(measurements);
            return this;
        }
        public Builder measurements(GoogleCloudMlV1__MeasurementResponse... measurements) {
            return measurements(List.of(measurements));
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder parameters(List<GoogleCloudMlV1_Trial_ParameterResponse> parameters) {
            this.parameters = Objects.requireNonNull(parameters);
            return this;
        }
        public Builder parameters(GoogleCloudMlV1_Trial_ParameterResponse... parameters) {
            return parameters(List.of(parameters));
        }
        @CustomType.Setter
        public Builder startTime(String startTime) {
            this.startTime = Objects.requireNonNull(startTime);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder trialInfeasible(Boolean trialInfeasible) {
            this.trialInfeasible = Objects.requireNonNull(trialInfeasible);
            return this;
        }
        public GetTrialResult build() {
            final var o = new GetTrialResult();
            o.clientId = clientId;
            o.endTime = endTime;
            o.finalMeasurement = finalMeasurement;
            o.infeasibleReason = infeasibleReason;
            o.measurements = measurements;
            o.name = name;
            o.parameters = parameters;
            o.startTime = startTime;
            o.state = state;
            o.trialInfeasible = trialInfeasible;
            return o;
        }
    }
}
