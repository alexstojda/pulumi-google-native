// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudkms.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.cloudkms.v1.outputs.ServiceResolverResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetEkmConnectionResult {
    /**
     * @return The time at which the EkmConnection was created.
     * 
     */
    private String createTime;
    /**
     * @return Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update requests to ensure the client has an up-to-date value before proceeding.
     * 
     */
    private String etag;
    /**
     * @return The resource name for the EkmConnection in the format `projects/*{@literal /}locations/*{@literal /}ekmConnections/*`.
     * 
     */
    private String name;
    /**
     * @return A list of ServiceResolvers where the EKM can be reached. There should be one ServiceResolver per EKM replica. Currently, only a single ServiceResolver is supported.
     * 
     */
    private List<ServiceResolverResponse> serviceResolvers;

    private GetEkmConnectionResult() {}
    /**
     * @return The time at which the EkmConnection was created.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update requests to ensure the client has an up-to-date value before proceeding.
     * 
     */
    public String etag() {
        return this.etag;
    }
    /**
     * @return The resource name for the EkmConnection in the format `projects/*{@literal /}locations/*{@literal /}ekmConnections/*`.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return A list of ServiceResolvers where the EKM can be reached. There should be one ServiceResolver per EKM replica. Currently, only a single ServiceResolver is supported.
     * 
     */
    public List<ServiceResolverResponse> serviceResolvers() {
        return this.serviceResolvers;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEkmConnectionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String createTime;
        private String etag;
        private String name;
        private List<ServiceResolverResponse> serviceResolvers;
        public Builder() {}
        public Builder(GetEkmConnectionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.etag = defaults.etag;
    	      this.name = defaults.name;
    	      this.serviceResolvers = defaults.serviceResolvers;
        }

        @CustomType.Setter
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        @CustomType.Setter
        public Builder etag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder serviceResolvers(List<ServiceResolverResponse> serviceResolvers) {
            this.serviceResolvers = Objects.requireNonNull(serviceResolvers);
            return this;
        }
        public Builder serviceResolvers(ServiceResolverResponse... serviceResolvers) {
            return serviceResolvers(List.of(serviceResolvers));
        }
        public GetEkmConnectionResult build() {
            final var o = new GetEkmConnectionResult();
            o.createTime = createTime;
            o.etag = etag;
            o.name = name;
            o.serviceResolvers = serviceResolvers;
            return o;
        }
    }
}
