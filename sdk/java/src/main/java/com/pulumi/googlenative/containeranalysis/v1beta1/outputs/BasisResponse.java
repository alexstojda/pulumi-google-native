// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.containeranalysis.v1beta1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.containeranalysis.v1beta1.outputs.FingerprintResponse;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class BasisResponse {
    /**
     * @return Immutable. The fingerprint of the base image.
     * 
     */
    private FingerprintResponse fingerprint;
    /**
     * @return Immutable. The resource_url for the resource representing the basis of associated occurrence images.
     * 
     */
    private String resourceUrl;

    private BasisResponse() {}
    /**
     * @return Immutable. The fingerprint of the base image.
     * 
     */
    public FingerprintResponse fingerprint() {
        return this.fingerprint;
    }
    /**
     * @return Immutable. The resource_url for the resource representing the basis of associated occurrence images.
     * 
     */
    public String resourceUrl() {
        return this.resourceUrl;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BasisResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private FingerprintResponse fingerprint;
        private String resourceUrl;
        public Builder() {}
        public Builder(BasisResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fingerprint = defaults.fingerprint;
    	      this.resourceUrl = defaults.resourceUrl;
        }

        @CustomType.Setter
        public Builder fingerprint(FingerprintResponse fingerprint) {
            this.fingerprint = Objects.requireNonNull(fingerprint);
            return this;
        }
        @CustomType.Setter
        public Builder resourceUrl(String resourceUrl) {
            this.resourceUrl = Objects.requireNonNull(resourceUrl);
            return this;
        }
        public BasisResponse build() {
            final var o = new BasisResponse();
            o.fingerprint = fingerprint;
            o.resourceUrl = resourceUrl;
            return o;
        }
    }
}
