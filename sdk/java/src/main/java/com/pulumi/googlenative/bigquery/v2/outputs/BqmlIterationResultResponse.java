// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.bigquery.v2.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class BqmlIterationResultResponse {
    /**
     * @return [Output-only, Beta] Time taken to run the training iteration in milliseconds.
     * 
     */
    private String durationMs;
    /**
     * @return [Output-only, Beta] Eval loss computed on the eval data at the end of the iteration. The eval loss is used for early stopping to avoid overfitting. No eval loss if eval_split_method option is specified as no_split or auto_split with input data size less than 500 rows.
     * 
     */
    private Double evalLoss;
    /**
     * @return [Output-only, Beta] Index of the ML training iteration, starting from zero for each training run.
     * 
     */
    private Integer index;
    /**
     * @return [Output-only, Beta] Learning rate used for this iteration, it varies for different training iterations if learn_rate_strategy option is not constant.
     * 
     */
    private Double learnRate;
    /**
     * @return [Output-only, Beta] Training loss computed on the training data at the end of the iteration. The training loss function is defined by model type.
     * 
     */
    private Double trainingLoss;

    private BqmlIterationResultResponse() {}
    /**
     * @return [Output-only, Beta] Time taken to run the training iteration in milliseconds.
     * 
     */
    public String durationMs() {
        return this.durationMs;
    }
    /**
     * @return [Output-only, Beta] Eval loss computed on the eval data at the end of the iteration. The eval loss is used for early stopping to avoid overfitting. No eval loss if eval_split_method option is specified as no_split or auto_split with input data size less than 500 rows.
     * 
     */
    public Double evalLoss() {
        return this.evalLoss;
    }
    /**
     * @return [Output-only, Beta] Index of the ML training iteration, starting from zero for each training run.
     * 
     */
    public Integer index() {
        return this.index;
    }
    /**
     * @return [Output-only, Beta] Learning rate used for this iteration, it varies for different training iterations if learn_rate_strategy option is not constant.
     * 
     */
    public Double learnRate() {
        return this.learnRate;
    }
    /**
     * @return [Output-only, Beta] Training loss computed on the training data at the end of the iteration. The training loss function is defined by model type.
     * 
     */
    public Double trainingLoss() {
        return this.trainingLoss;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BqmlIterationResultResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String durationMs;
        private Double evalLoss;
        private Integer index;
        private Double learnRate;
        private Double trainingLoss;
        public Builder() {}
        public Builder(BqmlIterationResultResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.durationMs = defaults.durationMs;
    	      this.evalLoss = defaults.evalLoss;
    	      this.index = defaults.index;
    	      this.learnRate = defaults.learnRate;
    	      this.trainingLoss = defaults.trainingLoss;
        }

        @CustomType.Setter
        public Builder durationMs(String durationMs) {
            this.durationMs = Objects.requireNonNull(durationMs);
            return this;
        }
        @CustomType.Setter
        public Builder evalLoss(Double evalLoss) {
            this.evalLoss = Objects.requireNonNull(evalLoss);
            return this;
        }
        @CustomType.Setter
        public Builder index(Integer index) {
            this.index = Objects.requireNonNull(index);
            return this;
        }
        @CustomType.Setter
        public Builder learnRate(Double learnRate) {
            this.learnRate = Objects.requireNonNull(learnRate);
            return this;
        }
        @CustomType.Setter
        public Builder trainingLoss(Double trainingLoss) {
            this.trainingLoss = Objects.requireNonNull(trainingLoss);
            return this;
        }
        public BqmlIterationResultResponse build() {
            final var o = new BqmlIterationResultResponse();
            o.durationMs = durationMs;
            o.evalLoss = evalLoss;
            o.index = index;
            o.learnRate = learnRate;
            o.trainingLoss = trainingLoss;
            return o;
        }
    }
}
