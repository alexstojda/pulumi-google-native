// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.datapipelines.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironmentResponse {
    /**
     * @return Additional experiment flags for the job.
     * 
     */
    private List<String> additionalExperiments;
    /**
     * @return Additional user labels to be specified for the job. Keys and values must follow the restrictions specified in the [labeling restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions). An object containing a list of key/value pairs. Example: `{ &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1kg&#34;, &#34;count&#34;: &#34;3&#34; }`.
     * 
     */
    private Map<String,String> additionalUserLabels;
    /**
     * @return Whether to enable Streaming Engine for the job.
     * 
     */
    private Boolean enableStreamingEngine;
    /**
     * @return Set FlexRS goal for the job. https://cloud.google.com/dataflow/docs/guides/flexrs
     * 
     */
    private String flexrsGoal;
    /**
     * @return Configuration for VM IPs.
     * 
     */
    private String ipConfiguration;
    /**
     * @return Name for the Cloud KMS key for the job. Key format is: projects//locations//keyRings//cryptoKeys/
     * 
     */
    private String kmsKeyName;
    /**
     * @return The machine type to use for the job. Defaults to the value from the template if not specified.
     * 
     */
    private String machineType;
    /**
     * @return The maximum number of Compute Engine instances to be made available to your pipeline during execution, from 1 to 1000.
     * 
     */
    private Integer maxWorkers;
    /**
     * @return Network to which VMs will be assigned. If empty or unspecified, the service will use the network &#34;default&#34;.
     * 
     */
    private String network;
    /**
     * @return The initial number of Compute Engine instances for the job.
     * 
     */
    private Integer numWorkers;
    /**
     * @return The email address of the service account to run the job as.
     * 
     */
    private String serviceAccountEmail;
    /**
     * @return Subnetwork to which VMs will be assigned, if desired. You can specify a subnetwork using either a complete URL or an abbreviated path. Expected to be of the form &#34;https://www.googleapis.com/compute/v1/projects/HOST_PROJECT_ID/regions/REGION/subnetworks/SUBNETWORK&#34; or &#34;regions/REGION/subnetworks/SUBNETWORK&#34;. If the subnetwork is located in a Shared VPC network, you must use the complete URL.
     * 
     */
    private String subnetwork;
    /**
     * @return The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with `gs://`.
     * 
     */
    private String tempLocation;
    /**
     * @return The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. &#34;us-west1&#34;. Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, defaults to the control plane region.
     * 
     */
    private String workerRegion;
    /**
     * @return The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. &#34;us-west1-a&#34;. Mutually exclusive with worker_region. If neither worker_region nor worker_zone is specified, a zone in the control plane region is chosen based on available capacity. If both `worker_zone` and `zone` are set, `worker_zone` takes precedence.
     * 
     */
    private String workerZone;
    /**
     * @return The Compute Engine [availability zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones) for launching worker instances to run your pipeline. In the future, worker_zone will take precedence.
     * 
     */
    private String zone;

    private GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironmentResponse() {}
    /**
     * @return Additional experiment flags for the job.
     * 
     */
    public List<String> additionalExperiments() {
        return this.additionalExperiments;
    }
    /**
     * @return Additional user labels to be specified for the job. Keys and values must follow the restrictions specified in the [labeling restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions). An object containing a list of key/value pairs. Example: `{ &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1kg&#34;, &#34;count&#34;: &#34;3&#34; }`.
     * 
     */
    public Map<String,String> additionalUserLabels() {
        return this.additionalUserLabels;
    }
    /**
     * @return Whether to enable Streaming Engine for the job.
     * 
     */
    public Boolean enableStreamingEngine() {
        return this.enableStreamingEngine;
    }
    /**
     * @return Set FlexRS goal for the job. https://cloud.google.com/dataflow/docs/guides/flexrs
     * 
     */
    public String flexrsGoal() {
        return this.flexrsGoal;
    }
    /**
     * @return Configuration for VM IPs.
     * 
     */
    public String ipConfiguration() {
        return this.ipConfiguration;
    }
    /**
     * @return Name for the Cloud KMS key for the job. Key format is: projects//locations//keyRings//cryptoKeys/
     * 
     */
    public String kmsKeyName() {
        return this.kmsKeyName;
    }
    /**
     * @return The machine type to use for the job. Defaults to the value from the template if not specified.
     * 
     */
    public String machineType() {
        return this.machineType;
    }
    /**
     * @return The maximum number of Compute Engine instances to be made available to your pipeline during execution, from 1 to 1000.
     * 
     */
    public Integer maxWorkers() {
        return this.maxWorkers;
    }
    /**
     * @return Network to which VMs will be assigned. If empty or unspecified, the service will use the network &#34;default&#34;.
     * 
     */
    public String network() {
        return this.network;
    }
    /**
     * @return The initial number of Compute Engine instances for the job.
     * 
     */
    public Integer numWorkers() {
        return this.numWorkers;
    }
    /**
     * @return The email address of the service account to run the job as.
     * 
     */
    public String serviceAccountEmail() {
        return this.serviceAccountEmail;
    }
    /**
     * @return Subnetwork to which VMs will be assigned, if desired. You can specify a subnetwork using either a complete URL or an abbreviated path. Expected to be of the form &#34;https://www.googleapis.com/compute/v1/projects/HOST_PROJECT_ID/regions/REGION/subnetworks/SUBNETWORK&#34; or &#34;regions/REGION/subnetworks/SUBNETWORK&#34;. If the subnetwork is located in a Shared VPC network, you must use the complete URL.
     * 
     */
    public String subnetwork() {
        return this.subnetwork;
    }
    /**
     * @return The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with `gs://`.
     * 
     */
    public String tempLocation() {
        return this.tempLocation;
    }
    /**
     * @return The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. &#34;us-west1&#34;. Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, defaults to the control plane region.
     * 
     */
    public String workerRegion() {
        return this.workerRegion;
    }
    /**
     * @return The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. &#34;us-west1-a&#34;. Mutually exclusive with worker_region. If neither worker_region nor worker_zone is specified, a zone in the control plane region is chosen based on available capacity. If both `worker_zone` and `zone` are set, `worker_zone` takes precedence.
     * 
     */
    public String workerZone() {
        return this.workerZone;
    }
    /**
     * @return The Compute Engine [availability zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones) for launching worker instances to run your pipeline. In the future, worker_zone will take precedence.
     * 
     */
    public String zone() {
        return this.zone;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironmentResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> additionalExperiments;
        private Map<String,String> additionalUserLabels;
        private Boolean enableStreamingEngine;
        private String flexrsGoal;
        private String ipConfiguration;
        private String kmsKeyName;
        private String machineType;
        private Integer maxWorkers;
        private String network;
        private Integer numWorkers;
        private String serviceAccountEmail;
        private String subnetwork;
        private String tempLocation;
        private String workerRegion;
        private String workerZone;
        private String zone;
        public Builder() {}
        public Builder(GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironmentResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalExperiments = defaults.additionalExperiments;
    	      this.additionalUserLabels = defaults.additionalUserLabels;
    	      this.enableStreamingEngine = defaults.enableStreamingEngine;
    	      this.flexrsGoal = defaults.flexrsGoal;
    	      this.ipConfiguration = defaults.ipConfiguration;
    	      this.kmsKeyName = defaults.kmsKeyName;
    	      this.machineType = defaults.machineType;
    	      this.maxWorkers = defaults.maxWorkers;
    	      this.network = defaults.network;
    	      this.numWorkers = defaults.numWorkers;
    	      this.serviceAccountEmail = defaults.serviceAccountEmail;
    	      this.subnetwork = defaults.subnetwork;
    	      this.tempLocation = defaults.tempLocation;
    	      this.workerRegion = defaults.workerRegion;
    	      this.workerZone = defaults.workerZone;
    	      this.zone = defaults.zone;
        }

        @CustomType.Setter
        public Builder additionalExperiments(List<String> additionalExperiments) {
            this.additionalExperiments = Objects.requireNonNull(additionalExperiments);
            return this;
        }
        public Builder additionalExperiments(String... additionalExperiments) {
            return additionalExperiments(List.of(additionalExperiments));
        }
        @CustomType.Setter
        public Builder additionalUserLabels(Map<String,String> additionalUserLabels) {
            this.additionalUserLabels = Objects.requireNonNull(additionalUserLabels);
            return this;
        }
        @CustomType.Setter
        public Builder enableStreamingEngine(Boolean enableStreamingEngine) {
            this.enableStreamingEngine = Objects.requireNonNull(enableStreamingEngine);
            return this;
        }
        @CustomType.Setter
        public Builder flexrsGoal(String flexrsGoal) {
            this.flexrsGoal = Objects.requireNonNull(flexrsGoal);
            return this;
        }
        @CustomType.Setter
        public Builder ipConfiguration(String ipConfiguration) {
            this.ipConfiguration = Objects.requireNonNull(ipConfiguration);
            return this;
        }
        @CustomType.Setter
        public Builder kmsKeyName(String kmsKeyName) {
            this.kmsKeyName = Objects.requireNonNull(kmsKeyName);
            return this;
        }
        @CustomType.Setter
        public Builder machineType(String machineType) {
            this.machineType = Objects.requireNonNull(machineType);
            return this;
        }
        @CustomType.Setter
        public Builder maxWorkers(Integer maxWorkers) {
            this.maxWorkers = Objects.requireNonNull(maxWorkers);
            return this;
        }
        @CustomType.Setter
        public Builder network(String network) {
            this.network = Objects.requireNonNull(network);
            return this;
        }
        @CustomType.Setter
        public Builder numWorkers(Integer numWorkers) {
            this.numWorkers = Objects.requireNonNull(numWorkers);
            return this;
        }
        @CustomType.Setter
        public Builder serviceAccountEmail(String serviceAccountEmail) {
            this.serviceAccountEmail = Objects.requireNonNull(serviceAccountEmail);
            return this;
        }
        @CustomType.Setter
        public Builder subnetwork(String subnetwork) {
            this.subnetwork = Objects.requireNonNull(subnetwork);
            return this;
        }
        @CustomType.Setter
        public Builder tempLocation(String tempLocation) {
            this.tempLocation = Objects.requireNonNull(tempLocation);
            return this;
        }
        @CustomType.Setter
        public Builder workerRegion(String workerRegion) {
            this.workerRegion = Objects.requireNonNull(workerRegion);
            return this;
        }
        @CustomType.Setter
        public Builder workerZone(String workerZone) {
            this.workerZone = Objects.requireNonNull(workerZone);
            return this;
        }
        @CustomType.Setter
        public Builder zone(String zone) {
            this.zone = Objects.requireNonNull(zone);
            return this;
        }
        public GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironmentResponse build() {
            final var o = new GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironmentResponse();
            o.additionalExperiments = additionalExperiments;
            o.additionalUserLabels = additionalUserLabels;
            o.enableStreamingEngine = enableStreamingEngine;
            o.flexrsGoal = flexrsGoal;
            o.ipConfiguration = ipConfiguration;
            o.kmsKeyName = kmsKeyName;
            o.machineType = machineType;
            o.maxWorkers = maxWorkers;
            o.network = network;
            o.numWorkers = numWorkers;
            o.serviceAccountEmail = serviceAccountEmail;
            o.subnetwork = subnetwork;
            o.tempLocation = tempLocation;
            o.workerRegion = workerRegion;
            o.workerZone = workerZone;
            o.zone = zone;
            return o;
        }
    }
}
