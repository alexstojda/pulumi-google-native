// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.monitoring.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.monitoring.v1.outputs.AggregationResponse;
import com.pulumi.googlenative.monitoring.v1.outputs.PickTimeSeriesFilterResponse;
import com.pulumi.googlenative.monitoring.v1.outputs.StatisticalTimeSeriesFilterResponse;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class TimeSeriesFilterResponse {
    /**
     * @return By default, the raw time series data is returned. Use this field to combine multiple time series for different views of the data.
     * 
     */
    private AggregationResponse aggregation;
    /**
     * @return The monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
     * 
     */
    private String filter;
    /**
     * @return Ranking based time series filter.
     * 
     */
    private PickTimeSeriesFilterResponse pickTimeSeriesFilter;
    /**
     * @return Apply a second aggregation after aggregation is applied.
     * 
     */
    private AggregationResponse secondaryAggregation;
    /**
     * @return Statistics based time series filter. Note: This field is deprecated and completely ignored by the API.
     * 
     * @deprecated
     * Statistics based time series filter. Note: This field is deprecated and completely ignored by the API.
     * 
     */
    @Deprecated /* Statistics based time series filter. Note: This field is deprecated and completely ignored by the API. */
    private StatisticalTimeSeriesFilterResponse statisticalTimeSeriesFilter;

    private TimeSeriesFilterResponse() {}
    /**
     * @return By default, the raw time series data is returned. Use this field to combine multiple time series for different views of the data.
     * 
     */
    public AggregationResponse aggregation() {
        return this.aggregation;
    }
    /**
     * @return The monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
     * 
     */
    public String filter() {
        return this.filter;
    }
    /**
     * @return Ranking based time series filter.
     * 
     */
    public PickTimeSeriesFilterResponse pickTimeSeriesFilter() {
        return this.pickTimeSeriesFilter;
    }
    /**
     * @return Apply a second aggregation after aggregation is applied.
     * 
     */
    public AggregationResponse secondaryAggregation() {
        return this.secondaryAggregation;
    }
    /**
     * @return Statistics based time series filter. Note: This field is deprecated and completely ignored by the API.
     * 
     * @deprecated
     * Statistics based time series filter. Note: This field is deprecated and completely ignored by the API.
     * 
     */
    @Deprecated /* Statistics based time series filter. Note: This field is deprecated and completely ignored by the API. */
    public StatisticalTimeSeriesFilterResponse statisticalTimeSeriesFilter() {
        return this.statisticalTimeSeriesFilter;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TimeSeriesFilterResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private AggregationResponse aggregation;
        private String filter;
        private PickTimeSeriesFilterResponse pickTimeSeriesFilter;
        private AggregationResponse secondaryAggregation;
        private StatisticalTimeSeriesFilterResponse statisticalTimeSeriesFilter;
        public Builder() {}
        public Builder(TimeSeriesFilterResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aggregation = defaults.aggregation;
    	      this.filter = defaults.filter;
    	      this.pickTimeSeriesFilter = defaults.pickTimeSeriesFilter;
    	      this.secondaryAggregation = defaults.secondaryAggregation;
    	      this.statisticalTimeSeriesFilter = defaults.statisticalTimeSeriesFilter;
        }

        @CustomType.Setter
        public Builder aggregation(AggregationResponse aggregation) {
            this.aggregation = Objects.requireNonNull(aggregation);
            return this;
        }
        @CustomType.Setter
        public Builder filter(String filter) {
            this.filter = Objects.requireNonNull(filter);
            return this;
        }
        @CustomType.Setter
        public Builder pickTimeSeriesFilter(PickTimeSeriesFilterResponse pickTimeSeriesFilter) {
            this.pickTimeSeriesFilter = Objects.requireNonNull(pickTimeSeriesFilter);
            return this;
        }
        @CustomType.Setter
        public Builder secondaryAggregation(AggregationResponse secondaryAggregation) {
            this.secondaryAggregation = Objects.requireNonNull(secondaryAggregation);
            return this;
        }
        @CustomType.Setter
        public Builder statisticalTimeSeriesFilter(StatisticalTimeSeriesFilterResponse statisticalTimeSeriesFilter) {
            this.statisticalTimeSeriesFilter = Objects.requireNonNull(statisticalTimeSeriesFilter);
            return this;
        }
        public TimeSeriesFilterResponse build() {
            final var o = new TimeSeriesFilterResponse();
            o.aggregation = aggregation;
            o.filter = filter;
            o.pickTimeSeriesFilter = pickTimeSeriesFilter;
            o.secondaryAggregation = secondaryAggregation;
            o.statisticalTimeSeriesFilter = statisticalTimeSeriesFilter;
            return o;
        }
    }
}
