// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute.alpha.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ResourcePolicyGroupPlacementPolicyResponse {
    /**
     * @return The number of availability domains to spread instances across. If two instances are in different availability domain, they are not in the same low latency network.
     * 
     */
    private Integer availabilityDomainCount;
    /**
     * @return Specifies network collocation
     * 
     */
    private String collocation;
    /**
     * @return Specifies network locality
     * 
     */
    private String locality;
    /**
     * @return Scope specifies the availability domain to which the VMs should be spread.
     * 
     */
    private String scope;
    /**
     * @return Specifies instances to hosts placement relationship
     * 
     */
    private String style;
    /**
     * @return Number of VMs in this placement group. Google does not recommend that you use this field unless you use a compact policy and you want your policy to work only if it contains this exact number of VMs.
     * 
     */
    private Integer vmCount;

    private ResourcePolicyGroupPlacementPolicyResponse() {}
    /**
     * @return The number of availability domains to spread instances across. If two instances are in different availability domain, they are not in the same low latency network.
     * 
     */
    public Integer availabilityDomainCount() {
        return this.availabilityDomainCount;
    }
    /**
     * @return Specifies network collocation
     * 
     */
    public String collocation() {
        return this.collocation;
    }
    /**
     * @return Specifies network locality
     * 
     */
    public String locality() {
        return this.locality;
    }
    /**
     * @return Scope specifies the availability domain to which the VMs should be spread.
     * 
     */
    public String scope() {
        return this.scope;
    }
    /**
     * @return Specifies instances to hosts placement relationship
     * 
     */
    public String style() {
        return this.style;
    }
    /**
     * @return Number of VMs in this placement group. Google does not recommend that you use this field unless you use a compact policy and you want your policy to work only if it contains this exact number of VMs.
     * 
     */
    public Integer vmCount() {
        return this.vmCount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResourcePolicyGroupPlacementPolicyResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer availabilityDomainCount;
        private String collocation;
        private String locality;
        private String scope;
        private String style;
        private Integer vmCount;
        public Builder() {}
        public Builder(ResourcePolicyGroupPlacementPolicyResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomainCount = defaults.availabilityDomainCount;
    	      this.collocation = defaults.collocation;
    	      this.locality = defaults.locality;
    	      this.scope = defaults.scope;
    	      this.style = defaults.style;
    	      this.vmCount = defaults.vmCount;
        }

        @CustomType.Setter
        public Builder availabilityDomainCount(Integer availabilityDomainCount) {
            this.availabilityDomainCount = Objects.requireNonNull(availabilityDomainCount);
            return this;
        }
        @CustomType.Setter
        public Builder collocation(String collocation) {
            this.collocation = Objects.requireNonNull(collocation);
            return this;
        }
        @CustomType.Setter
        public Builder locality(String locality) {
            this.locality = Objects.requireNonNull(locality);
            return this;
        }
        @CustomType.Setter
        public Builder scope(String scope) {
            this.scope = Objects.requireNonNull(scope);
            return this;
        }
        @CustomType.Setter
        public Builder style(String style) {
            this.style = Objects.requireNonNull(style);
            return this;
        }
        @CustomType.Setter
        public Builder vmCount(Integer vmCount) {
            this.vmCount = Objects.requireNonNull(vmCount);
            return this;
        }
        public ResourcePolicyGroupPlacementPolicyResponse build() {
            final var o = new ResourcePolicyGroupPlacementPolicyResponse();
            o.availabilityDomainCount = availabilityDomainCount;
            o.collocation = collocation;
            o.locality = locality;
            o.scope = scope;
            o.style = style;
            o.vmCount = vmCount;
            return o;
        }
    }
}
