// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.monitoring.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ThresholdResponse {
    /**
     * @return The state color for this threshold. Color is not allowed in a XyChart.
     * 
     */
    private String color;
    /**
     * @return The direction for the current threshold. Direction is not allowed in a XyChart.
     * 
     */
    private String direction;
    /**
     * @return A label for the threshold.
     * 
     */
    private String label;
    /**
     * @return The target axis to use for plotting the threshold. Target axis is not allowed in a Scorecard.
     * 
     */
    private String targetAxis;
    /**
     * @return The value of the threshold. The value should be defined in the native scale of the metric.
     * 
     */
    private Double value;

    private ThresholdResponse() {}
    /**
     * @return The state color for this threshold. Color is not allowed in a XyChart.
     * 
     */
    public String color() {
        return this.color;
    }
    /**
     * @return The direction for the current threshold. Direction is not allowed in a XyChart.
     * 
     */
    public String direction() {
        return this.direction;
    }
    /**
     * @return A label for the threshold.
     * 
     */
    public String label() {
        return this.label;
    }
    /**
     * @return The target axis to use for plotting the threshold. Target axis is not allowed in a Scorecard.
     * 
     */
    public String targetAxis() {
        return this.targetAxis;
    }
    /**
     * @return The value of the threshold. The value should be defined in the native scale of the metric.
     * 
     */
    public Double value() {
        return this.value;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ThresholdResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String color;
        private String direction;
        private String label;
        private String targetAxis;
        private Double value;
        public Builder() {}
        public Builder(ThresholdResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.color = defaults.color;
    	      this.direction = defaults.direction;
    	      this.label = defaults.label;
    	      this.targetAxis = defaults.targetAxis;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder color(String color) {
            this.color = Objects.requireNonNull(color);
            return this;
        }
        @CustomType.Setter
        public Builder direction(String direction) {
            this.direction = Objects.requireNonNull(direction);
            return this;
        }
        @CustomType.Setter
        public Builder label(String label) {
            this.label = Objects.requireNonNull(label);
            return this;
        }
        @CustomType.Setter
        public Builder targetAxis(String targetAxis) {
            this.targetAxis = Objects.requireNonNull(targetAxis);
            return this;
        }
        @CustomType.Setter
        public Builder value(Double value) {
            this.value = Objects.requireNonNull(value);
            return this;
        }
        public ThresholdResponse build() {
            final var o = new ThresholdResponse();
            o.color = color;
            o.direction = direction;
            o.label = label;
            o.targetAxis = targetAxis;
            o.value = value;
            return o;
        }
    }
}
