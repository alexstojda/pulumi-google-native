// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.bigquery.v2.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class JobStatistics3Response {
    /**
     * @return The number of bad records encountered. Note that if the job has failed because of more bad records encountered than the maximum allowed in the load job configuration, then this number can be less than the total number of bad records present in the input data.
     * 
     */
    private String badRecords;
    /**
     * @return Number of bytes of source data in a load job.
     * 
     */
    private String inputFileBytes;
    /**
     * @return Number of source files in a load job.
     * 
     */
    private String inputFiles;
    /**
     * @return Size of the loaded data in bytes. Note that while a load job is in the running state, this value may change.
     * 
     */
    private String outputBytes;
    /**
     * @return Number of rows imported in a load job. Note that while an import job is in the running state, this value may change.
     * 
     */
    private String outputRows;

    private JobStatistics3Response() {}
    /**
     * @return The number of bad records encountered. Note that if the job has failed because of more bad records encountered than the maximum allowed in the load job configuration, then this number can be less than the total number of bad records present in the input data.
     * 
     */
    public String badRecords() {
        return this.badRecords;
    }
    /**
     * @return Number of bytes of source data in a load job.
     * 
     */
    public String inputFileBytes() {
        return this.inputFileBytes;
    }
    /**
     * @return Number of source files in a load job.
     * 
     */
    public String inputFiles() {
        return this.inputFiles;
    }
    /**
     * @return Size of the loaded data in bytes. Note that while a load job is in the running state, this value may change.
     * 
     */
    public String outputBytes() {
        return this.outputBytes;
    }
    /**
     * @return Number of rows imported in a load job. Note that while an import job is in the running state, this value may change.
     * 
     */
    public String outputRows() {
        return this.outputRows;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobStatistics3Response defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String badRecords;
        private String inputFileBytes;
        private String inputFiles;
        private String outputBytes;
        private String outputRows;
        public Builder() {}
        public Builder(JobStatistics3Response defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.badRecords = defaults.badRecords;
    	      this.inputFileBytes = defaults.inputFileBytes;
    	      this.inputFiles = defaults.inputFiles;
    	      this.outputBytes = defaults.outputBytes;
    	      this.outputRows = defaults.outputRows;
        }

        @CustomType.Setter
        public Builder badRecords(String badRecords) {
            this.badRecords = Objects.requireNonNull(badRecords);
            return this;
        }
        @CustomType.Setter
        public Builder inputFileBytes(String inputFileBytes) {
            this.inputFileBytes = Objects.requireNonNull(inputFileBytes);
            return this;
        }
        @CustomType.Setter
        public Builder inputFiles(String inputFiles) {
            this.inputFiles = Objects.requireNonNull(inputFiles);
            return this;
        }
        @CustomType.Setter
        public Builder outputBytes(String outputBytes) {
            this.outputBytes = Objects.requireNonNull(outputBytes);
            return this;
        }
        @CustomType.Setter
        public Builder outputRows(String outputRows) {
            this.outputRows = Objects.requireNonNull(outputRows);
            return this;
        }
        public JobStatistics3Response build() {
            final var o = new JobStatistics3Response();
            o.badRecords = badRecords;
            o.inputFileBytes = inputFileBytes;
            o.inputFiles = inputFiles;
            o.outputBytes = outputBytes;
            o.outputRows = outputRows;
            return o;
        }
    }
}
