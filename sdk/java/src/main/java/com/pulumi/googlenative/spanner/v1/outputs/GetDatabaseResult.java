// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.spanner.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.spanner.v1.outputs.EncryptionConfigResponse;
import com.pulumi.googlenative.spanner.v1.outputs.EncryptionInfoResponse;
import com.pulumi.googlenative.spanner.v1.outputs.RestoreInfoResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDatabaseResult {
    /**
     * @return If exists, the time at which the database creation started.
     * 
     */
    private String createTime;
    /**
     * @return The dialect of the Cloud Spanner Database.
     * 
     */
    private String databaseDialect;
    /**
     * @return The read-write region which contains the database&#39;s leader replicas. This is the same as the value of default_leader database option set using DatabaseAdmin.CreateDatabase or DatabaseAdmin.UpdateDatabaseDdl. If not explicitly set, this is empty.
     * 
     */
    private String defaultLeader;
    /**
     * @return Earliest timestamp at which older versions of the data can be read. This value is continuously updated by Cloud Spanner and becomes stale the moment it is queried. If you are using this value to recover data, make sure to account for the time from the moment when the value is queried to the moment when you initiate the recovery.
     * 
     */
    private String earliestVersionTime;
    /**
     * @return For databases that are using customer managed encryption, this field contains the encryption configuration for the database. For databases that are using Google default or other types of encryption, this field is empty.
     * 
     */
    private EncryptionConfigResponse encryptionConfig;
    /**
     * @return For databases that are using customer managed encryption, this field contains the encryption information for the database, such as encryption state and the Cloud KMS key versions that are in use. For databases that are using Google default or other types of encryption, this field is empty. This field is propagated lazily from the backend. There might be a delay from when a key version is being used and when it appears in this field.
     * 
     */
    private List<EncryptionInfoResponse> encryptionInfo;
    /**
     * @return The name of the database. Values are of the form `projects//instances//databases/`, where `` is as specified in the `CREATE DATABASE` statement. This name can be passed to other API methods to identify the database.
     * 
     */
    private String name;
    /**
     * @return Applicable only for restored databases. Contains information about the restore source.
     * 
     */
    private RestoreInfoResponse restoreInfo;
    /**
     * @return The current database state.
     * 
     */
    private String state;
    /**
     * @return The period in which Cloud Spanner retains all versions of data for the database. This is the same as the value of version_retention_period database option set using UpdateDatabaseDdl. Defaults to 1 hour, if not set.
     * 
     */
    private String versionRetentionPeriod;

    private GetDatabaseResult() {}
    /**
     * @return If exists, the time at which the database creation started.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return The dialect of the Cloud Spanner Database.
     * 
     */
    public String databaseDialect() {
        return this.databaseDialect;
    }
    /**
     * @return The read-write region which contains the database&#39;s leader replicas. This is the same as the value of default_leader database option set using DatabaseAdmin.CreateDatabase or DatabaseAdmin.UpdateDatabaseDdl. If not explicitly set, this is empty.
     * 
     */
    public String defaultLeader() {
        return this.defaultLeader;
    }
    /**
     * @return Earliest timestamp at which older versions of the data can be read. This value is continuously updated by Cloud Spanner and becomes stale the moment it is queried. If you are using this value to recover data, make sure to account for the time from the moment when the value is queried to the moment when you initiate the recovery.
     * 
     */
    public String earliestVersionTime() {
        return this.earliestVersionTime;
    }
    /**
     * @return For databases that are using customer managed encryption, this field contains the encryption configuration for the database. For databases that are using Google default or other types of encryption, this field is empty.
     * 
     */
    public EncryptionConfigResponse encryptionConfig() {
        return this.encryptionConfig;
    }
    /**
     * @return For databases that are using customer managed encryption, this field contains the encryption information for the database, such as encryption state and the Cloud KMS key versions that are in use. For databases that are using Google default or other types of encryption, this field is empty. This field is propagated lazily from the backend. There might be a delay from when a key version is being used and when it appears in this field.
     * 
     */
    public List<EncryptionInfoResponse> encryptionInfo() {
        return this.encryptionInfo;
    }
    /**
     * @return The name of the database. Values are of the form `projects//instances//databases/`, where `` is as specified in the `CREATE DATABASE` statement. This name can be passed to other API methods to identify the database.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Applicable only for restored databases. Contains information about the restore source.
     * 
     */
    public RestoreInfoResponse restoreInfo() {
        return this.restoreInfo;
    }
    /**
     * @return The current database state.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The period in which Cloud Spanner retains all versions of data for the database. This is the same as the value of version_retention_period database option set using UpdateDatabaseDdl. Defaults to 1 hour, if not set.
     * 
     */
    public String versionRetentionPeriod() {
        return this.versionRetentionPeriod;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDatabaseResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String createTime;
        private String databaseDialect;
        private String defaultLeader;
        private String earliestVersionTime;
        private EncryptionConfigResponse encryptionConfig;
        private List<EncryptionInfoResponse> encryptionInfo;
        private String name;
        private RestoreInfoResponse restoreInfo;
        private String state;
        private String versionRetentionPeriod;
        public Builder() {}
        public Builder(GetDatabaseResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.databaseDialect = defaults.databaseDialect;
    	      this.defaultLeader = defaults.defaultLeader;
    	      this.earliestVersionTime = defaults.earliestVersionTime;
    	      this.encryptionConfig = defaults.encryptionConfig;
    	      this.encryptionInfo = defaults.encryptionInfo;
    	      this.name = defaults.name;
    	      this.restoreInfo = defaults.restoreInfo;
    	      this.state = defaults.state;
    	      this.versionRetentionPeriod = defaults.versionRetentionPeriod;
        }

        @CustomType.Setter
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        @CustomType.Setter
        public Builder databaseDialect(String databaseDialect) {
            this.databaseDialect = Objects.requireNonNull(databaseDialect);
            return this;
        }
        @CustomType.Setter
        public Builder defaultLeader(String defaultLeader) {
            this.defaultLeader = Objects.requireNonNull(defaultLeader);
            return this;
        }
        @CustomType.Setter
        public Builder earliestVersionTime(String earliestVersionTime) {
            this.earliestVersionTime = Objects.requireNonNull(earliestVersionTime);
            return this;
        }
        @CustomType.Setter
        public Builder encryptionConfig(EncryptionConfigResponse encryptionConfig) {
            this.encryptionConfig = Objects.requireNonNull(encryptionConfig);
            return this;
        }
        @CustomType.Setter
        public Builder encryptionInfo(List<EncryptionInfoResponse> encryptionInfo) {
            this.encryptionInfo = Objects.requireNonNull(encryptionInfo);
            return this;
        }
        public Builder encryptionInfo(EncryptionInfoResponse... encryptionInfo) {
            return encryptionInfo(List.of(encryptionInfo));
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder restoreInfo(RestoreInfoResponse restoreInfo) {
            this.restoreInfo = Objects.requireNonNull(restoreInfo);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder versionRetentionPeriod(String versionRetentionPeriod) {
            this.versionRetentionPeriod = Objects.requireNonNull(versionRetentionPeriod);
            return this;
        }
        public GetDatabaseResult build() {
            final var o = new GetDatabaseResult();
            o.createTime = createTime;
            o.databaseDialect = databaseDialect;
            o.defaultLeader = defaultLeader;
            o.earliestVersionTime = earliestVersionTime;
            o.encryptionConfig = encryptionConfig;
            o.encryptionInfo = encryptionInfo;
            o.name = name;
            o.restoreInfo = restoreInfo;
            o.state = state;
            o.versionRetentionPeriod = versionRetentionPeriod;
            return o;
        }
    }
}
