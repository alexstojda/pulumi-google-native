// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute.beta.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class HttpFilterConfigResponse {
    /**
     * @return The configuration needed to enable the networkservices.HttpFilter resource. The configuration must be YAML formatted and only contain fields defined in the protobuf identified in configTypeUrl
     * 
     */
    private String config;
    /**
     * @return The fully qualified versioned proto3 type url of the protobuf that the filter expects for its contextual settings, for example: type.googleapis.com/google.protobuf.Struct
     * 
     */
    private String configTypeUrl;
    /**
     * @return Name of the networkservices.HttpFilter resource this configuration belongs to. This name must be known to the xDS client. Example: envoy.wasm
     * 
     */
    private String filterName;

    private HttpFilterConfigResponse() {}
    /**
     * @return The configuration needed to enable the networkservices.HttpFilter resource. The configuration must be YAML formatted and only contain fields defined in the protobuf identified in configTypeUrl
     * 
     */
    public String config() {
        return this.config;
    }
    /**
     * @return The fully qualified versioned proto3 type url of the protobuf that the filter expects for its contextual settings, for example: type.googleapis.com/google.protobuf.Struct
     * 
     */
    public String configTypeUrl() {
        return this.configTypeUrl;
    }
    /**
     * @return Name of the networkservices.HttpFilter resource this configuration belongs to. This name must be known to the xDS client. Example: envoy.wasm
     * 
     */
    public String filterName() {
        return this.filterName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(HttpFilterConfigResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String config;
        private String configTypeUrl;
        private String filterName;
        public Builder() {}
        public Builder(HttpFilterConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.config = defaults.config;
    	      this.configTypeUrl = defaults.configTypeUrl;
    	      this.filterName = defaults.filterName;
        }

        @CustomType.Setter
        public Builder config(String config) {
            this.config = Objects.requireNonNull(config);
            return this;
        }
        @CustomType.Setter
        public Builder configTypeUrl(String configTypeUrl) {
            this.configTypeUrl = Objects.requireNonNull(configTypeUrl);
            return this;
        }
        @CustomType.Setter
        public Builder filterName(String filterName) {
            this.filterName = Objects.requireNonNull(filterName);
            return this;
        }
        public HttpFilterConfigResponse build() {
            final var o = new HttpFilterConfigResponse();
            o.config = config;
            o.configTypeUrl = configTypeUrl;
            o.filterName = filterName;
            return o;
        }
    }
}
