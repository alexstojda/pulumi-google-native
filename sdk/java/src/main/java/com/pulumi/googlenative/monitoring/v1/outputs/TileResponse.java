// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.monitoring.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.monitoring.v1.outputs.WidgetResponse;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class TileResponse {
    /**
     * @return The height of the tile, measured in grid blocks. Tiles must have a minimum height of 1.
     * 
     */
    private Integer height;
    /**
     * @return The informational widget contained in the tile. For example an XyChart.
     * 
     */
    private WidgetResponse widget;
    /**
     * @return The width of the tile, measured in grid blocks. Tiles must have a minimum width of 1.
     * 
     */
    private Integer width;
    /**
     * @return The zero-indexed position of the tile in grid blocks relative to the left edge of the grid. Tiles must be contained within the specified number of columns. x_pos cannot be negative.
     * 
     */
    private Integer xPos;
    /**
     * @return The zero-indexed position of the tile in grid blocks relative to the top edge of the grid. y_pos cannot be negative.
     * 
     */
    private Integer yPos;

    private TileResponse() {}
    /**
     * @return The height of the tile, measured in grid blocks. Tiles must have a minimum height of 1.
     * 
     */
    public Integer height() {
        return this.height;
    }
    /**
     * @return The informational widget contained in the tile. For example an XyChart.
     * 
     */
    public WidgetResponse widget() {
        return this.widget;
    }
    /**
     * @return The width of the tile, measured in grid blocks. Tiles must have a minimum width of 1.
     * 
     */
    public Integer width() {
        return this.width;
    }
    /**
     * @return The zero-indexed position of the tile in grid blocks relative to the left edge of the grid. Tiles must be contained within the specified number of columns. x_pos cannot be negative.
     * 
     */
    public Integer xPos() {
        return this.xPos;
    }
    /**
     * @return The zero-indexed position of the tile in grid blocks relative to the top edge of the grid. y_pos cannot be negative.
     * 
     */
    public Integer yPos() {
        return this.yPos;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TileResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer height;
        private WidgetResponse widget;
        private Integer width;
        private Integer xPos;
        private Integer yPos;
        public Builder() {}
        public Builder(TileResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.height = defaults.height;
    	      this.widget = defaults.widget;
    	      this.width = defaults.width;
    	      this.xPos = defaults.xPos;
    	      this.yPos = defaults.yPos;
        }

        @CustomType.Setter
        public Builder height(Integer height) {
            this.height = Objects.requireNonNull(height);
            return this;
        }
        @CustomType.Setter
        public Builder widget(WidgetResponse widget) {
            this.widget = Objects.requireNonNull(widget);
            return this;
        }
        @CustomType.Setter
        public Builder width(Integer width) {
            this.width = Objects.requireNonNull(width);
            return this;
        }
        @CustomType.Setter
        public Builder xPos(Integer xPos) {
            this.xPos = Objects.requireNonNull(xPos);
            return this;
        }
        @CustomType.Setter
        public Builder yPos(Integer yPos) {
            this.yPos = Objects.requireNonNull(yPos);
            return this;
        }
        public TileResponse build() {
            final var o = new TileResponse();
            o.height = height;
            o.widget = widget;
            o.width = width;
            o.xPos = xPos;
            o.yPos = yPos;
            return o;
        }
    }
}
