// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.toolresults.v1beta3.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.util.Objects;

@CustomType
public final class SkippedDetailResponse {
    /**
     * @return If the App doesn&#39;t support the specific API level.
     * 
     */
    private Boolean incompatibleAppVersion;
    /**
     * @return If the App doesn&#39;t run on the specific architecture, for example, x86.
     * 
     */
    private Boolean incompatibleArchitecture;
    /**
     * @return If the requested OS version doesn&#39;t run on the specific device model.
     * 
     */
    private Boolean incompatibleDevice;

    private SkippedDetailResponse() {}
    /**
     * @return If the App doesn&#39;t support the specific API level.
     * 
     */
    public Boolean incompatibleAppVersion() {
        return this.incompatibleAppVersion;
    }
    /**
     * @return If the App doesn&#39;t run on the specific architecture, for example, x86.
     * 
     */
    public Boolean incompatibleArchitecture() {
        return this.incompatibleArchitecture;
    }
    /**
     * @return If the requested OS version doesn&#39;t run on the specific device model.
     * 
     */
    public Boolean incompatibleDevice() {
        return this.incompatibleDevice;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SkippedDetailResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean incompatibleAppVersion;
        private Boolean incompatibleArchitecture;
        private Boolean incompatibleDevice;
        public Builder() {}
        public Builder(SkippedDetailResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.incompatibleAppVersion = defaults.incompatibleAppVersion;
    	      this.incompatibleArchitecture = defaults.incompatibleArchitecture;
    	      this.incompatibleDevice = defaults.incompatibleDevice;
        }

        @CustomType.Setter
        public Builder incompatibleAppVersion(Boolean incompatibleAppVersion) {
            this.incompatibleAppVersion = Objects.requireNonNull(incompatibleAppVersion);
            return this;
        }
        @CustomType.Setter
        public Builder incompatibleArchitecture(Boolean incompatibleArchitecture) {
            this.incompatibleArchitecture = Objects.requireNonNull(incompatibleArchitecture);
            return this;
        }
        @CustomType.Setter
        public Builder incompatibleDevice(Boolean incompatibleDevice) {
            this.incompatibleDevice = Objects.requireNonNull(incompatibleDevice);
            return this;
        }
        public SkippedDetailResponse build() {
            final var o = new SkippedDetailResponse();
            o.incompatibleAppVersion = incompatibleAppVersion;
            o.incompatibleArchitecture = incompatibleArchitecture;
            o.incompatibleDevice = incompatibleDevice;
            return o;
        }
    }
}
