// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute.alpha.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class ErrorInfoResponse {
    /**
     * @return The logical grouping to which the &#34;reason&#34; belongs. The error domain is typically the registered service name of the tool or product that generates the error. Example: &#34;pubsub.googleapis.com&#34;. If the error is generated by some common infrastructure, the error domain must be a globally unique value that identifies the infrastructure. For Google API infrastructure, the error domain is &#34;googleapis.com&#34;.
     * 
     */
    private String domain;
    /**
     * @return Additional structured details about this error. Keys should match /[a-zA-Z0-9-_]/ and be limited to 64 characters in length. When identifying the current value of an exceeded limit, the units should be contained in the key, not the value. For example, rather than {&#34;instanceLimit&#34;: &#34;100/request&#34;}, should be returned as, {&#34;instanceLimitPerRequest&#34;: &#34;100&#34;}, if the client exceeds the number of instances that can be created in a single (batch) request.
     * 
     */
    private Map<String,String> metadatas;
    /**
     * @return The reason of the error. This is a constant value that identifies the proximate cause of the error. Error reasons are unique within a particular domain of errors. This should be at most 63 characters and match /[A-Z0-9_]+/.
     * 
     */
    private String reason;

    private ErrorInfoResponse() {}
    /**
     * @return The logical grouping to which the &#34;reason&#34; belongs. The error domain is typically the registered service name of the tool or product that generates the error. Example: &#34;pubsub.googleapis.com&#34;. If the error is generated by some common infrastructure, the error domain must be a globally unique value that identifies the infrastructure. For Google API infrastructure, the error domain is &#34;googleapis.com&#34;.
     * 
     */
    public String domain() {
        return this.domain;
    }
    /**
     * @return Additional structured details about this error. Keys should match /[a-zA-Z0-9-_]/ and be limited to 64 characters in length. When identifying the current value of an exceeded limit, the units should be contained in the key, not the value. For example, rather than {&#34;instanceLimit&#34;: &#34;100/request&#34;}, should be returned as, {&#34;instanceLimitPerRequest&#34;: &#34;100&#34;}, if the client exceeds the number of instances that can be created in a single (batch) request.
     * 
     */
    public Map<String,String> metadatas() {
        return this.metadatas;
    }
    /**
     * @return The reason of the error. This is a constant value that identifies the proximate cause of the error. Error reasons are unique within a particular domain of errors. This should be at most 63 characters and match /[A-Z0-9_]+/.
     * 
     */
    public String reason() {
        return this.reason;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ErrorInfoResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String domain;
        private Map<String,String> metadatas;
        private String reason;
        public Builder() {}
        public Builder(ErrorInfoResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.domain = defaults.domain;
    	      this.metadatas = defaults.metadatas;
    	      this.reason = defaults.reason;
        }

        @CustomType.Setter
        public Builder domain(String domain) {
            this.domain = Objects.requireNonNull(domain);
            return this;
        }
        @CustomType.Setter
        public Builder metadatas(Map<String,String> metadatas) {
            this.metadatas = Objects.requireNonNull(metadatas);
            return this;
        }
        @CustomType.Setter
        public Builder reason(String reason) {
            this.reason = Objects.requireNonNull(reason);
            return this;
        }
        public ErrorInfoResponse build() {
            final var o = new ErrorInfoResponse();
            o.domain = domain;
            o.metadatas = metadatas;
            o.reason = reason;
            return o;
        }
    }
}
