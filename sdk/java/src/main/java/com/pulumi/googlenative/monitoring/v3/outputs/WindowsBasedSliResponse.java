// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.monitoring.v3.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.monitoring.v3.outputs.MetricRangeResponse;
import com.pulumi.googlenative.monitoring.v3.outputs.PerformanceThresholdResponse;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class WindowsBasedSliResponse {
    /**
     * @return A monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) specifying a TimeSeries with ValueType = BOOL. The window is good if any true values appear in the window.
     * 
     */
    private String goodBadMetricFilter;
    /**
     * @return A window is good if its performance is high enough.
     * 
     */
    private PerformanceThresholdResponse goodTotalRatioThreshold;
    /**
     * @return A window is good if the metric&#39;s value is in a good range, averaged across returned streams.
     * 
     */
    private MetricRangeResponse metricMeanInRange;
    /**
     * @return A window is good if the metric&#39;s value is in a good range, summed across returned streams.
     * 
     */
    private MetricRangeResponse metricSumInRange;
    /**
     * @return Duration over which window quality is evaluated. Must be an integer fraction of a day and at least 60s.
     * 
     */
    private String windowPeriod;

    private WindowsBasedSliResponse() {}
    /**
     * @return A monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) specifying a TimeSeries with ValueType = BOOL. The window is good if any true values appear in the window.
     * 
     */
    public String goodBadMetricFilter() {
        return this.goodBadMetricFilter;
    }
    /**
     * @return A window is good if its performance is high enough.
     * 
     */
    public PerformanceThresholdResponse goodTotalRatioThreshold() {
        return this.goodTotalRatioThreshold;
    }
    /**
     * @return A window is good if the metric&#39;s value is in a good range, averaged across returned streams.
     * 
     */
    public MetricRangeResponse metricMeanInRange() {
        return this.metricMeanInRange;
    }
    /**
     * @return A window is good if the metric&#39;s value is in a good range, summed across returned streams.
     * 
     */
    public MetricRangeResponse metricSumInRange() {
        return this.metricSumInRange;
    }
    /**
     * @return Duration over which window quality is evaluated. Must be an integer fraction of a day and at least 60s.
     * 
     */
    public String windowPeriod() {
        return this.windowPeriod;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WindowsBasedSliResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String goodBadMetricFilter;
        private PerformanceThresholdResponse goodTotalRatioThreshold;
        private MetricRangeResponse metricMeanInRange;
        private MetricRangeResponse metricSumInRange;
        private String windowPeriod;
        public Builder() {}
        public Builder(WindowsBasedSliResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.goodBadMetricFilter = defaults.goodBadMetricFilter;
    	      this.goodTotalRatioThreshold = defaults.goodTotalRatioThreshold;
    	      this.metricMeanInRange = defaults.metricMeanInRange;
    	      this.metricSumInRange = defaults.metricSumInRange;
    	      this.windowPeriod = defaults.windowPeriod;
        }

        @CustomType.Setter
        public Builder goodBadMetricFilter(String goodBadMetricFilter) {
            this.goodBadMetricFilter = Objects.requireNonNull(goodBadMetricFilter);
            return this;
        }
        @CustomType.Setter
        public Builder goodTotalRatioThreshold(PerformanceThresholdResponse goodTotalRatioThreshold) {
            this.goodTotalRatioThreshold = Objects.requireNonNull(goodTotalRatioThreshold);
            return this;
        }
        @CustomType.Setter
        public Builder metricMeanInRange(MetricRangeResponse metricMeanInRange) {
            this.metricMeanInRange = Objects.requireNonNull(metricMeanInRange);
            return this;
        }
        @CustomType.Setter
        public Builder metricSumInRange(MetricRangeResponse metricSumInRange) {
            this.metricSumInRange = Objects.requireNonNull(metricSumInRange);
            return this;
        }
        @CustomType.Setter
        public Builder windowPeriod(String windowPeriod) {
            this.windowPeriod = Objects.requireNonNull(windowPeriod);
            return this;
        }
        public WindowsBasedSliResponse build() {
            final var o = new WindowsBasedSliResponse();
            o.goodBadMetricFilter = goodBadMetricFilter;
            o.goodTotalRatioThreshold = goodTotalRatioThreshold;
            o.metricMeanInRange = metricMeanInRange;
            o.metricSumInRange = metricSumInRange;
            o.windowPeriod = windowPeriod;
            return o;
        }
    }
}
