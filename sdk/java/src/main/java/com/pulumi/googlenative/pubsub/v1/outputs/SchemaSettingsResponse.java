// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.pubsub.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class SchemaSettingsResponse {
    /**
     * @return The encoding of messages validated against `schema`.
     * 
     */
    private String encoding;
    /**
     * @return The minimum (inclusive) revision allowed for validating messages. If empty or not present, allow any revision to be validated against last_revision or any revision created before.
     * 
     */
    private String firstRevisionId;
    /**
     * @return The maximum (inclusive) revision allowed for validating messages. If empty or not present, allow any revision to be validated against first_revision or any revision created after.
     * 
     */
    private String lastRevisionId;
    /**
     * @return The name of the schema that messages published should be validated against. Format is `projects/{project}/schemas/{schema}`. The value of this field will be `_deleted-schema_` if the schema has been deleted.
     * 
     */
    private String schema;

    private SchemaSettingsResponse() {}
    /**
     * @return The encoding of messages validated against `schema`.
     * 
     */
    public String encoding() {
        return this.encoding;
    }
    /**
     * @return The minimum (inclusive) revision allowed for validating messages. If empty or not present, allow any revision to be validated against last_revision or any revision created before.
     * 
     */
    public String firstRevisionId() {
        return this.firstRevisionId;
    }
    /**
     * @return The maximum (inclusive) revision allowed for validating messages. If empty or not present, allow any revision to be validated against first_revision or any revision created after.
     * 
     */
    public String lastRevisionId() {
        return this.lastRevisionId;
    }
    /**
     * @return The name of the schema that messages published should be validated against. Format is `projects/{project}/schemas/{schema}`. The value of this field will be `_deleted-schema_` if the schema has been deleted.
     * 
     */
    public String schema() {
        return this.schema;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SchemaSettingsResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String encoding;
        private String firstRevisionId;
        private String lastRevisionId;
        private String schema;
        public Builder() {}
        public Builder(SchemaSettingsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.encoding = defaults.encoding;
    	      this.firstRevisionId = defaults.firstRevisionId;
    	      this.lastRevisionId = defaults.lastRevisionId;
    	      this.schema = defaults.schema;
        }

        @CustomType.Setter
        public Builder encoding(String encoding) {
            this.encoding = Objects.requireNonNull(encoding);
            return this;
        }
        @CustomType.Setter
        public Builder firstRevisionId(String firstRevisionId) {
            this.firstRevisionId = Objects.requireNonNull(firstRevisionId);
            return this;
        }
        @CustomType.Setter
        public Builder lastRevisionId(String lastRevisionId) {
            this.lastRevisionId = Objects.requireNonNull(lastRevisionId);
            return this;
        }
        @CustomType.Setter
        public Builder schema(String schema) {
            this.schema = Objects.requireNonNull(schema);
            return this;
        }
        public SchemaSettingsResponse build() {
            final var o = new SchemaSettingsResponse();
            o.encoding = encoding;
            o.firstRevisionId = firstRevisionId;
            o.lastRevisionId = lastRevisionId;
            o.schema = schema;
            return o;
        }
    }
}
