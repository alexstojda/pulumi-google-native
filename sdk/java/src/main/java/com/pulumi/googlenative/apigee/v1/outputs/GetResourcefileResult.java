// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.apigee.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetResourcefileResult {
    /**
     * @return The HTTP Content-Type header value specifying the content type of the body.
     * 
     */
    private String contentType;
    /**
     * @return The HTTP request/response body as raw binary.
     * 
     */
    private String data;
    /**
     * @return Application specific response metadata. Must be set in the first response for streaming APIs.
     * 
     */
    private List<Map<String,String>> extensions;

    private GetResourcefileResult() {}
    /**
     * @return The HTTP Content-Type header value specifying the content type of the body.
     * 
     */
    public String contentType() {
        return this.contentType;
    }
    /**
     * @return The HTTP request/response body as raw binary.
     * 
     */
    public String data() {
        return this.data;
    }
    /**
     * @return Application specific response metadata. Must be set in the first response for streaming APIs.
     * 
     */
    public List<Map<String,String>> extensions() {
        return this.extensions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetResourcefileResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String contentType;
        private String data;
        private List<Map<String,String>> extensions;
        public Builder() {}
        public Builder(GetResourcefileResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.contentType = defaults.contentType;
    	      this.data = defaults.data;
    	      this.extensions = defaults.extensions;
        }

        @CustomType.Setter
        public Builder contentType(String contentType) {
            this.contentType = Objects.requireNonNull(contentType);
            return this;
        }
        @CustomType.Setter
        public Builder data(String data) {
            this.data = Objects.requireNonNull(data);
            return this;
        }
        @CustomType.Setter
        public Builder extensions(List<Map<String,String>> extensions) {
            this.extensions = Objects.requireNonNull(extensions);
            return this;
        }
        public GetResourcefileResult build() {
            final var o = new GetResourcefileResult();
            o.contentType = contentType;
            o.data = data;
            o.extensions = extensions;
            return o;
        }
    }
}
