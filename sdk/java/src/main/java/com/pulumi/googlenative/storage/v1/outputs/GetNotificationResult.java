// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.storage.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetNotificationResult {
    /**
     * @return An optional list of additional attributes to attach to each Cloud PubSub message published for this notification subscription.
     * 
     */
    private Map<String,String> customAttributes;
    /**
     * @return HTTP 1.1 Entity tag for this subscription notification.
     * 
     */
    private String etag;
    /**
     * @return If present, only send notifications about listed event types. If empty, sent notifications for all event types.
     * 
     */
    private List<String> eventTypes;
    /**
     * @return The kind of item this is. For notifications, this is always storage#notification.
     * 
     */
    private String kind;
    /**
     * @return If present, only apply this notification configuration to object names that begin with this prefix.
     * 
     */
    private String objectNamePrefix;
    /**
     * @return The desired content of the Payload.
     * 
     */
    private String payloadFormat;
    /**
     * @return The canonical URL of this notification.
     * 
     */
    private String selfLink;
    /**
     * @return The Cloud PubSub topic to which this subscription publishes. Formatted as: &#39;//pubsub.googleapis.com/projects/{project-identifier}/topics/{my-topic}&#39;
     * 
     */
    private String topic;

    private GetNotificationResult() {}
    /**
     * @return An optional list of additional attributes to attach to each Cloud PubSub message published for this notification subscription.
     * 
     */
    public Map<String,String> customAttributes() {
        return this.customAttributes;
    }
    /**
     * @return HTTP 1.1 Entity tag for this subscription notification.
     * 
     */
    public String etag() {
        return this.etag;
    }
    /**
     * @return If present, only send notifications about listed event types. If empty, sent notifications for all event types.
     * 
     */
    public List<String> eventTypes() {
        return this.eventTypes;
    }
    /**
     * @return The kind of item this is. For notifications, this is always storage#notification.
     * 
     */
    public String kind() {
        return this.kind;
    }
    /**
     * @return If present, only apply this notification configuration to object names that begin with this prefix.
     * 
     */
    public String objectNamePrefix() {
        return this.objectNamePrefix;
    }
    /**
     * @return The desired content of the Payload.
     * 
     */
    public String payloadFormat() {
        return this.payloadFormat;
    }
    /**
     * @return The canonical URL of this notification.
     * 
     */
    public String selfLink() {
        return this.selfLink;
    }
    /**
     * @return The Cloud PubSub topic to which this subscription publishes. Formatted as: &#39;//pubsub.googleapis.com/projects/{project-identifier}/topics/{my-topic}&#39;
     * 
     */
    public String topic() {
        return this.topic;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNotificationResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Map<String,String> customAttributes;
        private String etag;
        private List<String> eventTypes;
        private String kind;
        private String objectNamePrefix;
        private String payloadFormat;
        private String selfLink;
        private String topic;
        public Builder() {}
        public Builder(GetNotificationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customAttributes = defaults.customAttributes;
    	      this.etag = defaults.etag;
    	      this.eventTypes = defaults.eventTypes;
    	      this.kind = defaults.kind;
    	      this.objectNamePrefix = defaults.objectNamePrefix;
    	      this.payloadFormat = defaults.payloadFormat;
    	      this.selfLink = defaults.selfLink;
    	      this.topic = defaults.topic;
        }

        @CustomType.Setter
        public Builder customAttributes(Map<String,String> customAttributes) {
            this.customAttributes = Objects.requireNonNull(customAttributes);
            return this;
        }
        @CustomType.Setter
        public Builder etag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }
        @CustomType.Setter
        public Builder eventTypes(List<String> eventTypes) {
            this.eventTypes = Objects.requireNonNull(eventTypes);
            return this;
        }
        public Builder eventTypes(String... eventTypes) {
            return eventTypes(List.of(eventTypes));
        }
        @CustomType.Setter
        public Builder kind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }
        @CustomType.Setter
        public Builder objectNamePrefix(String objectNamePrefix) {
            this.objectNamePrefix = Objects.requireNonNull(objectNamePrefix);
            return this;
        }
        @CustomType.Setter
        public Builder payloadFormat(String payloadFormat) {
            this.payloadFormat = Objects.requireNonNull(payloadFormat);
            return this;
        }
        @CustomType.Setter
        public Builder selfLink(String selfLink) {
            this.selfLink = Objects.requireNonNull(selfLink);
            return this;
        }
        @CustomType.Setter
        public Builder topic(String topic) {
            this.topic = Objects.requireNonNull(topic);
            return this;
        }
        public GetNotificationResult build() {
            final var o = new GetNotificationResult();
            o.customAttributes = customAttributes;
            o.etag = etag;
            o.eventTypes = eventTypes;
            o.kind = kind;
            o.objectNamePrefix = objectNamePrefix;
            o.payloadFormat = payloadFormat;
            o.selfLink = selfLink;
            o.topic = topic;
            return o;
        }
    }
}
