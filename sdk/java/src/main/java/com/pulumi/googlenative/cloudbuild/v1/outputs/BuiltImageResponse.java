// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudbuild.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.cloudbuild.v1.outputs.TimeSpanResponse;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class BuiltImageResponse {
    /**
     * @return Docker Registry 2.0 digest.
     * 
     */
    private String digest;
    /**
     * @return Name used to push the container image to Google Container Registry, as presented to `docker push`.
     * 
     */
    private String name;
    /**
     * @return Stores timing information for pushing the specified image.
     * 
     */
    private TimeSpanResponse pushTiming;

    private BuiltImageResponse() {}
    /**
     * @return Docker Registry 2.0 digest.
     * 
     */
    public String digest() {
        return this.digest;
    }
    /**
     * @return Name used to push the container image to Google Container Registry, as presented to `docker push`.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Stores timing information for pushing the specified image.
     * 
     */
    public TimeSpanResponse pushTiming() {
        return this.pushTiming;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BuiltImageResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String digest;
        private String name;
        private TimeSpanResponse pushTiming;
        public Builder() {}
        public Builder(BuiltImageResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.digest = defaults.digest;
    	      this.name = defaults.name;
    	      this.pushTiming = defaults.pushTiming;
        }

        @CustomType.Setter
        public Builder digest(String digest) {
            this.digest = Objects.requireNonNull(digest);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder pushTiming(TimeSpanResponse pushTiming) {
            this.pushTiming = Objects.requireNonNull(pushTiming);
            return this;
        }
        public BuiltImageResponse build() {
            final var o = new BuiltImageResponse();
            o.digest = digest;
            o.name = name;
            o.pushTiming = pushTiming;
            return o;
        }
    }
}
