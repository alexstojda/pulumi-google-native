// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute.alpha.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.compute.alpha.outputs.ResourcePolicyDiskConsistencyGroupPolicyResponse;
import com.pulumi.googlenative.compute.alpha.outputs.ResourcePolicyGroupPlacementPolicyResponse;
import com.pulumi.googlenative.compute.alpha.outputs.ResourcePolicyInstanceSchedulePolicyResponse;
import com.pulumi.googlenative.compute.alpha.outputs.ResourcePolicyResourceStatusResponse;
import com.pulumi.googlenative.compute.alpha.outputs.ResourcePolicySnapshotSchedulePolicyResponse;
import com.pulumi.googlenative.compute.alpha.outputs.ResourcePolicyVmMaintenancePolicyResponse;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetResourcePolicyResult {
    /**
     * @return Creation timestamp in RFC3339 text format.
     * 
     */
    private String creationTimestamp;
    private String description;
    /**
     * @return Resource policy for disk consistency groups.
     * 
     */
    private ResourcePolicyDiskConsistencyGroupPolicyResponse diskConsistencyGroupPolicy;
    /**
     * @return Resource policy for instances for placement configuration.
     * 
     */
    private ResourcePolicyGroupPlacementPolicyResponse groupPlacementPolicy;
    /**
     * @return Resource policy for scheduling instance operations.
     * 
     */
    private ResourcePolicyInstanceSchedulePolicyResponse instanceSchedulePolicy;
    /**
     * @return Type of the resource. Always compute#resource_policies for resource policies.
     * 
     */
    private String kind;
    /**
     * @return The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     * 
     */
    private String name;
    private String region;
    /**
     * @return The system status of the resource policy.
     * 
     */
    private ResourcePolicyResourceStatusResponse resourceStatus;
    /**
     * @return Server-defined fully-qualified URL for this resource.
     * 
     */
    private String selfLink;
    /**
     * @return Server-defined URL for this resource with the resource id.
     * 
     */
    private String selfLinkWithId;
    /**
     * @return Resource policy for persistent disks for creating snapshots.
     * 
     */
    private ResourcePolicySnapshotSchedulePolicyResponse snapshotSchedulePolicy;
    /**
     * @return The status of resource policy creation.
     * 
     */
    private String status;
    /**
     * @return Resource policy applicable to VMs for infrastructure maintenance.
     * 
     */
    private ResourcePolicyVmMaintenancePolicyResponse vmMaintenancePolicy;

    private GetResourcePolicyResult() {}
    /**
     * @return Creation timestamp in RFC3339 text format.
     * 
     */
    public String creationTimestamp() {
        return this.creationTimestamp;
    }
    public String description() {
        return this.description;
    }
    /**
     * @return Resource policy for disk consistency groups.
     * 
     */
    public ResourcePolicyDiskConsistencyGroupPolicyResponse diskConsistencyGroupPolicy() {
        return this.diskConsistencyGroupPolicy;
    }
    /**
     * @return Resource policy for instances for placement configuration.
     * 
     */
    public ResourcePolicyGroupPlacementPolicyResponse groupPlacementPolicy() {
        return this.groupPlacementPolicy;
    }
    /**
     * @return Resource policy for scheduling instance operations.
     * 
     */
    public ResourcePolicyInstanceSchedulePolicyResponse instanceSchedulePolicy() {
        return this.instanceSchedulePolicy;
    }
    /**
     * @return Type of the resource. Always compute#resource_policies for resource policies.
     * 
     */
    public String kind() {
        return this.kind;
    }
    /**
     * @return The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     * 
     */
    public String name() {
        return this.name;
    }
    public String region() {
        return this.region;
    }
    /**
     * @return The system status of the resource policy.
     * 
     */
    public ResourcePolicyResourceStatusResponse resourceStatus() {
        return this.resourceStatus;
    }
    /**
     * @return Server-defined fully-qualified URL for this resource.
     * 
     */
    public String selfLink() {
        return this.selfLink;
    }
    /**
     * @return Server-defined URL for this resource with the resource id.
     * 
     */
    public String selfLinkWithId() {
        return this.selfLinkWithId;
    }
    /**
     * @return Resource policy for persistent disks for creating snapshots.
     * 
     */
    public ResourcePolicySnapshotSchedulePolicyResponse snapshotSchedulePolicy() {
        return this.snapshotSchedulePolicy;
    }
    /**
     * @return The status of resource policy creation.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return Resource policy applicable to VMs for infrastructure maintenance.
     * 
     */
    public ResourcePolicyVmMaintenancePolicyResponse vmMaintenancePolicy() {
        return this.vmMaintenancePolicy;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetResourcePolicyResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String creationTimestamp;
        private String description;
        private ResourcePolicyDiskConsistencyGroupPolicyResponse diskConsistencyGroupPolicy;
        private ResourcePolicyGroupPlacementPolicyResponse groupPlacementPolicy;
        private ResourcePolicyInstanceSchedulePolicyResponse instanceSchedulePolicy;
        private String kind;
        private String name;
        private String region;
        private ResourcePolicyResourceStatusResponse resourceStatus;
        private String selfLink;
        private String selfLinkWithId;
        private ResourcePolicySnapshotSchedulePolicyResponse snapshotSchedulePolicy;
        private String status;
        private ResourcePolicyVmMaintenancePolicyResponse vmMaintenancePolicy;
        public Builder() {}
        public Builder(GetResourcePolicyResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.creationTimestamp = defaults.creationTimestamp;
    	      this.description = defaults.description;
    	      this.diskConsistencyGroupPolicy = defaults.diskConsistencyGroupPolicy;
    	      this.groupPlacementPolicy = defaults.groupPlacementPolicy;
    	      this.instanceSchedulePolicy = defaults.instanceSchedulePolicy;
    	      this.kind = defaults.kind;
    	      this.name = defaults.name;
    	      this.region = defaults.region;
    	      this.resourceStatus = defaults.resourceStatus;
    	      this.selfLink = defaults.selfLink;
    	      this.selfLinkWithId = defaults.selfLinkWithId;
    	      this.snapshotSchedulePolicy = defaults.snapshotSchedulePolicy;
    	      this.status = defaults.status;
    	      this.vmMaintenancePolicy = defaults.vmMaintenancePolicy;
        }

        @CustomType.Setter
        public Builder creationTimestamp(String creationTimestamp) {
            this.creationTimestamp = Objects.requireNonNull(creationTimestamp);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder diskConsistencyGroupPolicy(ResourcePolicyDiskConsistencyGroupPolicyResponse diskConsistencyGroupPolicy) {
            this.diskConsistencyGroupPolicy = Objects.requireNonNull(diskConsistencyGroupPolicy);
            return this;
        }
        @CustomType.Setter
        public Builder groupPlacementPolicy(ResourcePolicyGroupPlacementPolicyResponse groupPlacementPolicy) {
            this.groupPlacementPolicy = Objects.requireNonNull(groupPlacementPolicy);
            return this;
        }
        @CustomType.Setter
        public Builder instanceSchedulePolicy(ResourcePolicyInstanceSchedulePolicyResponse instanceSchedulePolicy) {
            this.instanceSchedulePolicy = Objects.requireNonNull(instanceSchedulePolicy);
            return this;
        }
        @CustomType.Setter
        public Builder kind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            this.region = Objects.requireNonNull(region);
            return this;
        }
        @CustomType.Setter
        public Builder resourceStatus(ResourcePolicyResourceStatusResponse resourceStatus) {
            this.resourceStatus = Objects.requireNonNull(resourceStatus);
            return this;
        }
        @CustomType.Setter
        public Builder selfLink(String selfLink) {
            this.selfLink = Objects.requireNonNull(selfLink);
            return this;
        }
        @CustomType.Setter
        public Builder selfLinkWithId(String selfLinkWithId) {
            this.selfLinkWithId = Objects.requireNonNull(selfLinkWithId);
            return this;
        }
        @CustomType.Setter
        public Builder snapshotSchedulePolicy(ResourcePolicySnapshotSchedulePolicyResponse snapshotSchedulePolicy) {
            this.snapshotSchedulePolicy = Objects.requireNonNull(snapshotSchedulePolicy);
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        @CustomType.Setter
        public Builder vmMaintenancePolicy(ResourcePolicyVmMaintenancePolicyResponse vmMaintenancePolicy) {
            this.vmMaintenancePolicy = Objects.requireNonNull(vmMaintenancePolicy);
            return this;
        }
        public GetResourcePolicyResult build() {
            final var o = new GetResourcePolicyResult();
            o.creationTimestamp = creationTimestamp;
            o.description = description;
            o.diskConsistencyGroupPolicy = diskConsistencyGroupPolicy;
            o.groupPlacementPolicy = groupPlacementPolicy;
            o.instanceSchedulePolicy = instanceSchedulePolicy;
            o.kind = kind;
            o.name = name;
            o.region = region;
            o.resourceStatus = resourceStatus;
            o.selfLink = selfLink;
            o.selfLinkWithId = selfLinkWithId;
            o.snapshotSchedulePolicy = snapshotSchedulePolicy;
            o.status = status;
            o.vmMaintenancePolicy = vmMaintenancePolicy;
            return o;
        }
    }
}
