// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dataproc.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class SparkSqlBatchResponse {
    /**
     * @return Optional. HCFS URIs of jar files to be added to the Spark CLASSPATH.
     * 
     */
    private List<String> jarFileUris;
    /**
     * @return The HCFS URI of the script that contains Spark SQL queries to execute.
     * 
     */
    private String queryFileUri;
    /**
     * @return Optional. Mapping of query variable names to values (equivalent to the Spark SQL command: SET name=&#34;value&#34;;).
     * 
     */
    private Map<String,String> queryVariables;

    private SparkSqlBatchResponse() {}
    /**
     * @return Optional. HCFS URIs of jar files to be added to the Spark CLASSPATH.
     * 
     */
    public List<String> jarFileUris() {
        return this.jarFileUris;
    }
    /**
     * @return The HCFS URI of the script that contains Spark SQL queries to execute.
     * 
     */
    public String queryFileUri() {
        return this.queryFileUri;
    }
    /**
     * @return Optional. Mapping of query variable names to values (equivalent to the Spark SQL command: SET name=&#34;value&#34;;).
     * 
     */
    public Map<String,String> queryVariables() {
        return this.queryVariables;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SparkSqlBatchResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> jarFileUris;
        private String queryFileUri;
        private Map<String,String> queryVariables;
        public Builder() {}
        public Builder(SparkSqlBatchResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.jarFileUris = defaults.jarFileUris;
    	      this.queryFileUri = defaults.queryFileUri;
    	      this.queryVariables = defaults.queryVariables;
        }

        @CustomType.Setter
        public Builder jarFileUris(List<String> jarFileUris) {
            this.jarFileUris = Objects.requireNonNull(jarFileUris);
            return this;
        }
        public Builder jarFileUris(String... jarFileUris) {
            return jarFileUris(List.of(jarFileUris));
        }
        @CustomType.Setter
        public Builder queryFileUri(String queryFileUri) {
            this.queryFileUri = Objects.requireNonNull(queryFileUri);
            return this;
        }
        @CustomType.Setter
        public Builder queryVariables(Map<String,String> queryVariables) {
            this.queryVariables = Objects.requireNonNull(queryVariables);
            return this;
        }
        public SparkSqlBatchResponse build() {
            final var o = new SparkSqlBatchResponse();
            o.jarFileUris = jarFileUris;
            o.queryFileUri = queryFileUri;
            o.queryVariables = queryVariables;
            return o;
        }
    }
}
