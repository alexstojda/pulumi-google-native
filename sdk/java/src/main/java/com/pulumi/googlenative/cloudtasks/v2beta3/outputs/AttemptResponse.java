// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudtasks.v2beta3.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.cloudtasks.v2beta3.outputs.StatusResponse;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class AttemptResponse {
    /**
     * @return The time that this attempt was dispatched. `dispatch_time` will be truncated to the nearest microsecond.
     * 
     */
    private String dispatchTime;
    /**
     * @return The response from the worker for this attempt. If `response_time` is unset, then the task has not been attempted or is currently running and the `response_status` field is meaningless.
     * 
     */
    private StatusResponse responseStatus;
    /**
     * @return The time that this attempt response was received. `response_time` will be truncated to the nearest microsecond.
     * 
     */
    private String responseTime;
    /**
     * @return The time that this attempt was scheduled. `schedule_time` will be truncated to the nearest microsecond.
     * 
     */
    private String scheduleTime;

    private AttemptResponse() {}
    /**
     * @return The time that this attempt was dispatched. `dispatch_time` will be truncated to the nearest microsecond.
     * 
     */
    public String dispatchTime() {
        return this.dispatchTime;
    }
    /**
     * @return The response from the worker for this attempt. If `response_time` is unset, then the task has not been attempted or is currently running and the `response_status` field is meaningless.
     * 
     */
    public StatusResponse responseStatus() {
        return this.responseStatus;
    }
    /**
     * @return The time that this attempt response was received. `response_time` will be truncated to the nearest microsecond.
     * 
     */
    public String responseTime() {
        return this.responseTime;
    }
    /**
     * @return The time that this attempt was scheduled. `schedule_time` will be truncated to the nearest microsecond.
     * 
     */
    public String scheduleTime() {
        return this.scheduleTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AttemptResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String dispatchTime;
        private StatusResponse responseStatus;
        private String responseTime;
        private String scheduleTime;
        public Builder() {}
        public Builder(AttemptResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dispatchTime = defaults.dispatchTime;
    	      this.responseStatus = defaults.responseStatus;
    	      this.responseTime = defaults.responseTime;
    	      this.scheduleTime = defaults.scheduleTime;
        }

        @CustomType.Setter
        public Builder dispatchTime(String dispatchTime) {
            this.dispatchTime = Objects.requireNonNull(dispatchTime);
            return this;
        }
        @CustomType.Setter
        public Builder responseStatus(StatusResponse responseStatus) {
            this.responseStatus = Objects.requireNonNull(responseStatus);
            return this;
        }
        @CustomType.Setter
        public Builder responseTime(String responseTime) {
            this.responseTime = Objects.requireNonNull(responseTime);
            return this;
        }
        @CustomType.Setter
        public Builder scheduleTime(String scheduleTime) {
            this.scheduleTime = Objects.requireNonNull(scheduleTime);
            return this;
        }
        public AttemptResponse build() {
            final var o = new AttemptResponse();
            o.dispatchTime = dispatchTime;
            o.responseStatus = responseStatus;
            o.responseTime = responseTime;
            o.scheduleTime = scheduleTime;
            return o;
        }
    }
}
