// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dialogflow.v3beta1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.dialogflow.v3beta1.outputs.GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceResponse;
import com.pulumi.googlenative.dialogflow.v3beta1.outputs.GoogleCloudDialogflowCxV3beta1WebhookServiceDirectoryConfigResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GoogleCloudDialogflowCxV3beta1WebhookResponse {
    /**
     * @return Indicates whether the webhook is disabled.
     * 
     */
    private Boolean disabled;
    /**
     * @return The human-readable name of the webhook, unique within the agent.
     * 
     */
    private String displayName;
    /**
     * @return Configuration for a generic web service.
     * 
     */
    private GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceResponse genericWebService;
    /**
     * @return The unique identifier of the webhook. Required for the Webhooks.UpdateWebhook method. Webhooks.CreateWebhook populates the name automatically. Format: `projects//locations//agents//webhooks/`.
     * 
     */
    private String name;
    /**
     * @return Configuration for a [Service Directory](https://cloud.google.com/service-directory) service.
     * 
     */
    private GoogleCloudDialogflowCxV3beta1WebhookServiceDirectoryConfigResponse serviceDirectory;
    /**
     * @return Webhook execution timeout. Execution is considered failed if Dialogflow doesn&#39;t receive a response from webhook at the end of the timeout period. Defaults to 5 seconds, maximum allowed timeout is 30 seconds.
     * 
     */
    private String timeout;

    private GoogleCloudDialogflowCxV3beta1WebhookResponse() {}
    /**
     * @return Indicates whether the webhook is disabled.
     * 
     */
    public Boolean disabled() {
        return this.disabled;
    }
    /**
     * @return The human-readable name of the webhook, unique within the agent.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Configuration for a generic web service.
     * 
     */
    public GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceResponse genericWebService() {
        return this.genericWebService;
    }
    /**
     * @return The unique identifier of the webhook. Required for the Webhooks.UpdateWebhook method. Webhooks.CreateWebhook populates the name automatically. Format: `projects//locations//agents//webhooks/`.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Configuration for a [Service Directory](https://cloud.google.com/service-directory) service.
     * 
     */
    public GoogleCloudDialogflowCxV3beta1WebhookServiceDirectoryConfigResponse serviceDirectory() {
        return this.serviceDirectory;
    }
    /**
     * @return Webhook execution timeout. Execution is considered failed if Dialogflow doesn&#39;t receive a response from webhook at the end of the timeout period. Defaults to 5 seconds, maximum allowed timeout is 30 seconds.
     * 
     */
    public String timeout() {
        return this.timeout;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudDialogflowCxV3beta1WebhookResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean disabled;
        private String displayName;
        private GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceResponse genericWebService;
        private String name;
        private GoogleCloudDialogflowCxV3beta1WebhookServiceDirectoryConfigResponse serviceDirectory;
        private String timeout;
        public Builder() {}
        public Builder(GoogleCloudDialogflowCxV3beta1WebhookResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.disabled = defaults.disabled;
    	      this.displayName = defaults.displayName;
    	      this.genericWebService = defaults.genericWebService;
    	      this.name = defaults.name;
    	      this.serviceDirectory = defaults.serviceDirectory;
    	      this.timeout = defaults.timeout;
        }

        @CustomType.Setter
        public Builder disabled(Boolean disabled) {
            this.disabled = Objects.requireNonNull(disabled);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder genericWebService(GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceResponse genericWebService) {
            this.genericWebService = Objects.requireNonNull(genericWebService);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder serviceDirectory(GoogleCloudDialogflowCxV3beta1WebhookServiceDirectoryConfigResponse serviceDirectory) {
            this.serviceDirectory = Objects.requireNonNull(serviceDirectory);
            return this;
        }
        @CustomType.Setter
        public Builder timeout(String timeout) {
            this.timeout = Objects.requireNonNull(timeout);
            return this;
        }
        public GoogleCloudDialogflowCxV3beta1WebhookResponse build() {
            final var o = new GoogleCloudDialogflowCxV3beta1WebhookResponse();
            o.disabled = disabled;
            o.displayName = displayName;
            o.genericWebService = genericWebService;
            o.name = name;
            o.serviceDirectory = serviceDirectory;
            o.timeout = timeout;
            return o;
        }
    }
}
