// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.bigtableadmin.v2.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class AutoscalingTargetsResponse {
    /**
     * @return The cpu utilization that the Autoscaler should be trying to achieve. This number is on a scale from 0 (no utilization) to 100 (total utilization), and is limited between 10 and 80, otherwise it will return INVALID_ARGUMENT error.
     * 
     */
    private Integer cpuUtilizationPercent;
    /**
     * @return The storage utilization that the Autoscaler should be trying to achieve. This number is limited between 2560 (2.5TiB) and 5120 (5TiB) for a SSD cluster and between 8192 (8TiB) and 16384 (16TiB) for an HDD cluster, otherwise it will return INVALID_ARGUMENT error. If this value is set to 0, it will be treated as if it were set to the default value: 2560 for SSD, 8192 for HDD.
     * 
     */
    private Integer storageUtilizationGibPerNode;

    private AutoscalingTargetsResponse() {}
    /**
     * @return The cpu utilization that the Autoscaler should be trying to achieve. This number is on a scale from 0 (no utilization) to 100 (total utilization), and is limited between 10 and 80, otherwise it will return INVALID_ARGUMENT error.
     * 
     */
    public Integer cpuUtilizationPercent() {
        return this.cpuUtilizationPercent;
    }
    /**
     * @return The storage utilization that the Autoscaler should be trying to achieve. This number is limited between 2560 (2.5TiB) and 5120 (5TiB) for a SSD cluster and between 8192 (8TiB) and 16384 (16TiB) for an HDD cluster, otherwise it will return INVALID_ARGUMENT error. If this value is set to 0, it will be treated as if it were set to the default value: 2560 for SSD, 8192 for HDD.
     * 
     */
    public Integer storageUtilizationGibPerNode() {
        return this.storageUtilizationGibPerNode;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AutoscalingTargetsResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer cpuUtilizationPercent;
        private Integer storageUtilizationGibPerNode;
        public Builder() {}
        public Builder(AutoscalingTargetsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cpuUtilizationPercent = defaults.cpuUtilizationPercent;
    	      this.storageUtilizationGibPerNode = defaults.storageUtilizationGibPerNode;
        }

        @CustomType.Setter
        public Builder cpuUtilizationPercent(Integer cpuUtilizationPercent) {
            this.cpuUtilizationPercent = Objects.requireNonNull(cpuUtilizationPercent);
            return this;
        }
        @CustomType.Setter
        public Builder storageUtilizationGibPerNode(Integer storageUtilizationGibPerNode) {
            this.storageUtilizationGibPerNode = Objects.requireNonNull(storageUtilizationGibPerNode);
            return this;
        }
        public AutoscalingTargetsResponse build() {
            final var o = new AutoscalingTargetsResponse();
            o.cpuUtilizationPercent = cpuUtilizationPercent;
            o.storageUtilizationGibPerNode = storageUtilizationGibPerNode;
            return o;
        }
    }
}
