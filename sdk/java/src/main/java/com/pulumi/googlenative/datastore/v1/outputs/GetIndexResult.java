// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.datastore.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.datastore.v1.outputs.GoogleDatastoreAdminV1IndexedPropertyResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetIndexResult {
    /**
     * @return The index&#39;s ancestor mode. Must not be ANCESTOR_MODE_UNSPECIFIED.
     * 
     */
    private String ancestor;
    /**
     * @return The resource ID of the index.
     * 
     */
    private String indexId;
    /**
     * @return The entity kind to which this index applies.
     * 
     */
    private String kind;
    /**
     * @return Project ID.
     * 
     */
    private String project;
    /**
     * @return An ordered sequence of property names and their index attributes.
     * 
     */
    private List<GoogleDatastoreAdminV1IndexedPropertyResponse> properties;
    /**
     * @return The state of the index.
     * 
     */
    private String state;

    private GetIndexResult() {}
    /**
     * @return The index&#39;s ancestor mode. Must not be ANCESTOR_MODE_UNSPECIFIED.
     * 
     */
    public String ancestor() {
        return this.ancestor;
    }
    /**
     * @return The resource ID of the index.
     * 
     */
    public String indexId() {
        return this.indexId;
    }
    /**
     * @return The entity kind to which this index applies.
     * 
     */
    public String kind() {
        return this.kind;
    }
    /**
     * @return Project ID.
     * 
     */
    public String project() {
        return this.project;
    }
    /**
     * @return An ordered sequence of property names and their index attributes.
     * 
     */
    public List<GoogleDatastoreAdminV1IndexedPropertyResponse> properties() {
        return this.properties;
    }
    /**
     * @return The state of the index.
     * 
     */
    public String state() {
        return this.state;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIndexResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String ancestor;
        private String indexId;
        private String kind;
        private String project;
        private List<GoogleDatastoreAdminV1IndexedPropertyResponse> properties;
        private String state;
        public Builder() {}
        public Builder(GetIndexResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ancestor = defaults.ancestor;
    	      this.indexId = defaults.indexId;
    	      this.kind = defaults.kind;
    	      this.project = defaults.project;
    	      this.properties = defaults.properties;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder ancestor(String ancestor) {
            this.ancestor = Objects.requireNonNull(ancestor);
            return this;
        }
        @CustomType.Setter
        public Builder indexId(String indexId) {
            this.indexId = Objects.requireNonNull(indexId);
            return this;
        }
        @CustomType.Setter
        public Builder kind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }
        @CustomType.Setter
        public Builder project(String project) {
            this.project = Objects.requireNonNull(project);
            return this;
        }
        @CustomType.Setter
        public Builder properties(List<GoogleDatastoreAdminV1IndexedPropertyResponse> properties) {
            this.properties = Objects.requireNonNull(properties);
            return this;
        }
        public Builder properties(GoogleDatastoreAdminV1IndexedPropertyResponse... properties) {
            return properties(List.of(properties));
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public GetIndexResult build() {
            final var o = new GetIndexResult();
            o.ancestor = ancestor;
            o.indexId = indexId;
            o.kind = kind;
            o.project = project;
            o.properties = properties;
            o.state = state;
            return o;
        }
    }
}
