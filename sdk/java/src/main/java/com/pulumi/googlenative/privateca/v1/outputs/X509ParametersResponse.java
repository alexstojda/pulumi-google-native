// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.privateca.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.privateca.v1.outputs.CaOptionsResponse;
import com.pulumi.googlenative.privateca.v1.outputs.KeyUsageResponse;
import com.pulumi.googlenative.privateca.v1.outputs.ObjectIdResponse;
import com.pulumi.googlenative.privateca.v1.outputs.X509ExtensionResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class X509ParametersResponse {
    /**
     * @return Optional. Describes custom X.509 extensions.
     * 
     */
    private List<X509ExtensionResponse> additionalExtensions;
    /**
     * @return Optional. Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the &#34;Authority Information Access&#34; extension in the certificate.
     * 
     */
    private List<String> aiaOcspServers;
    /**
     * @return Optional. Describes options in this X509Parameters that are relevant in a CA certificate.
     * 
     */
    private CaOptionsResponse caOptions;
    /**
     * @return Optional. Indicates the intended use for keys that correspond to a certificate.
     * 
     */
    private KeyUsageResponse keyUsage;
    /**
     * @return Optional. Describes the X.509 certificate policy object identifiers, per https://tools.ietf.org/html/rfc5280#section-4.2.1.4.
     * 
     */
    private List<ObjectIdResponse> policyIds;

    private X509ParametersResponse() {}
    /**
     * @return Optional. Describes custom X.509 extensions.
     * 
     */
    public List<X509ExtensionResponse> additionalExtensions() {
        return this.additionalExtensions;
    }
    /**
     * @return Optional. Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the &#34;Authority Information Access&#34; extension in the certificate.
     * 
     */
    public List<String> aiaOcspServers() {
        return this.aiaOcspServers;
    }
    /**
     * @return Optional. Describes options in this X509Parameters that are relevant in a CA certificate.
     * 
     */
    public CaOptionsResponse caOptions() {
        return this.caOptions;
    }
    /**
     * @return Optional. Indicates the intended use for keys that correspond to a certificate.
     * 
     */
    public KeyUsageResponse keyUsage() {
        return this.keyUsage;
    }
    /**
     * @return Optional. Describes the X.509 certificate policy object identifiers, per https://tools.ietf.org/html/rfc5280#section-4.2.1.4.
     * 
     */
    public List<ObjectIdResponse> policyIds() {
        return this.policyIds;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(X509ParametersResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<X509ExtensionResponse> additionalExtensions;
        private List<String> aiaOcspServers;
        private CaOptionsResponse caOptions;
        private KeyUsageResponse keyUsage;
        private List<ObjectIdResponse> policyIds;
        public Builder() {}
        public Builder(X509ParametersResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalExtensions = defaults.additionalExtensions;
    	      this.aiaOcspServers = defaults.aiaOcspServers;
    	      this.caOptions = defaults.caOptions;
    	      this.keyUsage = defaults.keyUsage;
    	      this.policyIds = defaults.policyIds;
        }

        @CustomType.Setter
        public Builder additionalExtensions(List<X509ExtensionResponse> additionalExtensions) {
            this.additionalExtensions = Objects.requireNonNull(additionalExtensions);
            return this;
        }
        public Builder additionalExtensions(X509ExtensionResponse... additionalExtensions) {
            return additionalExtensions(List.of(additionalExtensions));
        }
        @CustomType.Setter
        public Builder aiaOcspServers(List<String> aiaOcspServers) {
            this.aiaOcspServers = Objects.requireNonNull(aiaOcspServers);
            return this;
        }
        public Builder aiaOcspServers(String... aiaOcspServers) {
            return aiaOcspServers(List.of(aiaOcspServers));
        }
        @CustomType.Setter
        public Builder caOptions(CaOptionsResponse caOptions) {
            this.caOptions = Objects.requireNonNull(caOptions);
            return this;
        }
        @CustomType.Setter
        public Builder keyUsage(KeyUsageResponse keyUsage) {
            this.keyUsage = Objects.requireNonNull(keyUsage);
            return this;
        }
        @CustomType.Setter
        public Builder policyIds(List<ObjectIdResponse> policyIds) {
            this.policyIds = Objects.requireNonNull(policyIds);
            return this;
        }
        public Builder policyIds(ObjectIdResponse... policyIds) {
            return policyIds(List.of(policyIds));
        }
        public X509ParametersResponse build() {
            final var o = new X509ParametersResponse();
            o.additionalExtensions = additionalExtensions;
            o.aiaOcspServers = aiaOcspServers;
            o.caOptions = caOptions;
            o.keyUsage = keyUsage;
            o.policyIds = policyIds;
            return o;
        }
    }
}
