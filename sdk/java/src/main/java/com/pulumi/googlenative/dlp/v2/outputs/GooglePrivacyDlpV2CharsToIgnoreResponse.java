// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dlp.v2.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GooglePrivacyDlpV2CharsToIgnoreResponse {
    /**
     * @return Characters to not transform when masking.
     * 
     */
    private String charactersToSkip;
    /**
     * @return Common characters to not transform when masking. Useful to avoid removing punctuation.
     * 
     */
    private String commonCharactersToIgnore;

    private GooglePrivacyDlpV2CharsToIgnoreResponse() {}
    /**
     * @return Characters to not transform when masking.
     * 
     */
    public String charactersToSkip() {
        return this.charactersToSkip;
    }
    /**
     * @return Common characters to not transform when masking. Useful to avoid removing punctuation.
     * 
     */
    public String commonCharactersToIgnore() {
        return this.commonCharactersToIgnore;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GooglePrivacyDlpV2CharsToIgnoreResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String charactersToSkip;
        private String commonCharactersToIgnore;
        public Builder() {}
        public Builder(GooglePrivacyDlpV2CharsToIgnoreResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.charactersToSkip = defaults.charactersToSkip;
    	      this.commonCharactersToIgnore = defaults.commonCharactersToIgnore;
        }

        @CustomType.Setter
        public Builder charactersToSkip(String charactersToSkip) {
            this.charactersToSkip = Objects.requireNonNull(charactersToSkip);
            return this;
        }
        @CustomType.Setter
        public Builder commonCharactersToIgnore(String commonCharactersToIgnore) {
            this.commonCharactersToIgnore = Objects.requireNonNull(commonCharactersToIgnore);
            return this;
        }
        public GooglePrivacyDlpV2CharsToIgnoreResponse build() {
            final var o = new GooglePrivacyDlpV2CharsToIgnoreResponse();
            o.charactersToSkip = charactersToSkip;
            o.commonCharactersToIgnore = commonCharactersToIgnore;
            return o;
        }
    }
}
