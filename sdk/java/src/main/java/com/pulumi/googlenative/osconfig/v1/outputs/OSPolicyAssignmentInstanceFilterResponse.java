// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.osconfig.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.osconfig.v1.outputs.OSPolicyAssignmentInstanceFilterInventoryResponse;
import com.pulumi.googlenative.osconfig.v1.outputs.OSPolicyAssignmentLabelSetResponse;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;

@CustomType
public final class OSPolicyAssignmentInstanceFilterResponse {
    /**
     * @return Target all VMs in the project. If true, no other criteria is permitted.
     * 
     */
    private Boolean all;
    /**
     * @return List of label sets used for VM exclusion. If the list has more than one label set, the VM is excluded if any of the label sets are applicable for the VM.
     * 
     */
    private List<OSPolicyAssignmentLabelSetResponse> exclusionLabels;
    /**
     * @return List of label sets used for VM inclusion. If the list has more than one `LabelSet`, the VM is included if any of the label sets are applicable for the VM.
     * 
     */
    private List<OSPolicyAssignmentLabelSetResponse> inclusionLabels;
    /**
     * @return List of inventories to select VMs. A VM is selected if its inventory data matches at least one of the following inventories.
     * 
     */
    private List<OSPolicyAssignmentInstanceFilterInventoryResponse> inventories;

    private OSPolicyAssignmentInstanceFilterResponse() {}
    /**
     * @return Target all VMs in the project. If true, no other criteria is permitted.
     * 
     */
    public Boolean all() {
        return this.all;
    }
    /**
     * @return List of label sets used for VM exclusion. If the list has more than one label set, the VM is excluded if any of the label sets are applicable for the VM.
     * 
     */
    public List<OSPolicyAssignmentLabelSetResponse> exclusionLabels() {
        return this.exclusionLabels;
    }
    /**
     * @return List of label sets used for VM inclusion. If the list has more than one `LabelSet`, the VM is included if any of the label sets are applicable for the VM.
     * 
     */
    public List<OSPolicyAssignmentLabelSetResponse> inclusionLabels() {
        return this.inclusionLabels;
    }
    /**
     * @return List of inventories to select VMs. A VM is selected if its inventory data matches at least one of the following inventories.
     * 
     */
    public List<OSPolicyAssignmentInstanceFilterInventoryResponse> inventories() {
        return this.inventories;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OSPolicyAssignmentInstanceFilterResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean all;
        private List<OSPolicyAssignmentLabelSetResponse> exclusionLabels;
        private List<OSPolicyAssignmentLabelSetResponse> inclusionLabels;
        private List<OSPolicyAssignmentInstanceFilterInventoryResponse> inventories;
        public Builder() {}
        public Builder(OSPolicyAssignmentInstanceFilterResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.all = defaults.all;
    	      this.exclusionLabels = defaults.exclusionLabels;
    	      this.inclusionLabels = defaults.inclusionLabels;
    	      this.inventories = defaults.inventories;
        }

        @CustomType.Setter
        public Builder all(Boolean all) {
            this.all = Objects.requireNonNull(all);
            return this;
        }
        @CustomType.Setter
        public Builder exclusionLabels(List<OSPolicyAssignmentLabelSetResponse> exclusionLabels) {
            this.exclusionLabels = Objects.requireNonNull(exclusionLabels);
            return this;
        }
        public Builder exclusionLabels(OSPolicyAssignmentLabelSetResponse... exclusionLabels) {
            return exclusionLabels(List.of(exclusionLabels));
        }
        @CustomType.Setter
        public Builder inclusionLabels(List<OSPolicyAssignmentLabelSetResponse> inclusionLabels) {
            this.inclusionLabels = Objects.requireNonNull(inclusionLabels);
            return this;
        }
        public Builder inclusionLabels(OSPolicyAssignmentLabelSetResponse... inclusionLabels) {
            return inclusionLabels(List.of(inclusionLabels));
        }
        @CustomType.Setter
        public Builder inventories(List<OSPolicyAssignmentInstanceFilterInventoryResponse> inventories) {
            this.inventories = Objects.requireNonNull(inventories);
            return this;
        }
        public Builder inventories(OSPolicyAssignmentInstanceFilterInventoryResponse... inventories) {
            return inventories(List.of(inventories));
        }
        public OSPolicyAssignmentInstanceFilterResponse build() {
            final var o = new OSPolicyAssignmentInstanceFilterResponse();
            o.all = all;
            o.exclusionLabels = exclusionLabels;
            o.inclusionLabels = inclusionLabels;
            o.inventories = inventories;
            return o;
        }
    }
}
