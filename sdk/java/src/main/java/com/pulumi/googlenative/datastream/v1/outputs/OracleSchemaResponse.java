// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.datastream.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.datastream.v1.outputs.OracleTableResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class OracleSchemaResponse {
    /**
     * @return Tables in the schema.
     * 
     */
    private List<OracleTableResponse> oracleTables;
    /**
     * @return Schema name.
     * 
     */
    private String schema;

    private OracleSchemaResponse() {}
    /**
     * @return Tables in the schema.
     * 
     */
    public List<OracleTableResponse> oracleTables() {
        return this.oracleTables;
    }
    /**
     * @return Schema name.
     * 
     */
    public String schema() {
        return this.schema;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OracleSchemaResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<OracleTableResponse> oracleTables;
        private String schema;
        public Builder() {}
        public Builder(OracleSchemaResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.oracleTables = defaults.oracleTables;
    	      this.schema = defaults.schema;
        }

        @CustomType.Setter
        public Builder oracleTables(List<OracleTableResponse> oracleTables) {
            this.oracleTables = Objects.requireNonNull(oracleTables);
            return this;
        }
        public Builder oracleTables(OracleTableResponse... oracleTables) {
            return oracleTables(List.of(oracleTables));
        }
        @CustomType.Setter
        public Builder schema(String schema) {
            this.schema = Objects.requireNonNull(schema);
            return this;
        }
        public OracleSchemaResponse build() {
            final var o = new OracleSchemaResponse();
            o.oracleTables = oracleTables;
            o.schema = schema;
            return o;
        }
    }
}
