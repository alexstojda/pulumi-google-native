// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudchannel.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.cloudchannel.v1.outputs.GoogleCloudChannelV1CloudIdentityInfoResponse;
import com.pulumi.googlenative.cloudchannel.v1.outputs.GoogleCloudChannelV1ContactInfoResponse;
import com.pulumi.googlenative.cloudchannel.v1.outputs.GoogleTypePostalAddressResponse;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetCustomerResult {
    /**
     * @return Secondary contact email. You need to provide an alternate email to create different domains if a primary contact email already exists. Users will receive a notification with credentials when you create an admin.google.com account. Secondary emails are also recovery email addresses. Alternate emails are optional when you create Team customers.
     * 
     */
    private String alternateEmail;
    /**
     * @return Cloud Identity ID of the customer&#39;s channel partner. Populated only if a channel partner exists for this customer.
     * 
     */
    private String channelPartnerId;
    /**
     * @return The customer&#39;s Cloud Identity ID if the customer has a Cloud Identity resource.
     * 
     */
    private String cloudIdentityId;
    /**
     * @return Cloud Identity information for the customer. Populated only if a Cloud Identity account exists for this customer.
     * 
     */
    private GoogleCloudChannelV1CloudIdentityInfoResponse cloudIdentityInfo;
    /**
     * @return Time when the customer was created.
     * 
     */
    private String createTime;
    /**
     * @return The customer&#39;s primary domain. Must match the primary contact email&#39;s domain.
     * 
     */
    private String domain;
    /**
     * @return Optional. The BCP-47 language code, such as &#34;en-US&#34; or &#34;sr-Latn&#34;. For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
     * 
     */
    private String languageCode;
    /**
     * @return Resource name of the customer. Format: accounts/{account_id}/customers/{customer_id}
     * 
     */
    private String name;
    /**
     * @return Name of the organization that the customer entity represents.
     * 
     */
    private String orgDisplayName;
    /**
     * @return The organization address for the customer. To enforce US laws and embargoes, we require a region and zip code. You must provide valid addresses for every customer. To set the customer&#39;s language, use the Customer-level language code.
     * 
     */
    private GoogleTypePostalAddressResponse orgPostalAddress;
    /**
     * @return Primary contact info.
     * 
     */
    private GoogleCloudChannelV1ContactInfoResponse primaryContactInfo;
    /**
     * @return Time when the customer was updated.
     * 
     */
    private String updateTime;

    private GetCustomerResult() {}
    /**
     * @return Secondary contact email. You need to provide an alternate email to create different domains if a primary contact email already exists. Users will receive a notification with credentials when you create an admin.google.com account. Secondary emails are also recovery email addresses. Alternate emails are optional when you create Team customers.
     * 
     */
    public String alternateEmail() {
        return this.alternateEmail;
    }
    /**
     * @return Cloud Identity ID of the customer&#39;s channel partner. Populated only if a channel partner exists for this customer.
     * 
     */
    public String channelPartnerId() {
        return this.channelPartnerId;
    }
    /**
     * @return The customer&#39;s Cloud Identity ID if the customer has a Cloud Identity resource.
     * 
     */
    public String cloudIdentityId() {
        return this.cloudIdentityId;
    }
    /**
     * @return Cloud Identity information for the customer. Populated only if a Cloud Identity account exists for this customer.
     * 
     */
    public GoogleCloudChannelV1CloudIdentityInfoResponse cloudIdentityInfo() {
        return this.cloudIdentityInfo;
    }
    /**
     * @return Time when the customer was created.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return The customer&#39;s primary domain. Must match the primary contact email&#39;s domain.
     * 
     */
    public String domain() {
        return this.domain;
    }
    /**
     * @return Optional. The BCP-47 language code, such as &#34;en-US&#34; or &#34;sr-Latn&#34;. For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
     * 
     */
    public String languageCode() {
        return this.languageCode;
    }
    /**
     * @return Resource name of the customer. Format: accounts/{account_id}/customers/{customer_id}
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Name of the organization that the customer entity represents.
     * 
     */
    public String orgDisplayName() {
        return this.orgDisplayName;
    }
    /**
     * @return The organization address for the customer. To enforce US laws and embargoes, we require a region and zip code. You must provide valid addresses for every customer. To set the customer&#39;s language, use the Customer-level language code.
     * 
     */
    public GoogleTypePostalAddressResponse orgPostalAddress() {
        return this.orgPostalAddress;
    }
    /**
     * @return Primary contact info.
     * 
     */
    public GoogleCloudChannelV1ContactInfoResponse primaryContactInfo() {
        return this.primaryContactInfo;
    }
    /**
     * @return Time when the customer was updated.
     * 
     */
    public String updateTime() {
        return this.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCustomerResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String alternateEmail;
        private String channelPartnerId;
        private String cloudIdentityId;
        private GoogleCloudChannelV1CloudIdentityInfoResponse cloudIdentityInfo;
        private String createTime;
        private String domain;
        private String languageCode;
        private String name;
        private String orgDisplayName;
        private GoogleTypePostalAddressResponse orgPostalAddress;
        private GoogleCloudChannelV1ContactInfoResponse primaryContactInfo;
        private String updateTime;
        public Builder() {}
        public Builder(GetCustomerResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.alternateEmail = defaults.alternateEmail;
    	      this.channelPartnerId = defaults.channelPartnerId;
    	      this.cloudIdentityId = defaults.cloudIdentityId;
    	      this.cloudIdentityInfo = defaults.cloudIdentityInfo;
    	      this.createTime = defaults.createTime;
    	      this.domain = defaults.domain;
    	      this.languageCode = defaults.languageCode;
    	      this.name = defaults.name;
    	      this.orgDisplayName = defaults.orgDisplayName;
    	      this.orgPostalAddress = defaults.orgPostalAddress;
    	      this.primaryContactInfo = defaults.primaryContactInfo;
    	      this.updateTime = defaults.updateTime;
        }

        @CustomType.Setter
        public Builder alternateEmail(String alternateEmail) {
            this.alternateEmail = Objects.requireNonNull(alternateEmail);
            return this;
        }
        @CustomType.Setter
        public Builder channelPartnerId(String channelPartnerId) {
            this.channelPartnerId = Objects.requireNonNull(channelPartnerId);
            return this;
        }
        @CustomType.Setter
        public Builder cloudIdentityId(String cloudIdentityId) {
            this.cloudIdentityId = Objects.requireNonNull(cloudIdentityId);
            return this;
        }
        @CustomType.Setter
        public Builder cloudIdentityInfo(GoogleCloudChannelV1CloudIdentityInfoResponse cloudIdentityInfo) {
            this.cloudIdentityInfo = Objects.requireNonNull(cloudIdentityInfo);
            return this;
        }
        @CustomType.Setter
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        @CustomType.Setter
        public Builder domain(String domain) {
            this.domain = Objects.requireNonNull(domain);
            return this;
        }
        @CustomType.Setter
        public Builder languageCode(String languageCode) {
            this.languageCode = Objects.requireNonNull(languageCode);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder orgDisplayName(String orgDisplayName) {
            this.orgDisplayName = Objects.requireNonNull(orgDisplayName);
            return this;
        }
        @CustomType.Setter
        public Builder orgPostalAddress(GoogleTypePostalAddressResponse orgPostalAddress) {
            this.orgPostalAddress = Objects.requireNonNull(orgPostalAddress);
            return this;
        }
        @CustomType.Setter
        public Builder primaryContactInfo(GoogleCloudChannelV1ContactInfoResponse primaryContactInfo) {
            this.primaryContactInfo = Objects.requireNonNull(primaryContactInfo);
            return this;
        }
        @CustomType.Setter
        public Builder updateTime(String updateTime) {
            this.updateTime = Objects.requireNonNull(updateTime);
            return this;
        }
        public GetCustomerResult build() {
            final var o = new GetCustomerResult();
            o.alternateEmail = alternateEmail;
            o.channelPartnerId = channelPartnerId;
            o.cloudIdentityId = cloudIdentityId;
            o.cloudIdentityInfo = cloudIdentityInfo;
            o.createTime = createTime;
            o.domain = domain;
            o.languageCode = languageCode;
            o.name = name;
            o.orgDisplayName = orgDisplayName;
            o.orgPostalAddress = orgPostalAddress;
            o.primaryContactInfo = primaryContactInfo;
            o.updateTime = updateTime;
            return o;
        }
    }
}
