// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudbuild.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.cloudbuild.v1.outputs.BuiltImageResponse;
import com.pulumi.googlenative.cloudbuild.v1.outputs.TimeSpanResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class ResultsResponse {
    /**
     * @return Path to the artifact manifest. Only populated when artifacts are uploaded.
     * 
     */
    private String artifactManifest;
    /**
     * @return Time to push all non-container artifacts.
     * 
     */
    private TimeSpanResponse artifactTiming;
    /**
     * @return List of build step digests, in the order corresponding to build step indices.
     * 
     */
    private List<String> buildStepImages;
    /**
     * @return List of build step outputs, produced by builder images, in the order corresponding to build step indices. [Cloud Builders](https://cloud.google.com/cloud-build/docs/cloud-builders) can produce this output by writing to `$BUILDER_OUTPUT/output`. Only the first 4KB of data is stored.
     * 
     */
    private List<String> buildStepOutputs;
    /**
     * @return Container images that were built as a part of the build.
     * 
     */
    private List<BuiltImageResponse> images;
    /**
     * @return Number of artifacts uploaded. Only populated when artifacts are uploaded.
     * 
     */
    private String numArtifacts;

    private ResultsResponse() {}
    /**
     * @return Path to the artifact manifest. Only populated when artifacts are uploaded.
     * 
     */
    public String artifactManifest() {
        return this.artifactManifest;
    }
    /**
     * @return Time to push all non-container artifacts.
     * 
     */
    public TimeSpanResponse artifactTiming() {
        return this.artifactTiming;
    }
    /**
     * @return List of build step digests, in the order corresponding to build step indices.
     * 
     */
    public List<String> buildStepImages() {
        return this.buildStepImages;
    }
    /**
     * @return List of build step outputs, produced by builder images, in the order corresponding to build step indices. [Cloud Builders](https://cloud.google.com/cloud-build/docs/cloud-builders) can produce this output by writing to `$BUILDER_OUTPUT/output`. Only the first 4KB of data is stored.
     * 
     */
    public List<String> buildStepOutputs() {
        return this.buildStepOutputs;
    }
    /**
     * @return Container images that were built as a part of the build.
     * 
     */
    public List<BuiltImageResponse> images() {
        return this.images;
    }
    /**
     * @return Number of artifacts uploaded. Only populated when artifacts are uploaded.
     * 
     */
    public String numArtifacts() {
        return this.numArtifacts;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResultsResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String artifactManifest;
        private TimeSpanResponse artifactTiming;
        private List<String> buildStepImages;
        private List<String> buildStepOutputs;
        private List<BuiltImageResponse> images;
        private String numArtifacts;
        public Builder() {}
        public Builder(ResultsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.artifactManifest = defaults.artifactManifest;
    	      this.artifactTiming = defaults.artifactTiming;
    	      this.buildStepImages = defaults.buildStepImages;
    	      this.buildStepOutputs = defaults.buildStepOutputs;
    	      this.images = defaults.images;
    	      this.numArtifacts = defaults.numArtifacts;
        }

        @CustomType.Setter
        public Builder artifactManifest(String artifactManifest) {
            this.artifactManifest = Objects.requireNonNull(artifactManifest);
            return this;
        }
        @CustomType.Setter
        public Builder artifactTiming(TimeSpanResponse artifactTiming) {
            this.artifactTiming = Objects.requireNonNull(artifactTiming);
            return this;
        }
        @CustomType.Setter
        public Builder buildStepImages(List<String> buildStepImages) {
            this.buildStepImages = Objects.requireNonNull(buildStepImages);
            return this;
        }
        public Builder buildStepImages(String... buildStepImages) {
            return buildStepImages(List.of(buildStepImages));
        }
        @CustomType.Setter
        public Builder buildStepOutputs(List<String> buildStepOutputs) {
            this.buildStepOutputs = Objects.requireNonNull(buildStepOutputs);
            return this;
        }
        public Builder buildStepOutputs(String... buildStepOutputs) {
            return buildStepOutputs(List.of(buildStepOutputs));
        }
        @CustomType.Setter
        public Builder images(List<BuiltImageResponse> images) {
            this.images = Objects.requireNonNull(images);
            return this;
        }
        public Builder images(BuiltImageResponse... images) {
            return images(List.of(images));
        }
        @CustomType.Setter
        public Builder numArtifacts(String numArtifacts) {
            this.numArtifacts = Objects.requireNonNull(numArtifacts);
            return this;
        }
        public ResultsResponse build() {
            final var o = new ResultsResponse();
            o.artifactManifest = artifactManifest;
            o.artifactTiming = artifactTiming;
            o.buildStepImages = buildStepImages;
            o.buildStepOutputs = buildStepOutputs;
            o.images = images;
            o.numArtifacts = numArtifacts;
            return o;
        }
    }
}
