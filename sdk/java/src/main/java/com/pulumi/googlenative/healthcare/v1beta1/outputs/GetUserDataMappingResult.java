// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.healthcare.v1beta1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.healthcare.v1beta1.outputs.AttributeResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetUserDataMappingResult {
    /**
     * @return Indicates the time when this mapping was archived.
     * 
     */
    private String archiveTime;
    /**
     * @return Indicates whether this mapping is archived.
     * 
     */
    private Boolean archived;
    /**
     * @return A unique identifier for the mapped resource.
     * 
     */
    private String dataId;
    /**
     * @return Resource name of the User data mapping, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/userDataMappings/{user_data_mapping_id}`.
     * 
     */
    private String name;
    /**
     * @return Attributes of the resource. Only explicitly set attributes are displayed here. Attribute definitions with defaults set implicitly apply to these User data mappings. Attributes listed here must be single valued, that is, exactly one value is specified for the field &#34;values&#34; in each Attribute.
     * 
     */
    private List<AttributeResponse> resourceAttributes;
    /**
     * @return User&#39;s UUID provided by the client.
     * 
     */
    private String userId;

    private GetUserDataMappingResult() {}
    /**
     * @return Indicates the time when this mapping was archived.
     * 
     */
    public String archiveTime() {
        return this.archiveTime;
    }
    /**
     * @return Indicates whether this mapping is archived.
     * 
     */
    public Boolean archived() {
        return this.archived;
    }
    /**
     * @return A unique identifier for the mapped resource.
     * 
     */
    public String dataId() {
        return this.dataId;
    }
    /**
     * @return Resource name of the User data mapping, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/userDataMappings/{user_data_mapping_id}`.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Attributes of the resource. Only explicitly set attributes are displayed here. Attribute definitions with defaults set implicitly apply to these User data mappings. Attributes listed here must be single valued, that is, exactly one value is specified for the field &#34;values&#34; in each Attribute.
     * 
     */
    public List<AttributeResponse> resourceAttributes() {
        return this.resourceAttributes;
    }
    /**
     * @return User&#39;s UUID provided by the client.
     * 
     */
    public String userId() {
        return this.userId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUserDataMappingResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String archiveTime;
        private Boolean archived;
        private String dataId;
        private String name;
        private List<AttributeResponse> resourceAttributes;
        private String userId;
        public Builder() {}
        public Builder(GetUserDataMappingResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.archiveTime = defaults.archiveTime;
    	      this.archived = defaults.archived;
    	      this.dataId = defaults.dataId;
    	      this.name = defaults.name;
    	      this.resourceAttributes = defaults.resourceAttributes;
    	      this.userId = defaults.userId;
        }

        @CustomType.Setter
        public Builder archiveTime(String archiveTime) {
            this.archiveTime = Objects.requireNonNull(archiveTime);
            return this;
        }
        @CustomType.Setter
        public Builder archived(Boolean archived) {
            this.archived = Objects.requireNonNull(archived);
            return this;
        }
        @CustomType.Setter
        public Builder dataId(String dataId) {
            this.dataId = Objects.requireNonNull(dataId);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder resourceAttributes(List<AttributeResponse> resourceAttributes) {
            this.resourceAttributes = Objects.requireNonNull(resourceAttributes);
            return this;
        }
        public Builder resourceAttributes(AttributeResponse... resourceAttributes) {
            return resourceAttributes(List.of(resourceAttributes));
        }
        @CustomType.Setter
        public Builder userId(String userId) {
            this.userId = Objects.requireNonNull(userId);
            return this;
        }
        public GetUserDataMappingResult build() {
            final var o = new GetUserDataMappingResult();
            o.archiveTime = archiveTime;
            o.archived = archived;
            o.dataId = dataId;
            o.name = name;
            o.resourceAttributes = resourceAttributes;
            o.userId = userId;
            return o;
        }
    }
}
