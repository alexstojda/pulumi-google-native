// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.monitoring.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.monitoring.v1.outputs.AggregationResponse;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class RatioPartResponse {
    /**
     * @return By default, the raw time series data is returned. Use this field to combine multiple time series for different views of the data.
     * 
     */
    private AggregationResponse aggregation;
    /**
     * @return The monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
     * 
     */
    private String filter;

    private RatioPartResponse() {}
    /**
     * @return By default, the raw time series data is returned. Use this field to combine multiple time series for different views of the data.
     * 
     */
    public AggregationResponse aggregation() {
        return this.aggregation;
    }
    /**
     * @return The monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
     * 
     */
    public String filter() {
        return this.filter;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RatioPartResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private AggregationResponse aggregation;
        private String filter;
        public Builder() {}
        public Builder(RatioPartResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aggregation = defaults.aggregation;
    	      this.filter = defaults.filter;
        }

        @CustomType.Setter
        public Builder aggregation(AggregationResponse aggregation) {
            this.aggregation = Objects.requireNonNull(aggregation);
            return this;
        }
        @CustomType.Setter
        public Builder filter(String filter) {
            this.filter = Objects.requireNonNull(filter);
            return this;
        }
        public RatioPartResponse build() {
            final var o = new RatioPartResponse();
            o.aggregation = aggregation;
            o.filter = filter;
            return o;
        }
    }
}
