// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.storage.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.storage.v1.outputs.DefaultObjectAccessControlProjectTeamResponse;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDefaultObjectAccessControlResult {
    /**
     * @return The name of the bucket.
     * 
     */
    private String bucket;
    /**
     * @return The domain associated with the entity, if any.
     * 
     */
    private String domain;
    /**
     * @return The email address associated with the entity, if any.
     * 
     */
    private String email;
    /**
     * @return The entity holding the permission, in one of the following forms:
     * - user-userId
     * - user-email
     * - group-groupId
     * - group-email
     * - domain-domain
     * - project-team-projectId
     * - allUsers
     * - allAuthenticatedUsers Examples:
     * - The user liz@example.com would be user-liz@example.com.
     * - The group example@googlegroups.com would be group-example@googlegroups.com.
     * - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com.
     * 
     */
    private String entity;
    /**
     * @return The ID for the entity, if any.
     * 
     */
    private String entityId;
    /**
     * @return HTTP 1.1 Entity tag for the access-control entry.
     * 
     */
    private String etag;
    /**
     * @return The content generation of the object, if applied to an object.
     * 
     */
    private String generation;
    /**
     * @return The kind of item this is. For object access control entries, this is always storage#objectAccessControl.
     * 
     */
    private String kind;
    /**
     * @return The name of the object, if applied to an object.
     * 
     */
    private String object;
    /**
     * @return The project team associated with the entity, if any.
     * 
     */
    private DefaultObjectAccessControlProjectTeamResponse projectTeam;
    /**
     * @return The access permission for the entity.
     * 
     */
    private String role;
    /**
     * @return The link to this access-control entry.
     * 
     */
    private String selfLink;

    private GetDefaultObjectAccessControlResult() {}
    /**
     * @return The name of the bucket.
     * 
     */
    public String bucket() {
        return this.bucket;
    }
    /**
     * @return The domain associated with the entity, if any.
     * 
     */
    public String domain() {
        return this.domain;
    }
    /**
     * @return The email address associated with the entity, if any.
     * 
     */
    public String email() {
        return this.email;
    }
    /**
     * @return The entity holding the permission, in one of the following forms:
     * - user-userId
     * - user-email
     * - group-groupId
     * - group-email
     * - domain-domain
     * - project-team-projectId
     * - allUsers
     * - allAuthenticatedUsers Examples:
     * - The user liz@example.com would be user-liz@example.com.
     * - The group example@googlegroups.com would be group-example@googlegroups.com.
     * - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com.
     * 
     */
    public String entity() {
        return this.entity;
    }
    /**
     * @return The ID for the entity, if any.
     * 
     */
    public String entityId() {
        return this.entityId;
    }
    /**
     * @return HTTP 1.1 Entity tag for the access-control entry.
     * 
     */
    public String etag() {
        return this.etag;
    }
    /**
     * @return The content generation of the object, if applied to an object.
     * 
     */
    public String generation() {
        return this.generation;
    }
    /**
     * @return The kind of item this is. For object access control entries, this is always storage#objectAccessControl.
     * 
     */
    public String kind() {
        return this.kind;
    }
    /**
     * @return The name of the object, if applied to an object.
     * 
     */
    public String object() {
        return this.object;
    }
    /**
     * @return The project team associated with the entity, if any.
     * 
     */
    public DefaultObjectAccessControlProjectTeamResponse projectTeam() {
        return this.projectTeam;
    }
    /**
     * @return The access permission for the entity.
     * 
     */
    public String role() {
        return this.role;
    }
    /**
     * @return The link to this access-control entry.
     * 
     */
    public String selfLink() {
        return this.selfLink;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDefaultObjectAccessControlResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String bucket;
        private String domain;
        private String email;
        private String entity;
        private String entityId;
        private String etag;
        private String generation;
        private String kind;
        private String object;
        private DefaultObjectAccessControlProjectTeamResponse projectTeam;
        private String role;
        private String selfLink;
        public Builder() {}
        public Builder(GetDefaultObjectAccessControlResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucket = defaults.bucket;
    	      this.domain = defaults.domain;
    	      this.email = defaults.email;
    	      this.entity = defaults.entity;
    	      this.entityId = defaults.entityId;
    	      this.etag = defaults.etag;
    	      this.generation = defaults.generation;
    	      this.kind = defaults.kind;
    	      this.object = defaults.object;
    	      this.projectTeam = defaults.projectTeam;
    	      this.role = defaults.role;
    	      this.selfLink = defaults.selfLink;
        }

        @CustomType.Setter
        public Builder bucket(String bucket) {
            this.bucket = Objects.requireNonNull(bucket);
            return this;
        }
        @CustomType.Setter
        public Builder domain(String domain) {
            this.domain = Objects.requireNonNull(domain);
            return this;
        }
        @CustomType.Setter
        public Builder email(String email) {
            this.email = Objects.requireNonNull(email);
            return this;
        }
        @CustomType.Setter
        public Builder entity(String entity) {
            this.entity = Objects.requireNonNull(entity);
            return this;
        }
        @CustomType.Setter
        public Builder entityId(String entityId) {
            this.entityId = Objects.requireNonNull(entityId);
            return this;
        }
        @CustomType.Setter
        public Builder etag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }
        @CustomType.Setter
        public Builder generation(String generation) {
            this.generation = Objects.requireNonNull(generation);
            return this;
        }
        @CustomType.Setter
        public Builder kind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }
        @CustomType.Setter
        public Builder object(String object) {
            this.object = Objects.requireNonNull(object);
            return this;
        }
        @CustomType.Setter
        public Builder projectTeam(DefaultObjectAccessControlProjectTeamResponse projectTeam) {
            this.projectTeam = Objects.requireNonNull(projectTeam);
            return this;
        }
        @CustomType.Setter
        public Builder role(String role) {
            this.role = Objects.requireNonNull(role);
            return this;
        }
        @CustomType.Setter
        public Builder selfLink(String selfLink) {
            this.selfLink = Objects.requireNonNull(selfLink);
            return this;
        }
        public GetDefaultObjectAccessControlResult build() {
            final var o = new GetDefaultObjectAccessControlResult();
            o.bucket = bucket;
            o.domain = domain;
            o.email = email;
            o.entity = entity;
            o.entityId = entityId;
            o.etag = etag;
            o.generation = generation;
            o.kind = kind;
            o.object = object;
            o.projectTeam = projectTeam;
            o.role = role;
            o.selfLink = selfLink;
            return o;
        }
    }
}
