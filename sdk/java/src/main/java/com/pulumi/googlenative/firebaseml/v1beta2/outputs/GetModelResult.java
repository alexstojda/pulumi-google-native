// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.firebaseml.v1beta2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.firebaseml.v1beta2.outputs.ModelStateResponse;
import com.pulumi.googlenative.firebaseml.v1beta2.outputs.OperationResponse;
import com.pulumi.googlenative.firebaseml.v1beta2.outputs.TfLiteModelResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetModelResult {
    /**
     * @return Lists operation ids associated with this model whose status is NOT done.
     * 
     */
    private List<OperationResponse> activeOperations;
    /**
     * @return Timestamp when this model was created in Firebase ML.
     * 
     */
    private String createTime;
    /**
     * @return The name of the model to create. The name can be up to 32 characters long and can consist only of ASCII Latin letters A-Z and a-z, underscores(_) and ASCII digits 0-9. It must start with a letter.
     * 
     */
    private String displayName;
    /**
     * @return See RFC7232 https://tools.ietf.org/html/rfc7232#section-2.3
     * 
     */
    private String etag;
    /**
     * @return The model_hash will change if a new file is available for download.
     * 
     */
    private String modelHash;
    /**
     * @return The resource name of the Model. Model names have the form `projects/{project_id}/models/{model_id}` The name is ignored when creating a model.
     * 
     */
    private String name;
    /**
     * @return State common to all model types. Includes publishing and validation information.
     * 
     */
    private ModelStateResponse state;
    /**
     * @return User defined tags which can be used to group/filter models during listing
     * 
     */
    private List<String> tags;
    /**
     * @return A TFLite Model
     * 
     */
    private TfLiteModelResponse tfliteModel;
    /**
     * @return Timestamp when this model was updated in Firebase ML.
     * 
     */
    private String updateTime;

    private GetModelResult() {}
    /**
     * @return Lists operation ids associated with this model whose status is NOT done.
     * 
     */
    public List<OperationResponse> activeOperations() {
        return this.activeOperations;
    }
    /**
     * @return Timestamp when this model was created in Firebase ML.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return The name of the model to create. The name can be up to 32 characters long and can consist only of ASCII Latin letters A-Z and a-z, underscores(_) and ASCII digits 0-9. It must start with a letter.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return See RFC7232 https://tools.ietf.org/html/rfc7232#section-2.3
     * 
     */
    public String etag() {
        return this.etag;
    }
    /**
     * @return The model_hash will change if a new file is available for download.
     * 
     */
    public String modelHash() {
        return this.modelHash;
    }
    /**
     * @return The resource name of the Model. Model names have the form `projects/{project_id}/models/{model_id}` The name is ignored when creating a model.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return State common to all model types. Includes publishing and validation information.
     * 
     */
    public ModelStateResponse state() {
        return this.state;
    }
    /**
     * @return User defined tags which can be used to group/filter models during listing
     * 
     */
    public List<String> tags() {
        return this.tags;
    }
    /**
     * @return A TFLite Model
     * 
     */
    public TfLiteModelResponse tfliteModel() {
        return this.tfliteModel;
    }
    /**
     * @return Timestamp when this model was updated in Firebase ML.
     * 
     */
    public String updateTime() {
        return this.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetModelResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<OperationResponse> activeOperations;
        private String createTime;
        private String displayName;
        private String etag;
        private String modelHash;
        private String name;
        private ModelStateResponse state;
        private List<String> tags;
        private TfLiteModelResponse tfliteModel;
        private String updateTime;
        public Builder() {}
        public Builder(GetModelResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activeOperations = defaults.activeOperations;
    	      this.createTime = defaults.createTime;
    	      this.displayName = defaults.displayName;
    	      this.etag = defaults.etag;
    	      this.modelHash = defaults.modelHash;
    	      this.name = defaults.name;
    	      this.state = defaults.state;
    	      this.tags = defaults.tags;
    	      this.tfliteModel = defaults.tfliteModel;
    	      this.updateTime = defaults.updateTime;
        }

        @CustomType.Setter
        public Builder activeOperations(List<OperationResponse> activeOperations) {
            this.activeOperations = Objects.requireNonNull(activeOperations);
            return this;
        }
        public Builder activeOperations(OperationResponse... activeOperations) {
            return activeOperations(List.of(activeOperations));
        }
        @CustomType.Setter
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder etag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }
        @CustomType.Setter
        public Builder modelHash(String modelHash) {
            this.modelHash = Objects.requireNonNull(modelHash);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder state(ModelStateResponse state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder tags(List<String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder tfliteModel(TfLiteModelResponse tfliteModel) {
            this.tfliteModel = Objects.requireNonNull(tfliteModel);
            return this;
        }
        @CustomType.Setter
        public Builder updateTime(String updateTime) {
            this.updateTime = Objects.requireNonNull(updateTime);
            return this;
        }
        public GetModelResult build() {
            final var o = new GetModelResult();
            o.activeOperations = activeOperations;
            o.createTime = createTime;
            o.displayName = displayName;
            o.etag = etag;
            o.modelHash = modelHash;
            o.name = name;
            o.state = state;
            o.tags = tags;
            o.tfliteModel = tfliteModel;
            o.updateTime = updateTime;
            return o;
        }
    }
}
