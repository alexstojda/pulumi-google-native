// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dataflow.v1b3.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.dataflow.v1b3.outputs.EnvironmentResponse;
import com.pulumi.googlenative.dataflow.v1b3.outputs.ExecutionStageStateResponse;
import com.pulumi.googlenative.dataflow.v1b3.outputs.JobExecutionInfoResponse;
import com.pulumi.googlenative.dataflow.v1b3.outputs.JobMetadataResponse;
import com.pulumi.googlenative.dataflow.v1b3.outputs.PipelineDescriptionResponse;
import com.pulumi.googlenative.dataflow.v1b3.outputs.StepResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetJobResult {
    /**
     * @return The client&#39;s unique identifier of the job, re-used across retried attempts. If this field is set, the service will ensure its uniqueness. The request to create a job will fail if the service has knowledge of a previously submitted job with the same client&#39;s ID and job name. The caller may use this field to ensure idempotence of job creation across retried attempts to create a job. By default, the field is empty and, in that case, the service ignores it.
     * 
     */
    private String clientRequestId;
    /**
     * @return The timestamp when the job was initially created. Immutable and set by the Cloud Dataflow service.
     * 
     */
    private String createTime;
    /**
     * @return If this is specified, the job&#39;s initial state is populated from the given snapshot.
     * 
     */
    private String createdFromSnapshotId;
    /**
     * @return The current state of the job. Jobs are created in the `JOB_STATE_STOPPED` state unless otherwise specified. A job in the `JOB_STATE_RUNNING` state may asynchronously enter a terminal state. After a job has reached a terminal state, no further state updates may be made. This field may be mutated by the Cloud Dataflow service; callers cannot mutate it.
     * 
     */
    private String currentState;
    /**
     * @return The timestamp associated with the current state.
     * 
     */
    private String currentStateTime;
    /**
     * @return The environment for the job.
     * 
     */
    private EnvironmentResponse environment;
    /**
     * @return Deprecated.
     * 
     * @deprecated
     * Deprecated.
     * 
     */
    @Deprecated /* Deprecated. */
    private JobExecutionInfoResponse executionInfo;
    /**
     * @return This field is populated by the Dataflow service to support filtering jobs by the metadata values provided here. Populated for ListJobs and all GetJob views SUMMARY and higher.
     * 
     */
    private JobMetadataResponse jobMetadata;
    /**
     * @return User-defined labels for this job. The labels map can contain no more than 64 entries. Entries of the labels map are UTF8 strings that comply with the following restrictions: * Keys must conform to regexp: \p{Ll}\p{Lo}{0,62} * Values must conform to regexp: [\p{Ll}\p{Lo}\p{N}_-]{0,63} * Both keys and values are additionally constrained to be &lt;= 128 bytes in size.
     * 
     */
    private Map<String,String> labels;
    /**
     * @return The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains this job.
     * 
     */
    private String location;
    /**
     * @return The user-specified Cloud Dataflow job name. Only one Job with a given name can exist in a project within one region at any given time. Jobs in different regions can have the same name. If a caller attempts to create a Job with the same name as an already-existing Job, the attempt returns the existing Job. The name must match the regular expression `[a-z]([-a-z0-9]{0,1022}[a-z0-9])?`
     * 
     */
    private String name;
    /**
     * @return Preliminary field: The format of this data may change at any time. A description of the user pipeline and stages through which it is executed. Created by Cloud Dataflow service. Only retrieved with JOB_VIEW_DESCRIPTION or JOB_VIEW_ALL.
     * 
     */
    private PipelineDescriptionResponse pipelineDescription;
    /**
     * @return The ID of the Cloud Platform project that the job belongs to.
     * 
     */
    private String project;
    /**
     * @return If this job is an update of an existing job, this field is the job ID of the job it replaced. When sending a `CreateJobRequest`, you can update a job by specifying it here. The job named here is stopped, and its intermediate state is transferred to this job.
     * 
     */
    private String replaceJobId;
    /**
     * @return If another job is an update of this job (and thus, this job is in `JOB_STATE_UPDATED`), this field contains the ID of that job.
     * 
     */
    private String replacedByJobId;
    /**
     * @return The job&#39;s requested state. `UpdateJob` may be used to switch between the `JOB_STATE_STOPPED` and `JOB_STATE_RUNNING` states, by setting requested_state. `UpdateJob` may also be used to directly set a job&#39;s requested state to `JOB_STATE_CANCELLED` or `JOB_STATE_DONE`, irrevocably terminating the job if it has not already reached a terminal state.
     * 
     */
    private String requestedState;
    /**
     * @return Reserved for future use. This field is set only in responses from the server; it is ignored if it is set in any requests.
     * 
     */
    private Boolean satisfiesPzs;
    /**
     * @return This field may be mutated by the Cloud Dataflow service; callers cannot mutate it.
     * 
     */
    private List<ExecutionStageStateResponse> stageStates;
    /**
     * @return The timestamp when the job was started (transitioned to JOB_STATE_PENDING). Flexible resource scheduling jobs are started with some delay after job creation, so start_time is unset before start and is updated when the job is started by the Cloud Dataflow service. For other jobs, start_time always equals to create_time and is immutable and set by the Cloud Dataflow service.
     * 
     */
    private String startTime;
    /**
     * @return Exactly one of step or steps_location should be specified. The top-level steps that constitute the entire job. Only retrieved with JOB_VIEW_ALL.
     * 
     */
    private List<StepResponse> steps;
    /**
     * @return The Cloud Storage location where the steps are stored.
     * 
     */
    private String stepsLocation;
    /**
     * @return A set of files the system should be aware of that are used for temporary storage. These temporary files will be removed on job completion. No duplicates are allowed. No file patterns are supported. The supported files are: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}
     * 
     */
    private List<String> tempFiles;
    /**
     * @return The map of transform name prefixes of the job to be replaced to the corresponding name prefixes of the new job.
     * 
     */
    private Map<String,String> transformNameMapping;
    /**
     * @return The type of Cloud Dataflow job.
     * 
     */
    private String type;

    private GetJobResult() {}
    /**
     * @return The client&#39;s unique identifier of the job, re-used across retried attempts. If this field is set, the service will ensure its uniqueness. The request to create a job will fail if the service has knowledge of a previously submitted job with the same client&#39;s ID and job name. The caller may use this field to ensure idempotence of job creation across retried attempts to create a job. By default, the field is empty and, in that case, the service ignores it.
     * 
     */
    public String clientRequestId() {
        return this.clientRequestId;
    }
    /**
     * @return The timestamp when the job was initially created. Immutable and set by the Cloud Dataflow service.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return If this is specified, the job&#39;s initial state is populated from the given snapshot.
     * 
     */
    public String createdFromSnapshotId() {
        return this.createdFromSnapshotId;
    }
    /**
     * @return The current state of the job. Jobs are created in the `JOB_STATE_STOPPED` state unless otherwise specified. A job in the `JOB_STATE_RUNNING` state may asynchronously enter a terminal state. After a job has reached a terminal state, no further state updates may be made. This field may be mutated by the Cloud Dataflow service; callers cannot mutate it.
     * 
     */
    public String currentState() {
        return this.currentState;
    }
    /**
     * @return The timestamp associated with the current state.
     * 
     */
    public String currentStateTime() {
        return this.currentStateTime;
    }
    /**
     * @return The environment for the job.
     * 
     */
    public EnvironmentResponse environment() {
        return this.environment;
    }
    /**
     * @return Deprecated.
     * 
     * @deprecated
     * Deprecated.
     * 
     */
    @Deprecated /* Deprecated. */
    public JobExecutionInfoResponse executionInfo() {
        return this.executionInfo;
    }
    /**
     * @return This field is populated by the Dataflow service to support filtering jobs by the metadata values provided here. Populated for ListJobs and all GetJob views SUMMARY and higher.
     * 
     */
    public JobMetadataResponse jobMetadata() {
        return this.jobMetadata;
    }
    /**
     * @return User-defined labels for this job. The labels map can contain no more than 64 entries. Entries of the labels map are UTF8 strings that comply with the following restrictions: * Keys must conform to regexp: \p{Ll}\p{Lo}{0,62} * Values must conform to regexp: [\p{Ll}\p{Lo}\p{N}_-]{0,63} * Both keys and values are additionally constrained to be &lt;= 128 bytes in size.
     * 
     */
    public Map<String,String> labels() {
        return this.labels;
    }
    /**
     * @return The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains this job.
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return The user-specified Cloud Dataflow job name. Only one Job with a given name can exist in a project within one region at any given time. Jobs in different regions can have the same name. If a caller attempts to create a Job with the same name as an already-existing Job, the attempt returns the existing Job. The name must match the regular expression `[a-z]([-a-z0-9]{0,1022}[a-z0-9])?`
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Preliminary field: The format of this data may change at any time. A description of the user pipeline and stages through which it is executed. Created by Cloud Dataflow service. Only retrieved with JOB_VIEW_DESCRIPTION or JOB_VIEW_ALL.
     * 
     */
    public PipelineDescriptionResponse pipelineDescription() {
        return this.pipelineDescription;
    }
    /**
     * @return The ID of the Cloud Platform project that the job belongs to.
     * 
     */
    public String project() {
        return this.project;
    }
    /**
     * @return If this job is an update of an existing job, this field is the job ID of the job it replaced. When sending a `CreateJobRequest`, you can update a job by specifying it here. The job named here is stopped, and its intermediate state is transferred to this job.
     * 
     */
    public String replaceJobId() {
        return this.replaceJobId;
    }
    /**
     * @return If another job is an update of this job (and thus, this job is in `JOB_STATE_UPDATED`), this field contains the ID of that job.
     * 
     */
    public String replacedByJobId() {
        return this.replacedByJobId;
    }
    /**
     * @return The job&#39;s requested state. `UpdateJob` may be used to switch between the `JOB_STATE_STOPPED` and `JOB_STATE_RUNNING` states, by setting requested_state. `UpdateJob` may also be used to directly set a job&#39;s requested state to `JOB_STATE_CANCELLED` or `JOB_STATE_DONE`, irrevocably terminating the job if it has not already reached a terminal state.
     * 
     */
    public String requestedState() {
        return this.requestedState;
    }
    /**
     * @return Reserved for future use. This field is set only in responses from the server; it is ignored if it is set in any requests.
     * 
     */
    public Boolean satisfiesPzs() {
        return this.satisfiesPzs;
    }
    /**
     * @return This field may be mutated by the Cloud Dataflow service; callers cannot mutate it.
     * 
     */
    public List<ExecutionStageStateResponse> stageStates() {
        return this.stageStates;
    }
    /**
     * @return The timestamp when the job was started (transitioned to JOB_STATE_PENDING). Flexible resource scheduling jobs are started with some delay after job creation, so start_time is unset before start and is updated when the job is started by the Cloud Dataflow service. For other jobs, start_time always equals to create_time and is immutable and set by the Cloud Dataflow service.
     * 
     */
    public String startTime() {
        return this.startTime;
    }
    /**
     * @return Exactly one of step or steps_location should be specified. The top-level steps that constitute the entire job. Only retrieved with JOB_VIEW_ALL.
     * 
     */
    public List<StepResponse> steps() {
        return this.steps;
    }
    /**
     * @return The Cloud Storage location where the steps are stored.
     * 
     */
    public String stepsLocation() {
        return this.stepsLocation;
    }
    /**
     * @return A set of files the system should be aware of that are used for temporary storage. These temporary files will be removed on job completion. No duplicates are allowed. No file patterns are supported. The supported files are: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}
     * 
     */
    public List<String> tempFiles() {
        return this.tempFiles;
    }
    /**
     * @return The map of transform name prefixes of the job to be replaced to the corresponding name prefixes of the new job.
     * 
     */
    public Map<String,String> transformNameMapping() {
        return this.transformNameMapping;
    }
    /**
     * @return The type of Cloud Dataflow job.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetJobResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String clientRequestId;
        private String createTime;
        private String createdFromSnapshotId;
        private String currentState;
        private String currentStateTime;
        private EnvironmentResponse environment;
        private JobExecutionInfoResponse executionInfo;
        private JobMetadataResponse jobMetadata;
        private Map<String,String> labels;
        private String location;
        private String name;
        private PipelineDescriptionResponse pipelineDescription;
        private String project;
        private String replaceJobId;
        private String replacedByJobId;
        private String requestedState;
        private Boolean satisfiesPzs;
        private List<ExecutionStageStateResponse> stageStates;
        private String startTime;
        private List<StepResponse> steps;
        private String stepsLocation;
        private List<String> tempFiles;
        private Map<String,String> transformNameMapping;
        private String type;
        public Builder() {}
        public Builder(GetJobResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientRequestId = defaults.clientRequestId;
    	      this.createTime = defaults.createTime;
    	      this.createdFromSnapshotId = defaults.createdFromSnapshotId;
    	      this.currentState = defaults.currentState;
    	      this.currentStateTime = defaults.currentStateTime;
    	      this.environment = defaults.environment;
    	      this.executionInfo = defaults.executionInfo;
    	      this.jobMetadata = defaults.jobMetadata;
    	      this.labels = defaults.labels;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.pipelineDescription = defaults.pipelineDescription;
    	      this.project = defaults.project;
    	      this.replaceJobId = defaults.replaceJobId;
    	      this.replacedByJobId = defaults.replacedByJobId;
    	      this.requestedState = defaults.requestedState;
    	      this.satisfiesPzs = defaults.satisfiesPzs;
    	      this.stageStates = defaults.stageStates;
    	      this.startTime = defaults.startTime;
    	      this.steps = defaults.steps;
    	      this.stepsLocation = defaults.stepsLocation;
    	      this.tempFiles = defaults.tempFiles;
    	      this.transformNameMapping = defaults.transformNameMapping;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder clientRequestId(String clientRequestId) {
            this.clientRequestId = Objects.requireNonNull(clientRequestId);
            return this;
        }
        @CustomType.Setter
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        @CustomType.Setter
        public Builder createdFromSnapshotId(String createdFromSnapshotId) {
            this.createdFromSnapshotId = Objects.requireNonNull(createdFromSnapshotId);
            return this;
        }
        @CustomType.Setter
        public Builder currentState(String currentState) {
            this.currentState = Objects.requireNonNull(currentState);
            return this;
        }
        @CustomType.Setter
        public Builder currentStateTime(String currentStateTime) {
            this.currentStateTime = Objects.requireNonNull(currentStateTime);
            return this;
        }
        @CustomType.Setter
        public Builder environment(EnvironmentResponse environment) {
            this.environment = Objects.requireNonNull(environment);
            return this;
        }
        @CustomType.Setter
        public Builder executionInfo(JobExecutionInfoResponse executionInfo) {
            this.executionInfo = Objects.requireNonNull(executionInfo);
            return this;
        }
        @CustomType.Setter
        public Builder jobMetadata(JobMetadataResponse jobMetadata) {
            this.jobMetadata = Objects.requireNonNull(jobMetadata);
            return this;
        }
        @CustomType.Setter
        public Builder labels(Map<String,String> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder pipelineDescription(PipelineDescriptionResponse pipelineDescription) {
            this.pipelineDescription = Objects.requireNonNull(pipelineDescription);
            return this;
        }
        @CustomType.Setter
        public Builder project(String project) {
            this.project = Objects.requireNonNull(project);
            return this;
        }
        @CustomType.Setter
        public Builder replaceJobId(String replaceJobId) {
            this.replaceJobId = Objects.requireNonNull(replaceJobId);
            return this;
        }
        @CustomType.Setter
        public Builder replacedByJobId(String replacedByJobId) {
            this.replacedByJobId = Objects.requireNonNull(replacedByJobId);
            return this;
        }
        @CustomType.Setter
        public Builder requestedState(String requestedState) {
            this.requestedState = Objects.requireNonNull(requestedState);
            return this;
        }
        @CustomType.Setter
        public Builder satisfiesPzs(Boolean satisfiesPzs) {
            this.satisfiesPzs = Objects.requireNonNull(satisfiesPzs);
            return this;
        }
        @CustomType.Setter
        public Builder stageStates(List<ExecutionStageStateResponse> stageStates) {
            this.stageStates = Objects.requireNonNull(stageStates);
            return this;
        }
        public Builder stageStates(ExecutionStageStateResponse... stageStates) {
            return stageStates(List.of(stageStates));
        }
        @CustomType.Setter
        public Builder startTime(String startTime) {
            this.startTime = Objects.requireNonNull(startTime);
            return this;
        }
        @CustomType.Setter
        public Builder steps(List<StepResponse> steps) {
            this.steps = Objects.requireNonNull(steps);
            return this;
        }
        public Builder steps(StepResponse... steps) {
            return steps(List.of(steps));
        }
        @CustomType.Setter
        public Builder stepsLocation(String stepsLocation) {
            this.stepsLocation = Objects.requireNonNull(stepsLocation);
            return this;
        }
        @CustomType.Setter
        public Builder tempFiles(List<String> tempFiles) {
            this.tempFiles = Objects.requireNonNull(tempFiles);
            return this;
        }
        public Builder tempFiles(String... tempFiles) {
            return tempFiles(List.of(tempFiles));
        }
        @CustomType.Setter
        public Builder transformNameMapping(Map<String,String> transformNameMapping) {
            this.transformNameMapping = Objects.requireNonNull(transformNameMapping);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetJobResult build() {
            final var o = new GetJobResult();
            o.clientRequestId = clientRequestId;
            o.createTime = createTime;
            o.createdFromSnapshotId = createdFromSnapshotId;
            o.currentState = currentState;
            o.currentStateTime = currentStateTime;
            o.environment = environment;
            o.executionInfo = executionInfo;
            o.jobMetadata = jobMetadata;
            o.labels = labels;
            o.location = location;
            o.name = name;
            o.pipelineDescription = pipelineDescription;
            o.project = project;
            o.replaceJobId = replaceJobId;
            o.replacedByJobId = replacedByJobId;
            o.requestedState = requestedState;
            o.satisfiesPzs = satisfiesPzs;
            o.stageStates = stageStates;
            o.startTime = startTime;
            o.steps = steps;
            o.stepsLocation = stepsLocation;
            o.tempFiles = tempFiles;
            o.transformNameMapping = transformNameMapping;
            o.type = type;
            return o;
        }
    }
}
