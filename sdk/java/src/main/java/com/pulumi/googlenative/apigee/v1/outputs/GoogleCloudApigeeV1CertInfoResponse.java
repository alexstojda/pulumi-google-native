// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.apigee.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GoogleCloudApigeeV1CertInfoResponse {
    /**
     * @return X.509 basic constraints extension.
     * 
     */
    private String basicConstraints;
    /**
     * @return X.509 `notAfter` validity period in milliseconds since epoch.
     * 
     */
    private String expiryDate;
    /**
     * @return Flag that specifies whether the certificate is valid. Flag is set to `Yes` if the certificate is valid, `No` if expired, or `Not yet` if not yet valid.
     * 
     */
    private String isValid;
    /**
     * @return X.509 issuer.
     * 
     */
    private String issuer;
    /**
     * @return Public key component of the X.509 subject public key info.
     * 
     */
    private String publicKey;
    /**
     * @return X.509 serial number.
     * 
     */
    private String serialNumber;
    /**
     * @return X.509 signatureAlgorithm.
     * 
     */
    private String sigAlgName;
    /**
     * @return X.509 subject.
     * 
     */
    private String subject;
    /**
     * @return X.509 subject alternative names (SANs) extension.
     * 
     */
    private List<String> subjectAlternativeNames;
    /**
     * @return X.509 `notBefore` validity period in milliseconds since epoch.
     * 
     */
    private String validFrom;
    /**
     * @return X.509 version.
     * 
     */
    private Integer version;

    private GoogleCloudApigeeV1CertInfoResponse() {}
    /**
     * @return X.509 basic constraints extension.
     * 
     */
    public String basicConstraints() {
        return this.basicConstraints;
    }
    /**
     * @return X.509 `notAfter` validity period in milliseconds since epoch.
     * 
     */
    public String expiryDate() {
        return this.expiryDate;
    }
    /**
     * @return Flag that specifies whether the certificate is valid. Flag is set to `Yes` if the certificate is valid, `No` if expired, or `Not yet` if not yet valid.
     * 
     */
    public String isValid() {
        return this.isValid;
    }
    /**
     * @return X.509 issuer.
     * 
     */
    public String issuer() {
        return this.issuer;
    }
    /**
     * @return Public key component of the X.509 subject public key info.
     * 
     */
    public String publicKey() {
        return this.publicKey;
    }
    /**
     * @return X.509 serial number.
     * 
     */
    public String serialNumber() {
        return this.serialNumber;
    }
    /**
     * @return X.509 signatureAlgorithm.
     * 
     */
    public String sigAlgName() {
        return this.sigAlgName;
    }
    /**
     * @return X.509 subject.
     * 
     */
    public String subject() {
        return this.subject;
    }
    /**
     * @return X.509 subject alternative names (SANs) extension.
     * 
     */
    public List<String> subjectAlternativeNames() {
        return this.subjectAlternativeNames;
    }
    /**
     * @return X.509 `notBefore` validity period in milliseconds since epoch.
     * 
     */
    public String validFrom() {
        return this.validFrom;
    }
    /**
     * @return X.509 version.
     * 
     */
    public Integer version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudApigeeV1CertInfoResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String basicConstraints;
        private String expiryDate;
        private String isValid;
        private String issuer;
        private String publicKey;
        private String serialNumber;
        private String sigAlgName;
        private String subject;
        private List<String> subjectAlternativeNames;
        private String validFrom;
        private Integer version;
        public Builder() {}
        public Builder(GoogleCloudApigeeV1CertInfoResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.basicConstraints = defaults.basicConstraints;
    	      this.expiryDate = defaults.expiryDate;
    	      this.isValid = defaults.isValid;
    	      this.issuer = defaults.issuer;
    	      this.publicKey = defaults.publicKey;
    	      this.serialNumber = defaults.serialNumber;
    	      this.sigAlgName = defaults.sigAlgName;
    	      this.subject = defaults.subject;
    	      this.subjectAlternativeNames = defaults.subjectAlternativeNames;
    	      this.validFrom = defaults.validFrom;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder basicConstraints(String basicConstraints) {
            this.basicConstraints = Objects.requireNonNull(basicConstraints);
            return this;
        }
        @CustomType.Setter
        public Builder expiryDate(String expiryDate) {
            this.expiryDate = Objects.requireNonNull(expiryDate);
            return this;
        }
        @CustomType.Setter
        public Builder isValid(String isValid) {
            this.isValid = Objects.requireNonNull(isValid);
            return this;
        }
        @CustomType.Setter
        public Builder issuer(String issuer) {
            this.issuer = Objects.requireNonNull(issuer);
            return this;
        }
        @CustomType.Setter
        public Builder publicKey(String publicKey) {
            this.publicKey = Objects.requireNonNull(publicKey);
            return this;
        }
        @CustomType.Setter
        public Builder serialNumber(String serialNumber) {
            this.serialNumber = Objects.requireNonNull(serialNumber);
            return this;
        }
        @CustomType.Setter
        public Builder sigAlgName(String sigAlgName) {
            this.sigAlgName = Objects.requireNonNull(sigAlgName);
            return this;
        }
        @CustomType.Setter
        public Builder subject(String subject) {
            this.subject = Objects.requireNonNull(subject);
            return this;
        }
        @CustomType.Setter
        public Builder subjectAlternativeNames(List<String> subjectAlternativeNames) {
            this.subjectAlternativeNames = Objects.requireNonNull(subjectAlternativeNames);
            return this;
        }
        public Builder subjectAlternativeNames(String... subjectAlternativeNames) {
            return subjectAlternativeNames(List.of(subjectAlternativeNames));
        }
        @CustomType.Setter
        public Builder validFrom(String validFrom) {
            this.validFrom = Objects.requireNonNull(validFrom);
            return this;
        }
        @CustomType.Setter
        public Builder version(Integer version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }
        public GoogleCloudApigeeV1CertInfoResponse build() {
            final var o = new GoogleCloudApigeeV1CertInfoResponse();
            o.basicConstraints = basicConstraints;
            o.expiryDate = expiryDate;
            o.isValid = isValid;
            o.issuer = issuer;
            o.publicKey = publicKey;
            o.serialNumber = serialNumber;
            o.sigAlgName = sigAlgName;
            o.subject = subject;
            o.subjectAlternativeNames = subjectAlternativeNames;
            o.validFrom = validFrom;
            o.version = version;
            return o;
        }
    }
}
