// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.ml.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.util.Objects;

@CustomType
public final class GoogleCloudMlV1_AutomatedStoppingConfig_DecayCurveAutomatedStoppingConfigResponse {
    /**
     * @return If true, measurement.elapsed_time is used as the x-axis of each Trials Decay Curve. Otherwise, Measurement.steps will be used as the x-axis.
     * 
     */
    private Boolean useElapsedTime;

    private GoogleCloudMlV1_AutomatedStoppingConfig_DecayCurveAutomatedStoppingConfigResponse() {}
    /**
     * @return If true, measurement.elapsed_time is used as the x-axis of each Trials Decay Curve. Otherwise, Measurement.steps will be used as the x-axis.
     * 
     */
    public Boolean useElapsedTime() {
        return this.useElapsedTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudMlV1_AutomatedStoppingConfig_DecayCurveAutomatedStoppingConfigResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean useElapsedTime;
        public Builder() {}
        public Builder(GoogleCloudMlV1_AutomatedStoppingConfig_DecayCurveAutomatedStoppingConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.useElapsedTime = defaults.useElapsedTime;
        }

        @CustomType.Setter
        public Builder useElapsedTime(Boolean useElapsedTime) {
            this.useElapsedTime = Objects.requireNonNull(useElapsedTime);
            return this;
        }
        public GoogleCloudMlV1_AutomatedStoppingConfig_DecayCurveAutomatedStoppingConfigResponse build() {
            final var o = new GoogleCloudMlV1_AutomatedStoppingConfig_DecayCurveAutomatedStoppingConfigResponse();
            o.useElapsedTime = useElapsedTime;
            return o;
        }
    }
}
