// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.vmmigration.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class VmUtilizationMetricsResponse {
    /**
     * @return Average CPU usage, percent.
     * 
     */
    private Integer cpuAveragePercent;
    /**
     * @return Max CPU usage, percent.
     * 
     */
    private Integer cpuMaxPercent;
    /**
     * @return Average disk IO rate, in kilobytes per second.
     * 
     */
    private String diskIoRateAverageKbps;
    /**
     * @return Max disk IO rate, in kilobytes per second.
     * 
     */
    private String diskIoRateMaxKbps;
    /**
     * @return Average memory usage, percent.
     * 
     */
    private Integer memoryAveragePercent;
    /**
     * @return Max memory usage, percent.
     * 
     */
    private Integer memoryMaxPercent;
    /**
     * @return Average network throughput (combined transmit-rates and receive-rates), in kilobytes per second.
     * 
     */
    private String networkThroughputAverageKbps;
    /**
     * @return Max network throughput (combined transmit-rates and receive-rates), in kilobytes per second.
     * 
     */
    private String networkThroughputMaxKbps;

    private VmUtilizationMetricsResponse() {}
    /**
     * @return Average CPU usage, percent.
     * 
     */
    public Integer cpuAveragePercent() {
        return this.cpuAveragePercent;
    }
    /**
     * @return Max CPU usage, percent.
     * 
     */
    public Integer cpuMaxPercent() {
        return this.cpuMaxPercent;
    }
    /**
     * @return Average disk IO rate, in kilobytes per second.
     * 
     */
    public String diskIoRateAverageKbps() {
        return this.diskIoRateAverageKbps;
    }
    /**
     * @return Max disk IO rate, in kilobytes per second.
     * 
     */
    public String diskIoRateMaxKbps() {
        return this.diskIoRateMaxKbps;
    }
    /**
     * @return Average memory usage, percent.
     * 
     */
    public Integer memoryAveragePercent() {
        return this.memoryAveragePercent;
    }
    /**
     * @return Max memory usage, percent.
     * 
     */
    public Integer memoryMaxPercent() {
        return this.memoryMaxPercent;
    }
    /**
     * @return Average network throughput (combined transmit-rates and receive-rates), in kilobytes per second.
     * 
     */
    public String networkThroughputAverageKbps() {
        return this.networkThroughputAverageKbps;
    }
    /**
     * @return Max network throughput (combined transmit-rates and receive-rates), in kilobytes per second.
     * 
     */
    public String networkThroughputMaxKbps() {
        return this.networkThroughputMaxKbps;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VmUtilizationMetricsResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer cpuAveragePercent;
        private Integer cpuMaxPercent;
        private String diskIoRateAverageKbps;
        private String diskIoRateMaxKbps;
        private Integer memoryAveragePercent;
        private Integer memoryMaxPercent;
        private String networkThroughputAverageKbps;
        private String networkThroughputMaxKbps;
        public Builder() {}
        public Builder(VmUtilizationMetricsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cpuAveragePercent = defaults.cpuAveragePercent;
    	      this.cpuMaxPercent = defaults.cpuMaxPercent;
    	      this.diskIoRateAverageKbps = defaults.diskIoRateAverageKbps;
    	      this.diskIoRateMaxKbps = defaults.diskIoRateMaxKbps;
    	      this.memoryAveragePercent = defaults.memoryAveragePercent;
    	      this.memoryMaxPercent = defaults.memoryMaxPercent;
    	      this.networkThroughputAverageKbps = defaults.networkThroughputAverageKbps;
    	      this.networkThroughputMaxKbps = defaults.networkThroughputMaxKbps;
        }

        @CustomType.Setter
        public Builder cpuAveragePercent(Integer cpuAveragePercent) {
            this.cpuAveragePercent = Objects.requireNonNull(cpuAveragePercent);
            return this;
        }
        @CustomType.Setter
        public Builder cpuMaxPercent(Integer cpuMaxPercent) {
            this.cpuMaxPercent = Objects.requireNonNull(cpuMaxPercent);
            return this;
        }
        @CustomType.Setter
        public Builder diskIoRateAverageKbps(String diskIoRateAverageKbps) {
            this.diskIoRateAverageKbps = Objects.requireNonNull(diskIoRateAverageKbps);
            return this;
        }
        @CustomType.Setter
        public Builder diskIoRateMaxKbps(String diskIoRateMaxKbps) {
            this.diskIoRateMaxKbps = Objects.requireNonNull(diskIoRateMaxKbps);
            return this;
        }
        @CustomType.Setter
        public Builder memoryAveragePercent(Integer memoryAveragePercent) {
            this.memoryAveragePercent = Objects.requireNonNull(memoryAveragePercent);
            return this;
        }
        @CustomType.Setter
        public Builder memoryMaxPercent(Integer memoryMaxPercent) {
            this.memoryMaxPercent = Objects.requireNonNull(memoryMaxPercent);
            return this;
        }
        @CustomType.Setter
        public Builder networkThroughputAverageKbps(String networkThroughputAverageKbps) {
            this.networkThroughputAverageKbps = Objects.requireNonNull(networkThroughputAverageKbps);
            return this;
        }
        @CustomType.Setter
        public Builder networkThroughputMaxKbps(String networkThroughputMaxKbps) {
            this.networkThroughputMaxKbps = Objects.requireNonNull(networkThroughputMaxKbps);
            return this;
        }
        public VmUtilizationMetricsResponse build() {
            final var o = new VmUtilizationMetricsResponse();
            o.cpuAveragePercent = cpuAveragePercent;
            o.cpuMaxPercent = cpuMaxPercent;
            o.diskIoRateAverageKbps = diskIoRateAverageKbps;
            o.diskIoRateMaxKbps = diskIoRateMaxKbps;
            o.memoryAveragePercent = memoryAveragePercent;
            o.memoryMaxPercent = memoryMaxPercent;
            o.networkThroughputAverageKbps = networkThroughputAverageKbps;
            o.networkThroughputMaxKbps = networkThroughputMaxKbps;
            return o;
        }
    }
}
