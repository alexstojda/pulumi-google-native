// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.baremetalsolution.v2.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class NetworkAddressResponse {
    /**
     * @return IPv4 address to be assigned to the server.
     * 
     */
    private String address;
    /**
     * @return Name of the existing network to use.
     * 
     */
    private String existingNetworkId;
    /**
     * @return Id of the network to use, within the same ProvisioningConfig request.
     * 
     */
    private String networkId;

    private NetworkAddressResponse() {}
    /**
     * @return IPv4 address to be assigned to the server.
     * 
     */
    public String address() {
        return this.address;
    }
    /**
     * @return Name of the existing network to use.
     * 
     */
    public String existingNetworkId() {
        return this.existingNetworkId;
    }
    /**
     * @return Id of the network to use, within the same ProvisioningConfig request.
     * 
     */
    public String networkId() {
        return this.networkId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NetworkAddressResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String address;
        private String existingNetworkId;
        private String networkId;
        public Builder() {}
        public Builder(NetworkAddressResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.address = defaults.address;
    	      this.existingNetworkId = defaults.existingNetworkId;
    	      this.networkId = defaults.networkId;
        }

        @CustomType.Setter
        public Builder address(String address) {
            this.address = Objects.requireNonNull(address);
            return this;
        }
        @CustomType.Setter
        public Builder existingNetworkId(String existingNetworkId) {
            this.existingNetworkId = Objects.requireNonNull(existingNetworkId);
            return this;
        }
        @CustomType.Setter
        public Builder networkId(String networkId) {
            this.networkId = Objects.requireNonNull(networkId);
            return this;
        }
        public NetworkAddressResponse build() {
            final var o = new NetworkAddressResponse();
            o.address = address;
            o.existingNetworkId = existingNetworkId;
            o.networkId = networkId;
            return o;
        }
    }
}
