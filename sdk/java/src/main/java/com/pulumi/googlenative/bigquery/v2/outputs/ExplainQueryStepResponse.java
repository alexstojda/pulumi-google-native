// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.bigquery.v2.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class ExplainQueryStepResponse {
    /**
     * @return Machine-readable operation type.
     * 
     */
    private String kind;
    /**
     * @return Human-readable stage descriptions.
     * 
     */
    private List<String> substeps;

    private ExplainQueryStepResponse() {}
    /**
     * @return Machine-readable operation type.
     * 
     */
    public String kind() {
        return this.kind;
    }
    /**
     * @return Human-readable stage descriptions.
     * 
     */
    public List<String> substeps() {
        return this.substeps;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ExplainQueryStepResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String kind;
        private List<String> substeps;
        public Builder() {}
        public Builder(ExplainQueryStepResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.kind = defaults.kind;
    	      this.substeps = defaults.substeps;
        }

        @CustomType.Setter
        public Builder kind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }
        @CustomType.Setter
        public Builder substeps(List<String> substeps) {
            this.substeps = Objects.requireNonNull(substeps);
            return this;
        }
        public Builder substeps(String... substeps) {
            return substeps(List.of(substeps));
        }
        public ExplainQueryStepResponse build() {
            final var o = new ExplainQueryStepResponse();
            o.kind = kind;
            o.substeps = substeps;
            return o;
        }
    }
}
