// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dlp.v2.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GooglePrivacyDlpV2RegexResponse {
    /**
     * @return The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included.
     * 
     */
    private List<Integer> groupIndexes;
    /**
     * @return Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub.
     * 
     */
    private String pattern;

    private GooglePrivacyDlpV2RegexResponse() {}
    /**
     * @return The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included.
     * 
     */
    public List<Integer> groupIndexes() {
        return this.groupIndexes;
    }
    /**
     * @return Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub.
     * 
     */
    public String pattern() {
        return this.pattern;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GooglePrivacyDlpV2RegexResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<Integer> groupIndexes;
        private String pattern;
        public Builder() {}
        public Builder(GooglePrivacyDlpV2RegexResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.groupIndexes = defaults.groupIndexes;
    	      this.pattern = defaults.pattern;
        }

        @CustomType.Setter
        public Builder groupIndexes(List<Integer> groupIndexes) {
            this.groupIndexes = Objects.requireNonNull(groupIndexes);
            return this;
        }
        public Builder groupIndexes(Integer... groupIndexes) {
            return groupIndexes(List.of(groupIndexes));
        }
        @CustomType.Setter
        public Builder pattern(String pattern) {
            this.pattern = Objects.requireNonNull(pattern);
            return this;
        }
        public GooglePrivacyDlpV2RegexResponse build() {
            final var o = new GooglePrivacyDlpV2RegexResponse();
            o.groupIndexes = groupIndexes;
            o.pattern = pattern;
            return o;
        }
    }
}
