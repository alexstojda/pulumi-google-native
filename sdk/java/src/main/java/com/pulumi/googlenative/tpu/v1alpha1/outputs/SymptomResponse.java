// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.tpu.v1alpha1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class SymptomResponse {
    /**
     * @return Timestamp when the Symptom is created.
     * 
     */
    private String createTime;
    /**
     * @return Detailed information of the current Symptom.
     * 
     */
    private String details;
    /**
     * @return Type of the Symptom.
     * 
     */
    private String symptomType;
    /**
     * @return A string used to uniquely distinguish a worker within a TPU node.
     * 
     */
    private String workerId;

    private SymptomResponse() {}
    /**
     * @return Timestamp when the Symptom is created.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return Detailed information of the current Symptom.
     * 
     */
    public String details() {
        return this.details;
    }
    /**
     * @return Type of the Symptom.
     * 
     */
    public String symptomType() {
        return this.symptomType;
    }
    /**
     * @return A string used to uniquely distinguish a worker within a TPU node.
     * 
     */
    public String workerId() {
        return this.workerId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SymptomResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String createTime;
        private String details;
        private String symptomType;
        private String workerId;
        public Builder() {}
        public Builder(SymptomResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.details = defaults.details;
    	      this.symptomType = defaults.symptomType;
    	      this.workerId = defaults.workerId;
        }

        @CustomType.Setter
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        @CustomType.Setter
        public Builder details(String details) {
            this.details = Objects.requireNonNull(details);
            return this;
        }
        @CustomType.Setter
        public Builder symptomType(String symptomType) {
            this.symptomType = Objects.requireNonNull(symptomType);
            return this;
        }
        @CustomType.Setter
        public Builder workerId(String workerId) {
            this.workerId = Objects.requireNonNull(workerId);
            return this;
        }
        public SymptomResponse build() {
            final var o = new SymptomResponse();
            o.createTime = createTime;
            o.details = details;
            o.symptomType = symptomType;
            o.workerId = workerId;
            return o;
        }
    }
}
