// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudsearch.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class FacetOptionsResponse {
    /**
     * @return Maximum number of facet buckets that should be returned for this facet. Defaults to 10. Maximum value is 100.
     * 
     */
    private Integer numFacetBuckets;
    /**
     * @return If object_type is set, only those objects of that type will be used to compute facets. If empty, then all objects will be used to compute facets.
     * 
     */
    private String objectType;
    /**
     * @return The name of the operator chosen for faceting. @see cloudsearch.SchemaPropertyOptions
     * 
     */
    private String operatorName;
    /**
     * @return Source name to facet on. Format: datasources/{source_id} If empty, all data sources will be used.
     * 
     */
    private String sourceName;

    private FacetOptionsResponse() {}
    /**
     * @return Maximum number of facet buckets that should be returned for this facet. Defaults to 10. Maximum value is 100.
     * 
     */
    public Integer numFacetBuckets() {
        return this.numFacetBuckets;
    }
    /**
     * @return If object_type is set, only those objects of that type will be used to compute facets. If empty, then all objects will be used to compute facets.
     * 
     */
    public String objectType() {
        return this.objectType;
    }
    /**
     * @return The name of the operator chosen for faceting. @see cloudsearch.SchemaPropertyOptions
     * 
     */
    public String operatorName() {
        return this.operatorName;
    }
    /**
     * @return Source name to facet on. Format: datasources/{source_id} If empty, all data sources will be used.
     * 
     */
    public String sourceName() {
        return this.sourceName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FacetOptionsResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer numFacetBuckets;
        private String objectType;
        private String operatorName;
        private String sourceName;
        public Builder() {}
        public Builder(FacetOptionsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.numFacetBuckets = defaults.numFacetBuckets;
    	      this.objectType = defaults.objectType;
    	      this.operatorName = defaults.operatorName;
    	      this.sourceName = defaults.sourceName;
        }

        @CustomType.Setter
        public Builder numFacetBuckets(Integer numFacetBuckets) {
            this.numFacetBuckets = Objects.requireNonNull(numFacetBuckets);
            return this;
        }
        @CustomType.Setter
        public Builder objectType(String objectType) {
            this.objectType = Objects.requireNonNull(objectType);
            return this;
        }
        @CustomType.Setter
        public Builder operatorName(String operatorName) {
            this.operatorName = Objects.requireNonNull(operatorName);
            return this;
        }
        @CustomType.Setter
        public Builder sourceName(String sourceName) {
            this.sourceName = Objects.requireNonNull(sourceName);
            return this;
        }
        public FacetOptionsResponse build() {
            final var o = new FacetOptionsResponse();
            o.numFacetBuckets = numFacetBuckets;
            o.objectType = objectType;
            o.operatorName = operatorName;
            o.sourceName = sourceName;
            return o;
        }
    }
}
