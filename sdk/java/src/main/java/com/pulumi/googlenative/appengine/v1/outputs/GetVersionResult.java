// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.appengine.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.appengine.v1.outputs.ApiConfigHandlerResponse;
import com.pulumi.googlenative.appengine.v1.outputs.AutomaticScalingResponse;
import com.pulumi.googlenative.appengine.v1.outputs.BasicScalingResponse;
import com.pulumi.googlenative.appengine.v1.outputs.DeploymentResponse;
import com.pulumi.googlenative.appengine.v1.outputs.EndpointsApiServiceResponse;
import com.pulumi.googlenative.appengine.v1.outputs.EntrypointResponse;
import com.pulumi.googlenative.appengine.v1.outputs.ErrorHandlerResponse;
import com.pulumi.googlenative.appengine.v1.outputs.HealthCheckResponse;
import com.pulumi.googlenative.appengine.v1.outputs.LibraryResponse;
import com.pulumi.googlenative.appengine.v1.outputs.LivenessCheckResponse;
import com.pulumi.googlenative.appengine.v1.outputs.ManualScalingResponse;
import com.pulumi.googlenative.appengine.v1.outputs.NetworkResponse;
import com.pulumi.googlenative.appengine.v1.outputs.ReadinessCheckResponse;
import com.pulumi.googlenative.appengine.v1.outputs.ResourcesResponse;
import com.pulumi.googlenative.appengine.v1.outputs.UrlMapResponse;
import com.pulumi.googlenative.appengine.v1.outputs.VpcAccessConnectorResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetVersionResult {
    /**
     * @return Serving configuration for Google Cloud Endpoints (https://cloud.google.com/appengine/docs/python/endpoints/).Only returned in GET requests if view=FULL is set.
     * 
     */
    private ApiConfigHandlerResponse apiConfig;
    /**
     * @return Allows App Engine second generation runtimes to access the legacy bundled services.
     * 
     */
    private Boolean appEngineApis;
    /**
     * @return Automatic scaling is based on request rate, response latencies, and other application metrics. Instances are dynamically created and destroyed as needed in order to handle traffic.
     * 
     */
    private AutomaticScalingResponse automaticScaling;
    /**
     * @return A service with basic scaling will create an instance when the application receives a request. The instance will be turned down when the app becomes idle. Basic scaling is ideal for work that is intermittent or driven by user activity.
     * 
     */
    private BasicScalingResponse basicScaling;
    /**
     * @return Metadata settings that are supplied to this version to enable beta runtime features.
     * 
     */
    private Map<String,String> betaSettings;
    /**
     * @return Environment variables available to the build environment.Only returned in GET requests if view=FULL is set.
     * 
     */
    private Map<String,String> buildEnvVariables;
    /**
     * @return Time that this version was created.
     * 
     */
    private String createTime;
    /**
     * @return Email address of the user who created this version.
     * 
     */
    private String createdBy;
    /**
     * @return Duration that static files should be cached by web proxies and browsers. Only applicable if the corresponding StaticFilesHandler (https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions#StaticFilesHandler) does not specify its own expiration time.Only returned in GET requests if view=FULL is set.
     * 
     */
    private String defaultExpiration;
    /**
     * @return Code and application artifacts that make up this version.Only returned in GET requests if view=FULL is set.
     * 
     */
    private DeploymentResponse deployment;
    /**
     * @return Total size in bytes of all the files that are included in this version and currently hosted on the App Engine disk.
     * 
     */
    private String diskUsageBytes;
    /**
     * @return Cloud Endpoints configuration.If endpoints_api_service is set, the Cloud Endpoints Extensible Service Proxy will be provided to serve the API implemented by the app.
     * 
     */
    private EndpointsApiServiceResponse endpointsApiService;
    /**
     * @return The entrypoint for the application.
     * 
     */
    private EntrypointResponse entrypoint;
    /**
     * @return App Engine execution environment for this version.Defaults to standard.
     * 
     */
    private String env;
    /**
     * @return Environment variables available to the application.Only returned in GET requests if view=FULL is set.
     * 
     */
    private Map<String,String> envVariables;
    /**
     * @return Custom static error pages. Limited to 10KB per page.Only returned in GET requests if view=FULL is set.
     * 
     */
    private List<ErrorHandlerResponse> errorHandlers;
    /**
     * @return An ordered list of URL-matching patterns that should be applied to incoming requests. The first matching URL handles the request and other request handlers are not attempted.Only returned in GET requests if view=FULL is set.
     * 
     */
    private List<UrlMapResponse> handlers;
    /**
     * @return Configures health checking for instances. Unhealthy instances are stopped and replaced with new instances. Only applicable in the App Engine flexible environment.Only returned in GET requests if view=FULL is set.
     * 
     */
    private HealthCheckResponse healthCheck;
    /**
     * @return Before an application can receive email or XMPP messages, the application must be configured to enable the service.
     * 
     */
    private List<String> inboundServices;
    /**
     * @return Instance class that is used to run this version. Valid values are: AutomaticScaling: F1, F2, F4, F4_1G ManualScaling or BasicScaling: B1, B2, B4, B8, B4_1GDefaults to F1 for AutomaticScaling and B1 for ManualScaling or BasicScaling.
     * 
     */
    private String instanceClass;
    /**
     * @return Configuration for third-party Python runtime libraries that are required by the application.Only returned in GET requests if view=FULL is set.
     * 
     */
    private List<LibraryResponse> libraries;
    /**
     * @return Configures liveness health checking for instances. Unhealthy instances are stopped and replaced with new instancesOnly returned in GET requests if view=FULL is set.
     * 
     */
    private LivenessCheckResponse livenessCheck;
    /**
     * @return A service with manual scaling runs continuously, allowing you to perform complex initialization and rely on the state of its memory over time. Manually scaled versions are sometimes referred to as &#34;backends&#34;.
     * 
     */
    private ManualScalingResponse manualScaling;
    /**
     * @return Full path to the Version resource in the API. Example: apps/myapp/services/default/versions/v1.
     * 
     */
    private String name;
    /**
     * @return Extra network settings. Only applicable in the App Engine flexible environment.
     * 
     */
    private NetworkResponse network;
    /**
     * @return Files that match this pattern will not be built into this version. Only applicable for Go runtimes.Only returned in GET requests if view=FULL is set.
     * 
     */
    private String nobuildFilesRegex;
    /**
     * @return Configures readiness health checking for instances. Unhealthy instances are not put into the backend traffic rotation.Only returned in GET requests if view=FULL is set.
     * 
     */
    private ReadinessCheckResponse readinessCheck;
    /**
     * @return Machine resources for this version. Only applicable in the App Engine flexible environment.
     * 
     */
    private ResourcesResponse resources;
    /**
     * @return Desired runtime. Example: python27.
     * 
     */
    private String runtime;
    /**
     * @return The version of the API in the given runtime environment. Please see the app.yaml reference for valid values at https://cloud.google.com/appengine/docs/standard//config/appref
     * 
     */
    private String runtimeApiVersion;
    /**
     * @return The channel of the runtime to use. Only available for some runtimes. Defaults to the default channel.
     * 
     */
    private String runtimeChannel;
    /**
     * @return The path or name of the app&#39;s main executable.
     * 
     */
    private String runtimeMainExecutablePath;
    /**
     * @return The identity that the deployed version will run as. Admin API will use the App Engine Appspot service account as default if this field is neither provided in app.yaml file nor through CLI flag.
     * 
     */
    private String serviceAccount;
    /**
     * @return Current serving status of this version. Only the versions with a SERVING status create instances and can be billed.SERVING_STATUS_UNSPECIFIED is an invalid value. Defaults to SERVING.
     * 
     */
    private String servingStatus;
    /**
     * @return Whether multiple requests can be dispatched to this version at once.
     * 
     */
    private Boolean threadsafe;
    /**
     * @return Serving URL for this version. Example: &#34;https://myversion-dot-myservice-dot-myapp.appspot.com&#34;
     * 
     */
    private String versionUrl;
    /**
     * @return Whether to deploy this version in a container on a virtual machine.
     * 
     */
    private Boolean vm;
    /**
     * @return Enables VPC connectivity for standard apps.
     * 
     */
    private VpcAccessConnectorResponse vpcAccessConnector;
    /**
     * @return The Google Compute Engine zones that are supported by this version in the App Engine flexible environment. Deprecated.
     * 
     * @deprecated
     * The Google Compute Engine zones that are supported by this version in the App Engine flexible environment. Deprecated.
     * 
     */
    @Deprecated /* The Google Compute Engine zones that are supported by this version in the App Engine flexible environment. Deprecated. */
    private List<String> zones;

    private GetVersionResult() {}
    /**
     * @return Serving configuration for Google Cloud Endpoints (https://cloud.google.com/appengine/docs/python/endpoints/).Only returned in GET requests if view=FULL is set.
     * 
     */
    public ApiConfigHandlerResponse apiConfig() {
        return this.apiConfig;
    }
    /**
     * @return Allows App Engine second generation runtimes to access the legacy bundled services.
     * 
     */
    public Boolean appEngineApis() {
        return this.appEngineApis;
    }
    /**
     * @return Automatic scaling is based on request rate, response latencies, and other application metrics. Instances are dynamically created and destroyed as needed in order to handle traffic.
     * 
     */
    public AutomaticScalingResponse automaticScaling() {
        return this.automaticScaling;
    }
    /**
     * @return A service with basic scaling will create an instance when the application receives a request. The instance will be turned down when the app becomes idle. Basic scaling is ideal for work that is intermittent or driven by user activity.
     * 
     */
    public BasicScalingResponse basicScaling() {
        return this.basicScaling;
    }
    /**
     * @return Metadata settings that are supplied to this version to enable beta runtime features.
     * 
     */
    public Map<String,String> betaSettings() {
        return this.betaSettings;
    }
    /**
     * @return Environment variables available to the build environment.Only returned in GET requests if view=FULL is set.
     * 
     */
    public Map<String,String> buildEnvVariables() {
        return this.buildEnvVariables;
    }
    /**
     * @return Time that this version was created.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return Email address of the user who created this version.
     * 
     */
    public String createdBy() {
        return this.createdBy;
    }
    /**
     * @return Duration that static files should be cached by web proxies and browsers. Only applicable if the corresponding StaticFilesHandler (https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions#StaticFilesHandler) does not specify its own expiration time.Only returned in GET requests if view=FULL is set.
     * 
     */
    public String defaultExpiration() {
        return this.defaultExpiration;
    }
    /**
     * @return Code and application artifacts that make up this version.Only returned in GET requests if view=FULL is set.
     * 
     */
    public DeploymentResponse deployment() {
        return this.deployment;
    }
    /**
     * @return Total size in bytes of all the files that are included in this version and currently hosted on the App Engine disk.
     * 
     */
    public String diskUsageBytes() {
        return this.diskUsageBytes;
    }
    /**
     * @return Cloud Endpoints configuration.If endpoints_api_service is set, the Cloud Endpoints Extensible Service Proxy will be provided to serve the API implemented by the app.
     * 
     */
    public EndpointsApiServiceResponse endpointsApiService() {
        return this.endpointsApiService;
    }
    /**
     * @return The entrypoint for the application.
     * 
     */
    public EntrypointResponse entrypoint() {
        return this.entrypoint;
    }
    /**
     * @return App Engine execution environment for this version.Defaults to standard.
     * 
     */
    public String env() {
        return this.env;
    }
    /**
     * @return Environment variables available to the application.Only returned in GET requests if view=FULL is set.
     * 
     */
    public Map<String,String> envVariables() {
        return this.envVariables;
    }
    /**
     * @return Custom static error pages. Limited to 10KB per page.Only returned in GET requests if view=FULL is set.
     * 
     */
    public List<ErrorHandlerResponse> errorHandlers() {
        return this.errorHandlers;
    }
    /**
     * @return An ordered list of URL-matching patterns that should be applied to incoming requests. The first matching URL handles the request and other request handlers are not attempted.Only returned in GET requests if view=FULL is set.
     * 
     */
    public List<UrlMapResponse> handlers() {
        return this.handlers;
    }
    /**
     * @return Configures health checking for instances. Unhealthy instances are stopped and replaced with new instances. Only applicable in the App Engine flexible environment.Only returned in GET requests if view=FULL is set.
     * 
     */
    public HealthCheckResponse healthCheck() {
        return this.healthCheck;
    }
    /**
     * @return Before an application can receive email or XMPP messages, the application must be configured to enable the service.
     * 
     */
    public List<String> inboundServices() {
        return this.inboundServices;
    }
    /**
     * @return Instance class that is used to run this version. Valid values are: AutomaticScaling: F1, F2, F4, F4_1G ManualScaling or BasicScaling: B1, B2, B4, B8, B4_1GDefaults to F1 for AutomaticScaling and B1 for ManualScaling or BasicScaling.
     * 
     */
    public String instanceClass() {
        return this.instanceClass;
    }
    /**
     * @return Configuration for third-party Python runtime libraries that are required by the application.Only returned in GET requests if view=FULL is set.
     * 
     */
    public List<LibraryResponse> libraries() {
        return this.libraries;
    }
    /**
     * @return Configures liveness health checking for instances. Unhealthy instances are stopped and replaced with new instancesOnly returned in GET requests if view=FULL is set.
     * 
     */
    public LivenessCheckResponse livenessCheck() {
        return this.livenessCheck;
    }
    /**
     * @return A service with manual scaling runs continuously, allowing you to perform complex initialization and rely on the state of its memory over time. Manually scaled versions are sometimes referred to as &#34;backends&#34;.
     * 
     */
    public ManualScalingResponse manualScaling() {
        return this.manualScaling;
    }
    /**
     * @return Full path to the Version resource in the API. Example: apps/myapp/services/default/versions/v1.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Extra network settings. Only applicable in the App Engine flexible environment.
     * 
     */
    public NetworkResponse network() {
        return this.network;
    }
    /**
     * @return Files that match this pattern will not be built into this version. Only applicable for Go runtimes.Only returned in GET requests if view=FULL is set.
     * 
     */
    public String nobuildFilesRegex() {
        return this.nobuildFilesRegex;
    }
    /**
     * @return Configures readiness health checking for instances. Unhealthy instances are not put into the backend traffic rotation.Only returned in GET requests if view=FULL is set.
     * 
     */
    public ReadinessCheckResponse readinessCheck() {
        return this.readinessCheck;
    }
    /**
     * @return Machine resources for this version. Only applicable in the App Engine flexible environment.
     * 
     */
    public ResourcesResponse resources() {
        return this.resources;
    }
    /**
     * @return Desired runtime. Example: python27.
     * 
     */
    public String runtime() {
        return this.runtime;
    }
    /**
     * @return The version of the API in the given runtime environment. Please see the app.yaml reference for valid values at https://cloud.google.com/appengine/docs/standard//config/appref
     * 
     */
    public String runtimeApiVersion() {
        return this.runtimeApiVersion;
    }
    /**
     * @return The channel of the runtime to use. Only available for some runtimes. Defaults to the default channel.
     * 
     */
    public String runtimeChannel() {
        return this.runtimeChannel;
    }
    /**
     * @return The path or name of the app&#39;s main executable.
     * 
     */
    public String runtimeMainExecutablePath() {
        return this.runtimeMainExecutablePath;
    }
    /**
     * @return The identity that the deployed version will run as. Admin API will use the App Engine Appspot service account as default if this field is neither provided in app.yaml file nor through CLI flag.
     * 
     */
    public String serviceAccount() {
        return this.serviceAccount;
    }
    /**
     * @return Current serving status of this version. Only the versions with a SERVING status create instances and can be billed.SERVING_STATUS_UNSPECIFIED is an invalid value. Defaults to SERVING.
     * 
     */
    public String servingStatus() {
        return this.servingStatus;
    }
    /**
     * @return Whether multiple requests can be dispatched to this version at once.
     * 
     */
    public Boolean threadsafe() {
        return this.threadsafe;
    }
    /**
     * @return Serving URL for this version. Example: &#34;https://myversion-dot-myservice-dot-myapp.appspot.com&#34;
     * 
     */
    public String versionUrl() {
        return this.versionUrl;
    }
    /**
     * @return Whether to deploy this version in a container on a virtual machine.
     * 
     */
    public Boolean vm() {
        return this.vm;
    }
    /**
     * @return Enables VPC connectivity for standard apps.
     * 
     */
    public VpcAccessConnectorResponse vpcAccessConnector() {
        return this.vpcAccessConnector;
    }
    /**
     * @return The Google Compute Engine zones that are supported by this version in the App Engine flexible environment. Deprecated.
     * 
     * @deprecated
     * The Google Compute Engine zones that are supported by this version in the App Engine flexible environment. Deprecated.
     * 
     */
    @Deprecated /* The Google Compute Engine zones that are supported by this version in the App Engine flexible environment. Deprecated. */
    public List<String> zones() {
        return this.zones;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVersionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private ApiConfigHandlerResponse apiConfig;
        private Boolean appEngineApis;
        private AutomaticScalingResponse automaticScaling;
        private BasicScalingResponse basicScaling;
        private Map<String,String> betaSettings;
        private Map<String,String> buildEnvVariables;
        private String createTime;
        private String createdBy;
        private String defaultExpiration;
        private DeploymentResponse deployment;
        private String diskUsageBytes;
        private EndpointsApiServiceResponse endpointsApiService;
        private EntrypointResponse entrypoint;
        private String env;
        private Map<String,String> envVariables;
        private List<ErrorHandlerResponse> errorHandlers;
        private List<UrlMapResponse> handlers;
        private HealthCheckResponse healthCheck;
        private List<String> inboundServices;
        private String instanceClass;
        private List<LibraryResponse> libraries;
        private LivenessCheckResponse livenessCheck;
        private ManualScalingResponse manualScaling;
        private String name;
        private NetworkResponse network;
        private String nobuildFilesRegex;
        private ReadinessCheckResponse readinessCheck;
        private ResourcesResponse resources;
        private String runtime;
        private String runtimeApiVersion;
        private String runtimeChannel;
        private String runtimeMainExecutablePath;
        private String serviceAccount;
        private String servingStatus;
        private Boolean threadsafe;
        private String versionUrl;
        private Boolean vm;
        private VpcAccessConnectorResponse vpcAccessConnector;
        private List<String> zones;
        public Builder() {}
        public Builder(GetVersionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiConfig = defaults.apiConfig;
    	      this.appEngineApis = defaults.appEngineApis;
    	      this.automaticScaling = defaults.automaticScaling;
    	      this.basicScaling = defaults.basicScaling;
    	      this.betaSettings = defaults.betaSettings;
    	      this.buildEnvVariables = defaults.buildEnvVariables;
    	      this.createTime = defaults.createTime;
    	      this.createdBy = defaults.createdBy;
    	      this.defaultExpiration = defaults.defaultExpiration;
    	      this.deployment = defaults.deployment;
    	      this.diskUsageBytes = defaults.diskUsageBytes;
    	      this.endpointsApiService = defaults.endpointsApiService;
    	      this.entrypoint = defaults.entrypoint;
    	      this.env = defaults.env;
    	      this.envVariables = defaults.envVariables;
    	      this.errorHandlers = defaults.errorHandlers;
    	      this.handlers = defaults.handlers;
    	      this.healthCheck = defaults.healthCheck;
    	      this.inboundServices = defaults.inboundServices;
    	      this.instanceClass = defaults.instanceClass;
    	      this.libraries = defaults.libraries;
    	      this.livenessCheck = defaults.livenessCheck;
    	      this.manualScaling = defaults.manualScaling;
    	      this.name = defaults.name;
    	      this.network = defaults.network;
    	      this.nobuildFilesRegex = defaults.nobuildFilesRegex;
    	      this.readinessCheck = defaults.readinessCheck;
    	      this.resources = defaults.resources;
    	      this.runtime = defaults.runtime;
    	      this.runtimeApiVersion = defaults.runtimeApiVersion;
    	      this.runtimeChannel = defaults.runtimeChannel;
    	      this.runtimeMainExecutablePath = defaults.runtimeMainExecutablePath;
    	      this.serviceAccount = defaults.serviceAccount;
    	      this.servingStatus = defaults.servingStatus;
    	      this.threadsafe = defaults.threadsafe;
    	      this.versionUrl = defaults.versionUrl;
    	      this.vm = defaults.vm;
    	      this.vpcAccessConnector = defaults.vpcAccessConnector;
    	      this.zones = defaults.zones;
        }

        @CustomType.Setter
        public Builder apiConfig(ApiConfigHandlerResponse apiConfig) {
            this.apiConfig = Objects.requireNonNull(apiConfig);
            return this;
        }
        @CustomType.Setter
        public Builder appEngineApis(Boolean appEngineApis) {
            this.appEngineApis = Objects.requireNonNull(appEngineApis);
            return this;
        }
        @CustomType.Setter
        public Builder automaticScaling(AutomaticScalingResponse automaticScaling) {
            this.automaticScaling = Objects.requireNonNull(automaticScaling);
            return this;
        }
        @CustomType.Setter
        public Builder basicScaling(BasicScalingResponse basicScaling) {
            this.basicScaling = Objects.requireNonNull(basicScaling);
            return this;
        }
        @CustomType.Setter
        public Builder betaSettings(Map<String,String> betaSettings) {
            this.betaSettings = Objects.requireNonNull(betaSettings);
            return this;
        }
        @CustomType.Setter
        public Builder buildEnvVariables(Map<String,String> buildEnvVariables) {
            this.buildEnvVariables = Objects.requireNonNull(buildEnvVariables);
            return this;
        }
        @CustomType.Setter
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        @CustomType.Setter
        public Builder createdBy(String createdBy) {
            this.createdBy = Objects.requireNonNull(createdBy);
            return this;
        }
        @CustomType.Setter
        public Builder defaultExpiration(String defaultExpiration) {
            this.defaultExpiration = Objects.requireNonNull(defaultExpiration);
            return this;
        }
        @CustomType.Setter
        public Builder deployment(DeploymentResponse deployment) {
            this.deployment = Objects.requireNonNull(deployment);
            return this;
        }
        @CustomType.Setter
        public Builder diskUsageBytes(String diskUsageBytes) {
            this.diskUsageBytes = Objects.requireNonNull(diskUsageBytes);
            return this;
        }
        @CustomType.Setter
        public Builder endpointsApiService(EndpointsApiServiceResponse endpointsApiService) {
            this.endpointsApiService = Objects.requireNonNull(endpointsApiService);
            return this;
        }
        @CustomType.Setter
        public Builder entrypoint(EntrypointResponse entrypoint) {
            this.entrypoint = Objects.requireNonNull(entrypoint);
            return this;
        }
        @CustomType.Setter
        public Builder env(String env) {
            this.env = Objects.requireNonNull(env);
            return this;
        }
        @CustomType.Setter
        public Builder envVariables(Map<String,String> envVariables) {
            this.envVariables = Objects.requireNonNull(envVariables);
            return this;
        }
        @CustomType.Setter
        public Builder errorHandlers(List<ErrorHandlerResponse> errorHandlers) {
            this.errorHandlers = Objects.requireNonNull(errorHandlers);
            return this;
        }
        public Builder errorHandlers(ErrorHandlerResponse... errorHandlers) {
            return errorHandlers(List.of(errorHandlers));
        }
        @CustomType.Setter
        public Builder handlers(List<UrlMapResponse> handlers) {
            this.handlers = Objects.requireNonNull(handlers);
            return this;
        }
        public Builder handlers(UrlMapResponse... handlers) {
            return handlers(List.of(handlers));
        }
        @CustomType.Setter
        public Builder healthCheck(HealthCheckResponse healthCheck) {
            this.healthCheck = Objects.requireNonNull(healthCheck);
            return this;
        }
        @CustomType.Setter
        public Builder inboundServices(List<String> inboundServices) {
            this.inboundServices = Objects.requireNonNull(inboundServices);
            return this;
        }
        public Builder inboundServices(String... inboundServices) {
            return inboundServices(List.of(inboundServices));
        }
        @CustomType.Setter
        public Builder instanceClass(String instanceClass) {
            this.instanceClass = Objects.requireNonNull(instanceClass);
            return this;
        }
        @CustomType.Setter
        public Builder libraries(List<LibraryResponse> libraries) {
            this.libraries = Objects.requireNonNull(libraries);
            return this;
        }
        public Builder libraries(LibraryResponse... libraries) {
            return libraries(List.of(libraries));
        }
        @CustomType.Setter
        public Builder livenessCheck(LivenessCheckResponse livenessCheck) {
            this.livenessCheck = Objects.requireNonNull(livenessCheck);
            return this;
        }
        @CustomType.Setter
        public Builder manualScaling(ManualScalingResponse manualScaling) {
            this.manualScaling = Objects.requireNonNull(manualScaling);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder network(NetworkResponse network) {
            this.network = Objects.requireNonNull(network);
            return this;
        }
        @CustomType.Setter
        public Builder nobuildFilesRegex(String nobuildFilesRegex) {
            this.nobuildFilesRegex = Objects.requireNonNull(nobuildFilesRegex);
            return this;
        }
        @CustomType.Setter
        public Builder readinessCheck(ReadinessCheckResponse readinessCheck) {
            this.readinessCheck = Objects.requireNonNull(readinessCheck);
            return this;
        }
        @CustomType.Setter
        public Builder resources(ResourcesResponse resources) {
            this.resources = Objects.requireNonNull(resources);
            return this;
        }
        @CustomType.Setter
        public Builder runtime(String runtime) {
            this.runtime = Objects.requireNonNull(runtime);
            return this;
        }
        @CustomType.Setter
        public Builder runtimeApiVersion(String runtimeApiVersion) {
            this.runtimeApiVersion = Objects.requireNonNull(runtimeApiVersion);
            return this;
        }
        @CustomType.Setter
        public Builder runtimeChannel(String runtimeChannel) {
            this.runtimeChannel = Objects.requireNonNull(runtimeChannel);
            return this;
        }
        @CustomType.Setter
        public Builder runtimeMainExecutablePath(String runtimeMainExecutablePath) {
            this.runtimeMainExecutablePath = Objects.requireNonNull(runtimeMainExecutablePath);
            return this;
        }
        @CustomType.Setter
        public Builder serviceAccount(String serviceAccount) {
            this.serviceAccount = Objects.requireNonNull(serviceAccount);
            return this;
        }
        @CustomType.Setter
        public Builder servingStatus(String servingStatus) {
            this.servingStatus = Objects.requireNonNull(servingStatus);
            return this;
        }
        @CustomType.Setter
        public Builder threadsafe(Boolean threadsafe) {
            this.threadsafe = Objects.requireNonNull(threadsafe);
            return this;
        }
        @CustomType.Setter
        public Builder versionUrl(String versionUrl) {
            this.versionUrl = Objects.requireNonNull(versionUrl);
            return this;
        }
        @CustomType.Setter
        public Builder vm(Boolean vm) {
            this.vm = Objects.requireNonNull(vm);
            return this;
        }
        @CustomType.Setter
        public Builder vpcAccessConnector(VpcAccessConnectorResponse vpcAccessConnector) {
            this.vpcAccessConnector = Objects.requireNonNull(vpcAccessConnector);
            return this;
        }
        @CustomType.Setter
        public Builder zones(List<String> zones) {
            this.zones = Objects.requireNonNull(zones);
            return this;
        }
        public Builder zones(String... zones) {
            return zones(List.of(zones));
        }
        public GetVersionResult build() {
            final var o = new GetVersionResult();
            o.apiConfig = apiConfig;
            o.appEngineApis = appEngineApis;
            o.automaticScaling = automaticScaling;
            o.basicScaling = basicScaling;
            o.betaSettings = betaSettings;
            o.buildEnvVariables = buildEnvVariables;
            o.createTime = createTime;
            o.createdBy = createdBy;
            o.defaultExpiration = defaultExpiration;
            o.deployment = deployment;
            o.diskUsageBytes = diskUsageBytes;
            o.endpointsApiService = endpointsApiService;
            o.entrypoint = entrypoint;
            o.env = env;
            o.envVariables = envVariables;
            o.errorHandlers = errorHandlers;
            o.handlers = handlers;
            o.healthCheck = healthCheck;
            o.inboundServices = inboundServices;
            o.instanceClass = instanceClass;
            o.libraries = libraries;
            o.livenessCheck = livenessCheck;
            o.manualScaling = manualScaling;
            o.name = name;
            o.network = network;
            o.nobuildFilesRegex = nobuildFilesRegex;
            o.readinessCheck = readinessCheck;
            o.resources = resources;
            o.runtime = runtime;
            o.runtimeApiVersion = runtimeApiVersion;
            o.runtimeChannel = runtimeChannel;
            o.runtimeMainExecutablePath = runtimeMainExecutablePath;
            o.serviceAccount = serviceAccount;
            o.servingStatus = servingStatus;
            o.threadsafe = threadsafe;
            o.versionUrl = versionUrl;
            o.vm = vm;
            o.vpcAccessConnector = vpcAccessConnector;
            o.zones = zones;
            return o;
        }
    }
}
