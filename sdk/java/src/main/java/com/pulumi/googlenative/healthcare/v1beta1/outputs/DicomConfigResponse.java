// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.healthcare.v1beta1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.healthcare.v1beta1.outputs.TagFilterListResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class DicomConfigResponse {
    /**
     * @return Tag filtering profile that determines which tags to keep/remove.
     * 
     */
    private String filterProfile;
    /**
     * @return List of tags to keep. Remove all other tags.
     * 
     */
    private TagFilterListResponse keepList;
    /**
     * @return List of tags to remove. Keep all other tags.
     * 
     */
    private TagFilterListResponse removeList;
    /**
     * @return If true, skip replacing StudyInstanceUID, SeriesInstanceUID, SOPInstanceUID, and MediaStorageSOPInstanceUID and leave them untouched. The Cloud Healthcare API regenerates these UIDs by default based on the DICOM Standard&#39;s reasoning: &#34;Whilst these UIDs cannot be mapped directly to an individual out of context, given access to the original images, or to a database of the original images containing the UIDs, it would be possible to recover the individual&#39;s identity.&#34; http://dicom.nema.org/medical/dicom/current/output/chtml/part15/sect_E.3.9.html
     * 
     */
    private Boolean skipIdRedaction;

    private DicomConfigResponse() {}
    /**
     * @return Tag filtering profile that determines which tags to keep/remove.
     * 
     */
    public String filterProfile() {
        return this.filterProfile;
    }
    /**
     * @return List of tags to keep. Remove all other tags.
     * 
     */
    public TagFilterListResponse keepList() {
        return this.keepList;
    }
    /**
     * @return List of tags to remove. Keep all other tags.
     * 
     */
    public TagFilterListResponse removeList() {
        return this.removeList;
    }
    /**
     * @return If true, skip replacing StudyInstanceUID, SeriesInstanceUID, SOPInstanceUID, and MediaStorageSOPInstanceUID and leave them untouched. The Cloud Healthcare API regenerates these UIDs by default based on the DICOM Standard&#39;s reasoning: &#34;Whilst these UIDs cannot be mapped directly to an individual out of context, given access to the original images, or to a database of the original images containing the UIDs, it would be possible to recover the individual&#39;s identity.&#34; http://dicom.nema.org/medical/dicom/current/output/chtml/part15/sect_E.3.9.html
     * 
     */
    public Boolean skipIdRedaction() {
        return this.skipIdRedaction;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DicomConfigResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String filterProfile;
        private TagFilterListResponse keepList;
        private TagFilterListResponse removeList;
        private Boolean skipIdRedaction;
        public Builder() {}
        public Builder(DicomConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filterProfile = defaults.filterProfile;
    	      this.keepList = defaults.keepList;
    	      this.removeList = defaults.removeList;
    	      this.skipIdRedaction = defaults.skipIdRedaction;
        }

        @CustomType.Setter
        public Builder filterProfile(String filterProfile) {
            this.filterProfile = Objects.requireNonNull(filterProfile);
            return this;
        }
        @CustomType.Setter
        public Builder keepList(TagFilterListResponse keepList) {
            this.keepList = Objects.requireNonNull(keepList);
            return this;
        }
        @CustomType.Setter
        public Builder removeList(TagFilterListResponse removeList) {
            this.removeList = Objects.requireNonNull(removeList);
            return this;
        }
        @CustomType.Setter
        public Builder skipIdRedaction(Boolean skipIdRedaction) {
            this.skipIdRedaction = Objects.requireNonNull(skipIdRedaction);
            return this;
        }
        public DicomConfigResponse build() {
            final var o = new DicomConfigResponse();
            o.filterProfile = filterProfile;
            o.keepList = keepList;
            o.removeList = removeList;
            o.skipIdRedaction = skipIdRedaction;
            return o;
        }
    }
}
