// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudfunctions.v2beta.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class EventFilterResponse {
    /**
     * @return The name of a CloudEvents attribute.
     * 
     */
    private String attribute;
    /**
     * @return Optional. The operator used for matching the events with the value of the filter. If not specified, only events that have an exact key-value pair specified in the filter are matched. The only allowed value is `match-path-pattern`.
     * 
     */
    private String operator;
    /**
     * @return The value for the attribute.
     * 
     */
    private String value;

    private EventFilterResponse() {}
    /**
     * @return The name of a CloudEvents attribute.
     * 
     */
    public String attribute() {
        return this.attribute;
    }
    /**
     * @return Optional. The operator used for matching the events with the value of the filter. If not specified, only events that have an exact key-value pair specified in the filter are matched. The only allowed value is `match-path-pattern`.
     * 
     */
    public String operator() {
        return this.operator;
    }
    /**
     * @return The value for the attribute.
     * 
     */
    public String value() {
        return this.value;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EventFilterResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String attribute;
        private String operator;
        private String value;
        public Builder() {}
        public Builder(EventFilterResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attribute = defaults.attribute;
    	      this.operator = defaults.operator;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder attribute(String attribute) {
            this.attribute = Objects.requireNonNull(attribute);
            return this;
        }
        @CustomType.Setter
        public Builder operator(String operator) {
            this.operator = Objects.requireNonNull(operator);
            return this;
        }
        @CustomType.Setter
        public Builder value(String value) {
            this.value = Objects.requireNonNull(value);
            return this;
        }
        public EventFilterResponse build() {
            final var o = new EventFilterResponse();
            o.attribute = attribute;
            o.operator = operator;
            o.value = value;
            return o;
        }
    }
}
