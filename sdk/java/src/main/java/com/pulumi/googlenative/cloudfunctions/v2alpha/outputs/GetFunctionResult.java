// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudfunctions.v2alpha.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.cloudfunctions.v2alpha.outputs.BuildConfigResponse;
import com.pulumi.googlenative.cloudfunctions.v2alpha.outputs.EventTriggerResponse;
import com.pulumi.googlenative.cloudfunctions.v2alpha.outputs.GoogleCloudFunctionsV2alphaStateMessageResponse;
import com.pulumi.googlenative.cloudfunctions.v2alpha.outputs.ServiceConfigResponse;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetFunctionResult {
    /**
     * @return Describes the Build step of the function that builds a container from the given source.
     * 
     */
    private BuildConfigResponse buildConfig;
    /**
     * @return User-provided description of a function.
     * 
     */
    private String description;
    /**
     * @return Describe whether the function is gen1 or gen2.
     * 
     */
    private String environment;
    /**
     * @return An Eventarc trigger managed by Google Cloud Functions that fires events in response to a condition in another service.
     * 
     */
    private EventTriggerResponse eventTrigger;
    /**
     * @return Labels associated with this Cloud Function.
     * 
     */
    private Map<String,String> labels;
    /**
     * @return A user-defined name of the function. Function names must be unique globally and match pattern `projects/*{@literal /}locations/*{@literal /}functions/*`
     * 
     */
    private String name;
    /**
     * @return Describes the Service being deployed. Currently deploys services to Cloud Run (fully managed).
     * 
     */
    private ServiceConfigResponse serviceConfig;
    /**
     * @return State of the function.
     * 
     */
    private String state;
    /**
     * @return State Messages for this Cloud Function.
     * 
     */
    private List<GoogleCloudFunctionsV2alphaStateMessageResponse> stateMessages;
    /**
     * @return The last update timestamp of a Cloud Function.
     * 
     */
    private String updateTime;

    private GetFunctionResult() {}
    /**
     * @return Describes the Build step of the function that builds a container from the given source.
     * 
     */
    public BuildConfigResponse buildConfig() {
        return this.buildConfig;
    }
    /**
     * @return User-provided description of a function.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Describe whether the function is gen1 or gen2.
     * 
     */
    public String environment() {
        return this.environment;
    }
    /**
     * @return An Eventarc trigger managed by Google Cloud Functions that fires events in response to a condition in another service.
     * 
     */
    public EventTriggerResponse eventTrigger() {
        return this.eventTrigger;
    }
    /**
     * @return Labels associated with this Cloud Function.
     * 
     */
    public Map<String,String> labels() {
        return this.labels;
    }
    /**
     * @return A user-defined name of the function. Function names must be unique globally and match pattern `projects/*{@literal /}locations/*{@literal /}functions/*`
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Describes the Service being deployed. Currently deploys services to Cloud Run (fully managed).
     * 
     */
    public ServiceConfigResponse serviceConfig() {
        return this.serviceConfig;
    }
    /**
     * @return State of the function.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return State Messages for this Cloud Function.
     * 
     */
    public List<GoogleCloudFunctionsV2alphaStateMessageResponse> stateMessages() {
        return this.stateMessages;
    }
    /**
     * @return The last update timestamp of a Cloud Function.
     * 
     */
    public String updateTime() {
        return this.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFunctionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private BuildConfigResponse buildConfig;
        private String description;
        private String environment;
        private EventTriggerResponse eventTrigger;
        private Map<String,String> labels;
        private String name;
        private ServiceConfigResponse serviceConfig;
        private String state;
        private List<GoogleCloudFunctionsV2alphaStateMessageResponse> stateMessages;
        private String updateTime;
        public Builder() {}
        public Builder(GetFunctionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.buildConfig = defaults.buildConfig;
    	      this.description = defaults.description;
    	      this.environment = defaults.environment;
    	      this.eventTrigger = defaults.eventTrigger;
    	      this.labels = defaults.labels;
    	      this.name = defaults.name;
    	      this.serviceConfig = defaults.serviceConfig;
    	      this.state = defaults.state;
    	      this.stateMessages = defaults.stateMessages;
    	      this.updateTime = defaults.updateTime;
        }

        @CustomType.Setter
        public Builder buildConfig(BuildConfigResponse buildConfig) {
            this.buildConfig = Objects.requireNonNull(buildConfig);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder environment(String environment) {
            this.environment = Objects.requireNonNull(environment);
            return this;
        }
        @CustomType.Setter
        public Builder eventTrigger(EventTriggerResponse eventTrigger) {
            this.eventTrigger = Objects.requireNonNull(eventTrigger);
            return this;
        }
        @CustomType.Setter
        public Builder labels(Map<String,String> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder serviceConfig(ServiceConfigResponse serviceConfig) {
            this.serviceConfig = Objects.requireNonNull(serviceConfig);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder stateMessages(List<GoogleCloudFunctionsV2alphaStateMessageResponse> stateMessages) {
            this.stateMessages = Objects.requireNonNull(stateMessages);
            return this;
        }
        public Builder stateMessages(GoogleCloudFunctionsV2alphaStateMessageResponse... stateMessages) {
            return stateMessages(List.of(stateMessages));
        }
        @CustomType.Setter
        public Builder updateTime(String updateTime) {
            this.updateTime = Objects.requireNonNull(updateTime);
            return this;
        }
        public GetFunctionResult build() {
            final var o = new GetFunctionResult();
            o.buildConfig = buildConfig;
            o.description = description;
            o.environment = environment;
            o.eventTrigger = eventTrigger;
            o.labels = labels;
            o.name = name;
            o.serviceConfig = serviceConfig;
            o.state = state;
            o.stateMessages = stateMessages;
            o.updateTime = updateTime;
            return o;
        }
    }
}
