// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dlp.v2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.dlp.v2.outputs.GooglePrivacyDlpV2DictionaryResponse;
import com.pulumi.googlenative.dlp.v2.outputs.GooglePrivacyDlpV2ExcludeInfoTypesResponse;
import com.pulumi.googlenative.dlp.v2.outputs.GooglePrivacyDlpV2RegexResponse;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GooglePrivacyDlpV2ExclusionRuleResponse {
    /**
     * @return Dictionary which defines the rule.
     * 
     */
    private GooglePrivacyDlpV2DictionaryResponse dictionary;
    /**
     * @return Set of infoTypes for which findings would affect this rule.
     * 
     */
    private GooglePrivacyDlpV2ExcludeInfoTypesResponse excludeInfoTypes;
    /**
     * @return How the rule is applied, see MatchingType documentation for details.
     * 
     */
    private String matchingType;
    /**
     * @return Regular expression which defines the rule.
     * 
     */
    private GooglePrivacyDlpV2RegexResponse regex;

    private GooglePrivacyDlpV2ExclusionRuleResponse() {}
    /**
     * @return Dictionary which defines the rule.
     * 
     */
    public GooglePrivacyDlpV2DictionaryResponse dictionary() {
        return this.dictionary;
    }
    /**
     * @return Set of infoTypes for which findings would affect this rule.
     * 
     */
    public GooglePrivacyDlpV2ExcludeInfoTypesResponse excludeInfoTypes() {
        return this.excludeInfoTypes;
    }
    /**
     * @return How the rule is applied, see MatchingType documentation for details.
     * 
     */
    public String matchingType() {
        return this.matchingType;
    }
    /**
     * @return Regular expression which defines the rule.
     * 
     */
    public GooglePrivacyDlpV2RegexResponse regex() {
        return this.regex;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GooglePrivacyDlpV2ExclusionRuleResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GooglePrivacyDlpV2DictionaryResponse dictionary;
        private GooglePrivacyDlpV2ExcludeInfoTypesResponse excludeInfoTypes;
        private String matchingType;
        private GooglePrivacyDlpV2RegexResponse regex;
        public Builder() {}
        public Builder(GooglePrivacyDlpV2ExclusionRuleResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dictionary = defaults.dictionary;
    	      this.excludeInfoTypes = defaults.excludeInfoTypes;
    	      this.matchingType = defaults.matchingType;
    	      this.regex = defaults.regex;
        }

        @CustomType.Setter
        public Builder dictionary(GooglePrivacyDlpV2DictionaryResponse dictionary) {
            this.dictionary = Objects.requireNonNull(dictionary);
            return this;
        }
        @CustomType.Setter
        public Builder excludeInfoTypes(GooglePrivacyDlpV2ExcludeInfoTypesResponse excludeInfoTypes) {
            this.excludeInfoTypes = Objects.requireNonNull(excludeInfoTypes);
            return this;
        }
        @CustomType.Setter
        public Builder matchingType(String matchingType) {
            this.matchingType = Objects.requireNonNull(matchingType);
            return this;
        }
        @CustomType.Setter
        public Builder regex(GooglePrivacyDlpV2RegexResponse regex) {
            this.regex = Objects.requireNonNull(regex);
            return this;
        }
        public GooglePrivacyDlpV2ExclusionRuleResponse build() {
            final var o = new GooglePrivacyDlpV2ExclusionRuleResponse();
            o.dictionary = dictionary;
            o.excludeInfoTypes = excludeInfoTypes;
            o.matchingType = matchingType;
            o.regex = regex;
            return o;
        }
    }
}
