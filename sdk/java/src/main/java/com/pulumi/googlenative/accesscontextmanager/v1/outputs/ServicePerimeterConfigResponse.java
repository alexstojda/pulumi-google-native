// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.accesscontextmanager.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.accesscontextmanager.v1.outputs.EgressPolicyResponse;
import com.pulumi.googlenative.accesscontextmanager.v1.outputs.IngressPolicyResponse;
import com.pulumi.googlenative.accesscontextmanager.v1.outputs.VpcAccessibleServicesResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class ServicePerimeterConfigResponse {
    /**
     * @return A list of `AccessLevel` resource names that allow resources within the `ServicePerimeter` to be accessed from the internet. `AccessLevels` listed must be in the same policy as this `ServicePerimeter`. Referencing a nonexistent `AccessLevel` is a syntax error. If no `AccessLevel` names are listed, resources within the perimeter can only be accessed via Google Cloud calls with request origins within the perimeter. Example: `&#34;accessPolicies/MY_POLICY/accessLevels/MY_LEVEL&#34;`. For Service Perimeter Bridge, must be empty.
     * 
     */
    private List<String> accessLevels;
    /**
     * @return List of EgressPolicies to apply to the perimeter. A perimeter may have multiple EgressPolicies, each of which is evaluated separately. Access is granted if any EgressPolicy grants it. Must be empty for a perimeter bridge.
     * 
     */
    private List<EgressPolicyResponse> egressPolicies;
    /**
     * @return List of IngressPolicies to apply to the perimeter. A perimeter may have multiple IngressPolicies, each of which is evaluated separately. Access is granted if any Ingress Policy grants it. Must be empty for a perimeter bridge.
     * 
     */
    private List<IngressPolicyResponse> ingressPolicies;
    /**
     * @return A list of Google Cloud resources that are inside of the service perimeter. Currently only projects are allowed. Format: `projects/{project_number}`
     * 
     */
    private List<String> resources;
    /**
     * @return Google Cloud services that are subject to the Service Perimeter restrictions. For example, if `storage.googleapis.com` is specified, access to the storage buckets inside the perimeter must meet the perimeter&#39;s access restrictions.
     * 
     */
    private List<String> restrictedServices;
    /**
     * @return Configuration for APIs allowed within Perimeter.
     * 
     */
    private VpcAccessibleServicesResponse vpcAccessibleServices;

    private ServicePerimeterConfigResponse() {}
    /**
     * @return A list of `AccessLevel` resource names that allow resources within the `ServicePerimeter` to be accessed from the internet. `AccessLevels` listed must be in the same policy as this `ServicePerimeter`. Referencing a nonexistent `AccessLevel` is a syntax error. If no `AccessLevel` names are listed, resources within the perimeter can only be accessed via Google Cloud calls with request origins within the perimeter. Example: `&#34;accessPolicies/MY_POLICY/accessLevels/MY_LEVEL&#34;`. For Service Perimeter Bridge, must be empty.
     * 
     */
    public List<String> accessLevels() {
        return this.accessLevels;
    }
    /**
     * @return List of EgressPolicies to apply to the perimeter. A perimeter may have multiple EgressPolicies, each of which is evaluated separately. Access is granted if any EgressPolicy grants it. Must be empty for a perimeter bridge.
     * 
     */
    public List<EgressPolicyResponse> egressPolicies() {
        return this.egressPolicies;
    }
    /**
     * @return List of IngressPolicies to apply to the perimeter. A perimeter may have multiple IngressPolicies, each of which is evaluated separately. Access is granted if any Ingress Policy grants it. Must be empty for a perimeter bridge.
     * 
     */
    public List<IngressPolicyResponse> ingressPolicies() {
        return this.ingressPolicies;
    }
    /**
     * @return A list of Google Cloud resources that are inside of the service perimeter. Currently only projects are allowed. Format: `projects/{project_number}`
     * 
     */
    public List<String> resources() {
        return this.resources;
    }
    /**
     * @return Google Cloud services that are subject to the Service Perimeter restrictions. For example, if `storage.googleapis.com` is specified, access to the storage buckets inside the perimeter must meet the perimeter&#39;s access restrictions.
     * 
     */
    public List<String> restrictedServices() {
        return this.restrictedServices;
    }
    /**
     * @return Configuration for APIs allowed within Perimeter.
     * 
     */
    public VpcAccessibleServicesResponse vpcAccessibleServices() {
        return this.vpcAccessibleServices;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServicePerimeterConfigResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> accessLevels;
        private List<EgressPolicyResponse> egressPolicies;
        private List<IngressPolicyResponse> ingressPolicies;
        private List<String> resources;
        private List<String> restrictedServices;
        private VpcAccessibleServicesResponse vpcAccessibleServices;
        public Builder() {}
        public Builder(ServicePerimeterConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessLevels = defaults.accessLevels;
    	      this.egressPolicies = defaults.egressPolicies;
    	      this.ingressPolicies = defaults.ingressPolicies;
    	      this.resources = defaults.resources;
    	      this.restrictedServices = defaults.restrictedServices;
    	      this.vpcAccessibleServices = defaults.vpcAccessibleServices;
        }

        @CustomType.Setter
        public Builder accessLevels(List<String> accessLevels) {
            this.accessLevels = Objects.requireNonNull(accessLevels);
            return this;
        }
        public Builder accessLevels(String... accessLevels) {
            return accessLevels(List.of(accessLevels));
        }
        @CustomType.Setter
        public Builder egressPolicies(List<EgressPolicyResponse> egressPolicies) {
            this.egressPolicies = Objects.requireNonNull(egressPolicies);
            return this;
        }
        public Builder egressPolicies(EgressPolicyResponse... egressPolicies) {
            return egressPolicies(List.of(egressPolicies));
        }
        @CustomType.Setter
        public Builder ingressPolicies(List<IngressPolicyResponse> ingressPolicies) {
            this.ingressPolicies = Objects.requireNonNull(ingressPolicies);
            return this;
        }
        public Builder ingressPolicies(IngressPolicyResponse... ingressPolicies) {
            return ingressPolicies(List.of(ingressPolicies));
        }
        @CustomType.Setter
        public Builder resources(List<String> resources) {
            this.resources = Objects.requireNonNull(resources);
            return this;
        }
        public Builder resources(String... resources) {
            return resources(List.of(resources));
        }
        @CustomType.Setter
        public Builder restrictedServices(List<String> restrictedServices) {
            this.restrictedServices = Objects.requireNonNull(restrictedServices);
            return this;
        }
        public Builder restrictedServices(String... restrictedServices) {
            return restrictedServices(List.of(restrictedServices));
        }
        @CustomType.Setter
        public Builder vpcAccessibleServices(VpcAccessibleServicesResponse vpcAccessibleServices) {
            this.vpcAccessibleServices = Objects.requireNonNull(vpcAccessibleServices);
            return this;
        }
        public ServicePerimeterConfigResponse build() {
            final var o = new ServicePerimeterConfigResponse();
            o.accessLevels = accessLevels;
            o.egressPolicies = egressPolicies;
            o.ingressPolicies = ingressPolicies;
            o.resources = resources;
            o.restrictedServices = restrictedServices;
            o.vpcAccessibleServices = vpcAccessibleServices;
            return o;
        }
    }
}
