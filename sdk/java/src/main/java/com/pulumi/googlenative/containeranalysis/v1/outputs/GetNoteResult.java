// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.containeranalysis.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.containeranalysis.v1.outputs.AttestationNoteResponse;
import com.pulumi.googlenative.containeranalysis.v1.outputs.BuildNoteResponse;
import com.pulumi.googlenative.containeranalysis.v1.outputs.ComplianceNoteResponse;
import com.pulumi.googlenative.containeranalysis.v1.outputs.DSSEAttestationNoteResponse;
import com.pulumi.googlenative.containeranalysis.v1.outputs.DeploymentNoteResponse;
import com.pulumi.googlenative.containeranalysis.v1.outputs.DiscoveryNoteResponse;
import com.pulumi.googlenative.containeranalysis.v1.outputs.ImageNoteResponse;
import com.pulumi.googlenative.containeranalysis.v1.outputs.PackageNoteResponse;
import com.pulumi.googlenative.containeranalysis.v1.outputs.RelatedUrlResponse;
import com.pulumi.googlenative.containeranalysis.v1.outputs.UpgradeNoteResponse;
import com.pulumi.googlenative.containeranalysis.v1.outputs.VulnerabilityNoteResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetNoteResult {
    /**
     * @return A note describing an attestation role.
     * 
     */
    private AttestationNoteResponse attestation;
    /**
     * @return A note describing build provenance for a verifiable build.
     * 
     */
    private BuildNoteResponse build;
    /**
     * @return A note describing a compliance check.
     * 
     */
    private ComplianceNoteResponse compliance;
    /**
     * @return The time this note was created. This field can be used as a filter in list requests.
     * 
     */
    private String createTime;
    /**
     * @return A note describing something that can be deployed.
     * 
     */
    private DeploymentNoteResponse deployment;
    /**
     * @return A note describing the initial analysis of a resource.
     * 
     */
    private DiscoveryNoteResponse discovery;
    /**
     * @return A note describing a dsse attestation note.
     * 
     */
    private DSSEAttestationNoteResponse dsseAttestation;
    /**
     * @return Time of expiration for this note. Empty if note does not expire.
     * 
     */
    private String expirationTime;
    /**
     * @return A note describing a base image.
     * 
     */
    private ImageNoteResponse image;
    /**
     * @return The type of analysis. This field can be used as a filter in list requests.
     * 
     */
    private String kind;
    /**
     * @return A detailed description of this note.
     * 
     */
    private String longDescription;
    /**
     * @return The name of the note in the form of `projects/[PROVIDER_ID]/notes/[NOTE_ID]`.
     * 
     */
    private String name;
    /**
     * @return A note describing a package hosted by various package managers.
     * 
     */
    private PackageNoteResponse package_;
    /**
     * @return Other notes related to this note.
     * 
     */
    private List<String> relatedNoteNames;
    /**
     * @return URLs associated with this note.
     * 
     */
    private List<RelatedUrlResponse> relatedUrl;
    /**
     * @return A one sentence description of this note.
     * 
     */
    private String shortDescription;
    /**
     * @return The time this note was last updated. This field can be used as a filter in list requests.
     * 
     */
    private String updateTime;
    /**
     * @return A note describing available package upgrades.
     * 
     */
    private UpgradeNoteResponse upgrade;
    /**
     * @return A note describing a package vulnerability.
     * 
     */
    private VulnerabilityNoteResponse vulnerability;

    private GetNoteResult() {}
    /**
     * @return A note describing an attestation role.
     * 
     */
    public AttestationNoteResponse attestation() {
        return this.attestation;
    }
    /**
     * @return A note describing build provenance for a verifiable build.
     * 
     */
    public BuildNoteResponse build() {
        return this.build;
    }
    /**
     * @return A note describing a compliance check.
     * 
     */
    public ComplianceNoteResponse compliance() {
        return this.compliance;
    }
    /**
     * @return The time this note was created. This field can be used as a filter in list requests.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return A note describing something that can be deployed.
     * 
     */
    public DeploymentNoteResponse deployment() {
        return this.deployment;
    }
    /**
     * @return A note describing the initial analysis of a resource.
     * 
     */
    public DiscoveryNoteResponse discovery() {
        return this.discovery;
    }
    /**
     * @return A note describing a dsse attestation note.
     * 
     */
    public DSSEAttestationNoteResponse dsseAttestation() {
        return this.dsseAttestation;
    }
    /**
     * @return Time of expiration for this note. Empty if note does not expire.
     * 
     */
    public String expirationTime() {
        return this.expirationTime;
    }
    /**
     * @return A note describing a base image.
     * 
     */
    public ImageNoteResponse image() {
        return this.image;
    }
    /**
     * @return The type of analysis. This field can be used as a filter in list requests.
     * 
     */
    public String kind() {
        return this.kind;
    }
    /**
     * @return A detailed description of this note.
     * 
     */
    public String longDescription() {
        return this.longDescription;
    }
    /**
     * @return The name of the note in the form of `projects/[PROVIDER_ID]/notes/[NOTE_ID]`.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return A note describing a package hosted by various package managers.
     * 
     */
    public PackageNoteResponse package_() {
        return this.package_;
    }
    /**
     * @return Other notes related to this note.
     * 
     */
    public List<String> relatedNoteNames() {
        return this.relatedNoteNames;
    }
    /**
     * @return URLs associated with this note.
     * 
     */
    public List<RelatedUrlResponse> relatedUrl() {
        return this.relatedUrl;
    }
    /**
     * @return A one sentence description of this note.
     * 
     */
    public String shortDescription() {
        return this.shortDescription;
    }
    /**
     * @return The time this note was last updated. This field can be used as a filter in list requests.
     * 
     */
    public String updateTime() {
        return this.updateTime;
    }
    /**
     * @return A note describing available package upgrades.
     * 
     */
    public UpgradeNoteResponse upgrade() {
        return this.upgrade;
    }
    /**
     * @return A note describing a package vulnerability.
     * 
     */
    public VulnerabilityNoteResponse vulnerability() {
        return this.vulnerability;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNoteResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private AttestationNoteResponse attestation;
        private BuildNoteResponse build;
        private ComplianceNoteResponse compliance;
        private String createTime;
        private DeploymentNoteResponse deployment;
        private DiscoveryNoteResponse discovery;
        private DSSEAttestationNoteResponse dsseAttestation;
        private String expirationTime;
        private ImageNoteResponse image;
        private String kind;
        private String longDescription;
        private String name;
        private PackageNoteResponse package_;
        private List<String> relatedNoteNames;
        private List<RelatedUrlResponse> relatedUrl;
        private String shortDescription;
        private String updateTime;
        private UpgradeNoteResponse upgrade;
        private VulnerabilityNoteResponse vulnerability;
        public Builder() {}
        public Builder(GetNoteResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attestation = defaults.attestation;
    	      this.build = defaults.build;
    	      this.compliance = defaults.compliance;
    	      this.createTime = defaults.createTime;
    	      this.deployment = defaults.deployment;
    	      this.discovery = defaults.discovery;
    	      this.dsseAttestation = defaults.dsseAttestation;
    	      this.expirationTime = defaults.expirationTime;
    	      this.image = defaults.image;
    	      this.kind = defaults.kind;
    	      this.longDescription = defaults.longDescription;
    	      this.name = defaults.name;
    	      this.package_ = defaults.package_;
    	      this.relatedNoteNames = defaults.relatedNoteNames;
    	      this.relatedUrl = defaults.relatedUrl;
    	      this.shortDescription = defaults.shortDescription;
    	      this.updateTime = defaults.updateTime;
    	      this.upgrade = defaults.upgrade;
    	      this.vulnerability = defaults.vulnerability;
        }

        @CustomType.Setter
        public Builder attestation(AttestationNoteResponse attestation) {
            this.attestation = Objects.requireNonNull(attestation);
            return this;
        }
        @CustomType.Setter
        public Builder build(BuildNoteResponse build) {
            this.build = Objects.requireNonNull(build);
            return this;
        }
        @CustomType.Setter
        public Builder compliance(ComplianceNoteResponse compliance) {
            this.compliance = Objects.requireNonNull(compliance);
            return this;
        }
        @CustomType.Setter
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        @CustomType.Setter
        public Builder deployment(DeploymentNoteResponse deployment) {
            this.deployment = Objects.requireNonNull(deployment);
            return this;
        }
        @CustomType.Setter
        public Builder discovery(DiscoveryNoteResponse discovery) {
            this.discovery = Objects.requireNonNull(discovery);
            return this;
        }
        @CustomType.Setter
        public Builder dsseAttestation(DSSEAttestationNoteResponse dsseAttestation) {
            this.dsseAttestation = Objects.requireNonNull(dsseAttestation);
            return this;
        }
        @CustomType.Setter
        public Builder expirationTime(String expirationTime) {
            this.expirationTime = Objects.requireNonNull(expirationTime);
            return this;
        }
        @CustomType.Setter
        public Builder image(ImageNoteResponse image) {
            this.image = Objects.requireNonNull(image);
            return this;
        }
        @CustomType.Setter
        public Builder kind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }
        @CustomType.Setter
        public Builder longDescription(String longDescription) {
            this.longDescription = Objects.requireNonNull(longDescription);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter("package")
        public Builder package_(PackageNoteResponse package_) {
            this.package_ = Objects.requireNonNull(package_);
            return this;
        }
        @CustomType.Setter
        public Builder relatedNoteNames(List<String> relatedNoteNames) {
            this.relatedNoteNames = Objects.requireNonNull(relatedNoteNames);
            return this;
        }
        public Builder relatedNoteNames(String... relatedNoteNames) {
            return relatedNoteNames(List.of(relatedNoteNames));
        }
        @CustomType.Setter
        public Builder relatedUrl(List<RelatedUrlResponse> relatedUrl) {
            this.relatedUrl = Objects.requireNonNull(relatedUrl);
            return this;
        }
        public Builder relatedUrl(RelatedUrlResponse... relatedUrl) {
            return relatedUrl(List.of(relatedUrl));
        }
        @CustomType.Setter
        public Builder shortDescription(String shortDescription) {
            this.shortDescription = Objects.requireNonNull(shortDescription);
            return this;
        }
        @CustomType.Setter
        public Builder updateTime(String updateTime) {
            this.updateTime = Objects.requireNonNull(updateTime);
            return this;
        }
        @CustomType.Setter
        public Builder upgrade(UpgradeNoteResponse upgrade) {
            this.upgrade = Objects.requireNonNull(upgrade);
            return this;
        }
        @CustomType.Setter
        public Builder vulnerability(VulnerabilityNoteResponse vulnerability) {
            this.vulnerability = Objects.requireNonNull(vulnerability);
            return this;
        }
        public GetNoteResult build() {
            final var o = new GetNoteResult();
            o.attestation = attestation;
            o.build = build;
            o.compliance = compliance;
            o.createTime = createTime;
            o.deployment = deployment;
            o.discovery = discovery;
            o.dsseAttestation = dsseAttestation;
            o.expirationTime = expirationTime;
            o.image = image;
            o.kind = kind;
            o.longDescription = longDescription;
            o.name = name;
            o.package_ = package_;
            o.relatedNoteNames = relatedNoteNames;
            o.relatedUrl = relatedUrl;
            o.shortDescription = shortDescription;
            o.updateTime = updateTime;
            o.upgrade = upgrade;
            o.vulnerability = vulnerability;
            return o;
        }
    }
}
