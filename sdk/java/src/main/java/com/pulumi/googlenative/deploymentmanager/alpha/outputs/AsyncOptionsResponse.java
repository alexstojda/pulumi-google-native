// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.deploymentmanager.alpha.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.deploymentmanager.alpha.outputs.PollingOptionsResponse;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class AsyncOptionsResponse {
    /**
     * @return Method regex where this policy will apply.
     * 
     */
    private String methodMatch;
    /**
     * @return Deployment manager will poll instances for this API resource setting a RUNNING state, and blocking until polling conditions tell whether the resource is completed or failed.
     * 
     */
    private PollingOptionsResponse pollingOptions;

    private AsyncOptionsResponse() {}
    /**
     * @return Method regex where this policy will apply.
     * 
     */
    public String methodMatch() {
        return this.methodMatch;
    }
    /**
     * @return Deployment manager will poll instances for this API resource setting a RUNNING state, and blocking until polling conditions tell whether the resource is completed or failed.
     * 
     */
    public PollingOptionsResponse pollingOptions() {
        return this.pollingOptions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AsyncOptionsResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String methodMatch;
        private PollingOptionsResponse pollingOptions;
        public Builder() {}
        public Builder(AsyncOptionsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.methodMatch = defaults.methodMatch;
    	      this.pollingOptions = defaults.pollingOptions;
        }

        @CustomType.Setter
        public Builder methodMatch(String methodMatch) {
            this.methodMatch = Objects.requireNonNull(methodMatch);
            return this;
        }
        @CustomType.Setter
        public Builder pollingOptions(PollingOptionsResponse pollingOptions) {
            this.pollingOptions = Objects.requireNonNull(pollingOptions);
            return this;
        }
        public AsyncOptionsResponse build() {
            final var o = new AsyncOptionsResponse();
            o.methodMatch = methodMatch;
            o.pollingOptions = pollingOptions;
            return o;
        }
    }
}
