// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.datastream.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class OracleProfileResponse {
    /**
     * @return Connection string attributes
     * 
     */
    private Map<String,String> connectionAttributes;
    /**
     * @return Database for the Oracle connection.
     * 
     */
    private String databaseService;
    /**
     * @return Hostname for the Oracle connection.
     * 
     */
    private String hostname;
    /**
     * @return Password for the Oracle connection.
     * 
     */
    private String password;
    /**
     * @return Port for the Oracle connection, default value is 1521.
     * 
     */
    private Integer port;
    /**
     * @return Username for the Oracle connection.
     * 
     */
    private String username;

    private OracleProfileResponse() {}
    /**
     * @return Connection string attributes
     * 
     */
    public Map<String,String> connectionAttributes() {
        return this.connectionAttributes;
    }
    /**
     * @return Database for the Oracle connection.
     * 
     */
    public String databaseService() {
        return this.databaseService;
    }
    /**
     * @return Hostname for the Oracle connection.
     * 
     */
    public String hostname() {
        return this.hostname;
    }
    /**
     * @return Password for the Oracle connection.
     * 
     */
    public String password() {
        return this.password;
    }
    /**
     * @return Port for the Oracle connection, default value is 1521.
     * 
     */
    public Integer port() {
        return this.port;
    }
    /**
     * @return Username for the Oracle connection.
     * 
     */
    public String username() {
        return this.username;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OracleProfileResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Map<String,String> connectionAttributes;
        private String databaseService;
        private String hostname;
        private String password;
        private Integer port;
        private String username;
        public Builder() {}
        public Builder(OracleProfileResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectionAttributes = defaults.connectionAttributes;
    	      this.databaseService = defaults.databaseService;
    	      this.hostname = defaults.hostname;
    	      this.password = defaults.password;
    	      this.port = defaults.port;
    	      this.username = defaults.username;
        }

        @CustomType.Setter
        public Builder connectionAttributes(Map<String,String> connectionAttributes) {
            this.connectionAttributes = Objects.requireNonNull(connectionAttributes);
            return this;
        }
        @CustomType.Setter
        public Builder databaseService(String databaseService) {
            this.databaseService = Objects.requireNonNull(databaseService);
            return this;
        }
        @CustomType.Setter
        public Builder hostname(String hostname) {
            this.hostname = Objects.requireNonNull(hostname);
            return this;
        }
        @CustomType.Setter
        public Builder password(String password) {
            this.password = Objects.requireNonNull(password);
            return this;
        }
        @CustomType.Setter
        public Builder port(Integer port) {
            this.port = Objects.requireNonNull(port);
            return this;
        }
        @CustomType.Setter
        public Builder username(String username) {
            this.username = Objects.requireNonNull(username);
            return this;
        }
        public OracleProfileResponse build() {
            final var o = new OracleProfileResponse();
            o.connectionAttributes = connectionAttributes;
            o.databaseService = databaseService;
            o.hostname = hostname;
            o.password = password;
            o.port = port;
            o.username = username;
            return o;
        }
    }
}
