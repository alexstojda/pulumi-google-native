// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.networkmanagement.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.networkmanagement.v1.outputs.AbortInfoResponse;
import com.pulumi.googlenative.networkmanagement.v1.outputs.CloudSQLInstanceInfoResponse;
import com.pulumi.googlenative.networkmanagement.v1.outputs.DeliverInfoResponse;
import com.pulumi.googlenative.networkmanagement.v1.outputs.DropInfoResponse;
import com.pulumi.googlenative.networkmanagement.v1.outputs.EndpointInfoResponse;
import com.pulumi.googlenative.networkmanagement.v1.outputs.FirewallInfoResponse;
import com.pulumi.googlenative.networkmanagement.v1.outputs.ForwardInfoResponse;
import com.pulumi.googlenative.networkmanagement.v1.outputs.ForwardingRuleInfoResponse;
import com.pulumi.googlenative.networkmanagement.v1.outputs.GKEMasterInfoResponse;
import com.pulumi.googlenative.networkmanagement.v1.outputs.InstanceInfoResponse;
import com.pulumi.googlenative.networkmanagement.v1.outputs.LoadBalancerInfoResponse;
import com.pulumi.googlenative.networkmanagement.v1.outputs.NetworkInfoResponse;
import com.pulumi.googlenative.networkmanagement.v1.outputs.RouteInfoResponse;
import com.pulumi.googlenative.networkmanagement.v1.outputs.VpnGatewayInfoResponse;
import com.pulumi.googlenative.networkmanagement.v1.outputs.VpnTunnelInfoResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class StepResponse {
    /**
     * @return Display information of the final state &#34;abort&#34; and reason.
     * 
     */
    private AbortInfoResponse abort;
    /**
     * @return This is a step that leads to the final state Drop.
     * 
     */
    private Boolean causesDrop;
    /**
     * @return Display information of a Cloud SQL instance.
     * 
     */
    private CloudSQLInstanceInfoResponse cloudSqlInstance;
    /**
     * @return Display information of the final state &#34;deliver&#34; and reason.
     * 
     */
    private DeliverInfoResponse deliver;
    /**
     * @return A description of the step. Usually this is a summary of the state.
     * 
     */
    private String description;
    /**
     * @return Display information of the final state &#34;drop&#34; and reason.
     * 
     */
    private DropInfoResponse drop;
    /**
     * @return Display information of the source and destination under analysis. The endpoint information in an intermediate state may differ with the initial input, as it might be modified by state like NAT, or Connection Proxy.
     * 
     */
    private EndpointInfoResponse endpoint;
    /**
     * @return Display information of a Compute Engine firewall rule.
     * 
     */
    private FirewallInfoResponse firewall;
    /**
     * @return Display information of the final state &#34;forward&#34; and reason.
     * 
     */
    private ForwardInfoResponse forward;
    /**
     * @return Display information of a Compute Engine forwarding rule.
     * 
     */
    private ForwardingRuleInfoResponse forwardingRule;
    /**
     * @return Display information of a Google Kubernetes Engine cluster master.
     * 
     */
    private GKEMasterInfoResponse gkeMaster;
    /**
     * @return Display information of a Compute Engine instance.
     * 
     */
    private InstanceInfoResponse instance;
    /**
     * @return Display information of the load balancers.
     * 
     */
    private LoadBalancerInfoResponse loadBalancer;
    /**
     * @return Display information of a Google Cloud network.
     * 
     */
    private NetworkInfoResponse network;
    /**
     * @return Project ID that contains the configuration this step is validating.
     * 
     */
    private String project;
    /**
     * @return Display information of a Compute Engine route.
     * 
     */
    private RouteInfoResponse route;
    /**
     * @return Each step is in one of the pre-defined states.
     * 
     */
    private String state;
    /**
     * @return Display information of a Compute Engine VPN gateway.
     * 
     */
    private VpnGatewayInfoResponse vpnGateway;
    /**
     * @return Display information of a Compute Engine VPN tunnel.
     * 
     */
    private VpnTunnelInfoResponse vpnTunnel;

    private StepResponse() {}
    /**
     * @return Display information of the final state &#34;abort&#34; and reason.
     * 
     */
    public AbortInfoResponse abort() {
        return this.abort;
    }
    /**
     * @return This is a step that leads to the final state Drop.
     * 
     */
    public Boolean causesDrop() {
        return this.causesDrop;
    }
    /**
     * @return Display information of a Cloud SQL instance.
     * 
     */
    public CloudSQLInstanceInfoResponse cloudSqlInstance() {
        return this.cloudSqlInstance;
    }
    /**
     * @return Display information of the final state &#34;deliver&#34; and reason.
     * 
     */
    public DeliverInfoResponse deliver() {
        return this.deliver;
    }
    /**
     * @return A description of the step. Usually this is a summary of the state.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Display information of the final state &#34;drop&#34; and reason.
     * 
     */
    public DropInfoResponse drop() {
        return this.drop;
    }
    /**
     * @return Display information of the source and destination under analysis. The endpoint information in an intermediate state may differ with the initial input, as it might be modified by state like NAT, or Connection Proxy.
     * 
     */
    public EndpointInfoResponse endpoint() {
        return this.endpoint;
    }
    /**
     * @return Display information of a Compute Engine firewall rule.
     * 
     */
    public FirewallInfoResponse firewall() {
        return this.firewall;
    }
    /**
     * @return Display information of the final state &#34;forward&#34; and reason.
     * 
     */
    public ForwardInfoResponse forward() {
        return this.forward;
    }
    /**
     * @return Display information of a Compute Engine forwarding rule.
     * 
     */
    public ForwardingRuleInfoResponse forwardingRule() {
        return this.forwardingRule;
    }
    /**
     * @return Display information of a Google Kubernetes Engine cluster master.
     * 
     */
    public GKEMasterInfoResponse gkeMaster() {
        return this.gkeMaster;
    }
    /**
     * @return Display information of a Compute Engine instance.
     * 
     */
    public InstanceInfoResponse instance() {
        return this.instance;
    }
    /**
     * @return Display information of the load balancers.
     * 
     */
    public LoadBalancerInfoResponse loadBalancer() {
        return this.loadBalancer;
    }
    /**
     * @return Display information of a Google Cloud network.
     * 
     */
    public NetworkInfoResponse network() {
        return this.network;
    }
    /**
     * @return Project ID that contains the configuration this step is validating.
     * 
     */
    public String project() {
        return this.project;
    }
    /**
     * @return Display information of a Compute Engine route.
     * 
     */
    public RouteInfoResponse route() {
        return this.route;
    }
    /**
     * @return Each step is in one of the pre-defined states.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Display information of a Compute Engine VPN gateway.
     * 
     */
    public VpnGatewayInfoResponse vpnGateway() {
        return this.vpnGateway;
    }
    /**
     * @return Display information of a Compute Engine VPN tunnel.
     * 
     */
    public VpnTunnelInfoResponse vpnTunnel() {
        return this.vpnTunnel;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StepResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private AbortInfoResponse abort;
        private Boolean causesDrop;
        private CloudSQLInstanceInfoResponse cloudSqlInstance;
        private DeliverInfoResponse deliver;
        private String description;
        private DropInfoResponse drop;
        private EndpointInfoResponse endpoint;
        private FirewallInfoResponse firewall;
        private ForwardInfoResponse forward;
        private ForwardingRuleInfoResponse forwardingRule;
        private GKEMasterInfoResponse gkeMaster;
        private InstanceInfoResponse instance;
        private LoadBalancerInfoResponse loadBalancer;
        private NetworkInfoResponse network;
        private String project;
        private RouteInfoResponse route;
        private String state;
        private VpnGatewayInfoResponse vpnGateway;
        private VpnTunnelInfoResponse vpnTunnel;
        public Builder() {}
        public Builder(StepResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.abort = defaults.abort;
    	      this.causesDrop = defaults.causesDrop;
    	      this.cloudSqlInstance = defaults.cloudSqlInstance;
    	      this.deliver = defaults.deliver;
    	      this.description = defaults.description;
    	      this.drop = defaults.drop;
    	      this.endpoint = defaults.endpoint;
    	      this.firewall = defaults.firewall;
    	      this.forward = defaults.forward;
    	      this.forwardingRule = defaults.forwardingRule;
    	      this.gkeMaster = defaults.gkeMaster;
    	      this.instance = defaults.instance;
    	      this.loadBalancer = defaults.loadBalancer;
    	      this.network = defaults.network;
    	      this.project = defaults.project;
    	      this.route = defaults.route;
    	      this.state = defaults.state;
    	      this.vpnGateway = defaults.vpnGateway;
    	      this.vpnTunnel = defaults.vpnTunnel;
        }

        @CustomType.Setter
        public Builder abort(AbortInfoResponse abort) {
            this.abort = Objects.requireNonNull(abort);
            return this;
        }
        @CustomType.Setter
        public Builder causesDrop(Boolean causesDrop) {
            this.causesDrop = Objects.requireNonNull(causesDrop);
            return this;
        }
        @CustomType.Setter
        public Builder cloudSqlInstance(CloudSQLInstanceInfoResponse cloudSqlInstance) {
            this.cloudSqlInstance = Objects.requireNonNull(cloudSqlInstance);
            return this;
        }
        @CustomType.Setter
        public Builder deliver(DeliverInfoResponse deliver) {
            this.deliver = Objects.requireNonNull(deliver);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder drop(DropInfoResponse drop) {
            this.drop = Objects.requireNonNull(drop);
            return this;
        }
        @CustomType.Setter
        public Builder endpoint(EndpointInfoResponse endpoint) {
            this.endpoint = Objects.requireNonNull(endpoint);
            return this;
        }
        @CustomType.Setter
        public Builder firewall(FirewallInfoResponse firewall) {
            this.firewall = Objects.requireNonNull(firewall);
            return this;
        }
        @CustomType.Setter
        public Builder forward(ForwardInfoResponse forward) {
            this.forward = Objects.requireNonNull(forward);
            return this;
        }
        @CustomType.Setter
        public Builder forwardingRule(ForwardingRuleInfoResponse forwardingRule) {
            this.forwardingRule = Objects.requireNonNull(forwardingRule);
            return this;
        }
        @CustomType.Setter
        public Builder gkeMaster(GKEMasterInfoResponse gkeMaster) {
            this.gkeMaster = Objects.requireNonNull(gkeMaster);
            return this;
        }
        @CustomType.Setter
        public Builder instance(InstanceInfoResponse instance) {
            this.instance = Objects.requireNonNull(instance);
            return this;
        }
        @CustomType.Setter
        public Builder loadBalancer(LoadBalancerInfoResponse loadBalancer) {
            this.loadBalancer = Objects.requireNonNull(loadBalancer);
            return this;
        }
        @CustomType.Setter
        public Builder network(NetworkInfoResponse network) {
            this.network = Objects.requireNonNull(network);
            return this;
        }
        @CustomType.Setter
        public Builder project(String project) {
            this.project = Objects.requireNonNull(project);
            return this;
        }
        @CustomType.Setter
        public Builder route(RouteInfoResponse route) {
            this.route = Objects.requireNonNull(route);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder vpnGateway(VpnGatewayInfoResponse vpnGateway) {
            this.vpnGateway = Objects.requireNonNull(vpnGateway);
            return this;
        }
        @CustomType.Setter
        public Builder vpnTunnel(VpnTunnelInfoResponse vpnTunnel) {
            this.vpnTunnel = Objects.requireNonNull(vpnTunnel);
            return this;
        }
        public StepResponse build() {
            final var o = new StepResponse();
            o.abort = abort;
            o.causesDrop = causesDrop;
            o.cloudSqlInstance = cloudSqlInstance;
            o.deliver = deliver;
            o.description = description;
            o.drop = drop;
            o.endpoint = endpoint;
            o.firewall = firewall;
            o.forward = forward;
            o.forwardingRule = forwardingRule;
            o.gkeMaster = gkeMaster;
            o.instance = instance;
            o.loadBalancer = loadBalancer;
            o.network = network;
            o.project = project;
            o.route = route;
            o.state = state;
            o.vpnGateway = vpnGateway;
            o.vpnTunnel = vpnTunnel;
            return o;
        }
    }
}
