// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudtasks.v2beta2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.cloudtasks.v2beta2.enums.UriOverrideScheme;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Uri Override. When specified, all the HTTP tasks inside the queue will be partially or fully overridden depending on the configured values.
 * 
 */
public final class UriOverrideArgs extends com.pulumi.resources.ResourceArgs {

    public static final UriOverrideArgs Empty = new UriOverrideArgs();

    /**
     * Host override. When specified, the host part of url will be overridden. For example, if the original Uri is &#34;https://www.google.com&#34;, and host is set to &#34;example.net&#34;, the overridden Uri will be &#34;https://example.net&#34;.
     * 
     */
    @Import(name="host")
    private @Nullable Output<String> host;

    /**
     * @return Host override. When specified, the host part of url will be overridden. For example, if the original Uri is &#34;https://www.google.com&#34;, and host is set to &#34;example.net&#34;, the overridden Uri will be &#34;https://example.net&#34;.
     * 
     */
    public Optional<Output<String>> host() {
        return Optional.ofNullable(this.host);
    }

    /**
     * Uri path. Will be used as the path for the current Uri (replaces any existing path of the task url).
     * 
     */
    @Import(name="path")
    private @Nullable Output<String> path;

    /**
     * @return Uri path. Will be used as the path for the current Uri (replaces any existing path of the task url).
     * 
     */
    public Optional<Output<String>> path() {
        return Optional.ofNullable(this.path);
    }

    /**
     * Port override. When specified, the port part of Uri will be replaced by the provided value. For instance, for a Uri http://www.google.com/foo and port=123 the overridden Uri becomes http://www.google.com:123/foo.
     * 
     */
    @Import(name="port")
    private @Nullable Output<String> port;

    /**
     * @return Port override. When specified, the port part of Uri will be replaced by the provided value. For instance, for a Uri http://www.google.com/foo and port=123 the overridden Uri becomes http://www.google.com:123/foo.
     * 
     */
    public Optional<Output<String>> port() {
        return Optional.ofNullable(this.port);
    }

    /**
     * Uri Query. Will replace the query part of the task uri.
     * 
     */
    @Import(name="query")
    private @Nullable Output<String> query;

    /**
     * @return Uri Query. Will replace the query part of the task uri.
     * 
     */
    public Optional<Output<String>> query() {
        return Optional.ofNullable(this.query);
    }

    /**
     * Scheme override. When specified, the Uri scheme is replaced by the provided value.
     * 
     */
    @Import(name="scheme")
    private @Nullable Output<UriOverrideScheme> scheme;

    /**
     * @return Scheme override. When specified, the Uri scheme is replaced by the provided value.
     * 
     */
    public Optional<Output<UriOverrideScheme>> scheme() {
        return Optional.ofNullable(this.scheme);
    }

    private UriOverrideArgs() {}

    private UriOverrideArgs(UriOverrideArgs $) {
        this.host = $.host;
        this.path = $.path;
        this.port = $.port;
        this.query = $.query;
        this.scheme = $.scheme;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UriOverrideArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UriOverrideArgs $;

        public Builder() {
            $ = new UriOverrideArgs();
        }

        public Builder(UriOverrideArgs defaults) {
            $ = new UriOverrideArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param host Host override. When specified, the host part of url will be overridden. For example, if the original Uri is &#34;https://www.google.com&#34;, and host is set to &#34;example.net&#34;, the overridden Uri will be &#34;https://example.net&#34;.
         * 
         * @return builder
         * 
         */
        public Builder host(@Nullable Output<String> host) {
            $.host = host;
            return this;
        }

        /**
         * @param host Host override. When specified, the host part of url will be overridden. For example, if the original Uri is &#34;https://www.google.com&#34;, and host is set to &#34;example.net&#34;, the overridden Uri will be &#34;https://example.net&#34;.
         * 
         * @return builder
         * 
         */
        public Builder host(String host) {
            return host(Output.of(host));
        }

        /**
         * @param path Uri path. Will be used as the path for the current Uri (replaces any existing path of the task url).
         * 
         * @return builder
         * 
         */
        public Builder path(@Nullable Output<String> path) {
            $.path = path;
            return this;
        }

        /**
         * @param path Uri path. Will be used as the path for the current Uri (replaces any existing path of the task url).
         * 
         * @return builder
         * 
         */
        public Builder path(String path) {
            return path(Output.of(path));
        }

        /**
         * @param port Port override. When specified, the port part of Uri will be replaced by the provided value. For instance, for a Uri http://www.google.com/foo and port=123 the overridden Uri becomes http://www.google.com:123/foo.
         * 
         * @return builder
         * 
         */
        public Builder port(@Nullable Output<String> port) {
            $.port = port;
            return this;
        }

        /**
         * @param port Port override. When specified, the port part of Uri will be replaced by the provided value. For instance, for a Uri http://www.google.com/foo and port=123 the overridden Uri becomes http://www.google.com:123/foo.
         * 
         * @return builder
         * 
         */
        public Builder port(String port) {
            return port(Output.of(port));
        }

        /**
         * @param query Uri Query. Will replace the query part of the task uri.
         * 
         * @return builder
         * 
         */
        public Builder query(@Nullable Output<String> query) {
            $.query = query;
            return this;
        }

        /**
         * @param query Uri Query. Will replace the query part of the task uri.
         * 
         * @return builder
         * 
         */
        public Builder query(String query) {
            return query(Output.of(query));
        }

        /**
         * @param scheme Scheme override. When specified, the Uri scheme is replaced by the provided value.
         * 
         * @return builder
         * 
         */
        public Builder scheme(@Nullable Output<UriOverrideScheme> scheme) {
            $.scheme = scheme;
            return this;
        }

        /**
         * @param scheme Scheme override. When specified, the Uri scheme is replaced by the provided value.
         * 
         * @return builder
         * 
         */
        public Builder scheme(UriOverrideScheme scheme) {
            return scheme(Output.of(scheme));
        }

        public UriOverrideArgs build() {
            return $;
        }
    }

}
