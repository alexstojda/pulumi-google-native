// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.deploymentmanager.v2beta.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class AuditLogConfigResponse {
    /**
     * @return Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
     * 
     */
    private List<String> exemptedMembers;
    /**
     * @return The log type that this config enables.
     * 
     */
    private String logType;

    private AuditLogConfigResponse() {}
    /**
     * @return Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
     * 
     */
    public List<String> exemptedMembers() {
        return this.exemptedMembers;
    }
    /**
     * @return The log type that this config enables.
     * 
     */
    public String logType() {
        return this.logType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AuditLogConfigResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> exemptedMembers;
        private String logType;
        public Builder() {}
        public Builder(AuditLogConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.exemptedMembers = defaults.exemptedMembers;
    	      this.logType = defaults.logType;
        }

        @CustomType.Setter
        public Builder exemptedMembers(List<String> exemptedMembers) {
            this.exemptedMembers = Objects.requireNonNull(exemptedMembers);
            return this;
        }
        public Builder exemptedMembers(String... exemptedMembers) {
            return exemptedMembers(List.of(exemptedMembers));
        }
        @CustomType.Setter
        public Builder logType(String logType) {
            this.logType = Objects.requireNonNull(logType);
            return this;
        }
        public AuditLogConfigResponse build() {
            final var o = new AuditLogConfigResponse();
            o.exemptedMembers = exemptedMembers;
            o.logType = logType;
            return o;
        }
    }
}
