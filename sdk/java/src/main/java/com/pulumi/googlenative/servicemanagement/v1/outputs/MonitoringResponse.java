// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.servicemanagement.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.servicemanagement.v1.outputs.MonitoringDestinationResponse;
import java.util.List;
import java.util.Objects;

@CustomType
public final class MonitoringResponse {
    /**
     * @return Monitoring configurations for sending metrics to the consumer project. There can be multiple consumer destinations. A monitored resource type may appear in multiple monitoring destinations if different aggregations are needed for different sets of metrics associated with that monitored resource type. A monitored resource and metric pair may only be used once in the Monitoring configuration.
     * 
     */
    private List<MonitoringDestinationResponse> consumerDestinations;
    /**
     * @return Monitoring configurations for sending metrics to the producer project. There can be multiple producer destinations. A monitored resource type may appear in multiple monitoring destinations if different aggregations are needed for different sets of metrics associated with that monitored resource type. A monitored resource and metric pair may only be used once in the Monitoring configuration.
     * 
     */
    private List<MonitoringDestinationResponse> producerDestinations;

    private MonitoringResponse() {}
    /**
     * @return Monitoring configurations for sending metrics to the consumer project. There can be multiple consumer destinations. A monitored resource type may appear in multiple monitoring destinations if different aggregations are needed for different sets of metrics associated with that monitored resource type. A monitored resource and metric pair may only be used once in the Monitoring configuration.
     * 
     */
    public List<MonitoringDestinationResponse> consumerDestinations() {
        return this.consumerDestinations;
    }
    /**
     * @return Monitoring configurations for sending metrics to the producer project. There can be multiple producer destinations. A monitored resource type may appear in multiple monitoring destinations if different aggregations are needed for different sets of metrics associated with that monitored resource type. A monitored resource and metric pair may only be used once in the Monitoring configuration.
     * 
     */
    public List<MonitoringDestinationResponse> producerDestinations() {
        return this.producerDestinations;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MonitoringResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<MonitoringDestinationResponse> consumerDestinations;
        private List<MonitoringDestinationResponse> producerDestinations;
        public Builder() {}
        public Builder(MonitoringResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.consumerDestinations = defaults.consumerDestinations;
    	      this.producerDestinations = defaults.producerDestinations;
        }

        @CustomType.Setter
        public Builder consumerDestinations(List<MonitoringDestinationResponse> consumerDestinations) {
            this.consumerDestinations = Objects.requireNonNull(consumerDestinations);
            return this;
        }
        public Builder consumerDestinations(MonitoringDestinationResponse... consumerDestinations) {
            return consumerDestinations(List.of(consumerDestinations));
        }
        @CustomType.Setter
        public Builder producerDestinations(List<MonitoringDestinationResponse> producerDestinations) {
            this.producerDestinations = Objects.requireNonNull(producerDestinations);
            return this;
        }
        public Builder producerDestinations(MonitoringDestinationResponse... producerDestinations) {
            return producerDestinations(List.of(producerDestinations));
        }
        public MonitoringResponse build() {
            final var o = new MonitoringResponse();
            o.consumerDestinations = consumerDestinations;
            o.producerDestinations = producerDestinations;
            return o;
        }
    }
}
