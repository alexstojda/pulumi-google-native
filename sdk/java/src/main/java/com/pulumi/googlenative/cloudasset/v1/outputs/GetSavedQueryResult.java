// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudasset.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.cloudasset.v1.outputs.QueryContentResponse;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetSavedQueryResult {
    /**
     * @return The query content.
     * 
     */
    private QueryContentResponse content;
    /**
     * @return The create time of this saved query.
     * 
     */
    private String createTime;
    /**
     * @return The account&#39;s email address who has created this saved query.
     * 
     */
    private String creator;
    /**
     * @return The description of this saved query. This value should be fewer than 255 characters.
     * 
     */
    private String description;
    /**
     * @return Labels applied on the resource. This value should not contain more than 10 entries. The key and value of each entry must be non-empty and fewer than 64 characters.
     * 
     */
    private Map<String,String> labels;
    /**
     * @return The last update time of this saved query.
     * 
     */
    private String lastUpdateTime;
    /**
     * @return The account&#39;s email address who has updated this saved query most recently.
     * 
     */
    private String lastUpdater;
    /**
     * @return The resource name of the saved query. The format must be: * projects/project_number/savedQueries/saved_query_id * folders/folder_number/savedQueries/saved_query_id * organizations/organization_number/savedQueries/saved_query_id
     * 
     */
    private String name;

    private GetSavedQueryResult() {}
    /**
     * @return The query content.
     * 
     */
    public QueryContentResponse content() {
        return this.content;
    }
    /**
     * @return The create time of this saved query.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return The account&#39;s email address who has created this saved query.
     * 
     */
    public String creator() {
        return this.creator;
    }
    /**
     * @return The description of this saved query. This value should be fewer than 255 characters.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Labels applied on the resource. This value should not contain more than 10 entries. The key and value of each entry must be non-empty and fewer than 64 characters.
     * 
     */
    public Map<String,String> labels() {
        return this.labels;
    }
    /**
     * @return The last update time of this saved query.
     * 
     */
    public String lastUpdateTime() {
        return this.lastUpdateTime;
    }
    /**
     * @return The account&#39;s email address who has updated this saved query most recently.
     * 
     */
    public String lastUpdater() {
        return this.lastUpdater;
    }
    /**
     * @return The resource name of the saved query. The format must be: * projects/project_number/savedQueries/saved_query_id * folders/folder_number/savedQueries/saved_query_id * organizations/organization_number/savedQueries/saved_query_id
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSavedQueryResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private QueryContentResponse content;
        private String createTime;
        private String creator;
        private String description;
        private Map<String,String> labels;
        private String lastUpdateTime;
        private String lastUpdater;
        private String name;
        public Builder() {}
        public Builder(GetSavedQueryResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.content = defaults.content;
    	      this.createTime = defaults.createTime;
    	      this.creator = defaults.creator;
    	      this.description = defaults.description;
    	      this.labels = defaults.labels;
    	      this.lastUpdateTime = defaults.lastUpdateTime;
    	      this.lastUpdater = defaults.lastUpdater;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder content(QueryContentResponse content) {
            this.content = Objects.requireNonNull(content);
            return this;
        }
        @CustomType.Setter
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        @CustomType.Setter
        public Builder creator(String creator) {
            this.creator = Objects.requireNonNull(creator);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder labels(Map<String,String> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }
        @CustomType.Setter
        public Builder lastUpdateTime(String lastUpdateTime) {
            this.lastUpdateTime = Objects.requireNonNull(lastUpdateTime);
            return this;
        }
        @CustomType.Setter
        public Builder lastUpdater(String lastUpdater) {
            this.lastUpdater = Objects.requireNonNull(lastUpdater);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public GetSavedQueryResult build() {
            final var o = new GetSavedQueryResult();
            o.content = content;
            o.createTime = createTime;
            o.creator = creator;
            o.description = description;
            o.labels = labels;
            o.lastUpdateTime = lastUpdateTime;
            o.lastUpdater = lastUpdater;
            o.name = name;
            return o;
        }
    }
}
