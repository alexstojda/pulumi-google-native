// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.deploymentmanager.alpha.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.deploymentmanager.alpha.outputs.BasicAuthResponse;
import com.pulumi.googlenative.deploymentmanager.alpha.outputs.ServiceAccountResponse;
import java.lang.Boolean;
import java.util.Objects;

@CustomType
public final class CredentialResponse {
    /**
     * @return Basic Auth Credential, only used by TypeProvider.
     * 
     */
    private BasicAuthResponse basicAuth;
    /**
     * @return Service Account Credential, only used by Deployment.
     * 
     */
    private ServiceAccountResponse serviceAccount;
    /**
     * @return Specify to use the project default credential, only supported by Deployment.
     * 
     */
    private Boolean useProjectDefault;

    private CredentialResponse() {}
    /**
     * @return Basic Auth Credential, only used by TypeProvider.
     * 
     */
    public BasicAuthResponse basicAuth() {
        return this.basicAuth;
    }
    /**
     * @return Service Account Credential, only used by Deployment.
     * 
     */
    public ServiceAccountResponse serviceAccount() {
        return this.serviceAccount;
    }
    /**
     * @return Specify to use the project default credential, only supported by Deployment.
     * 
     */
    public Boolean useProjectDefault() {
        return this.useProjectDefault;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CredentialResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private BasicAuthResponse basicAuth;
        private ServiceAccountResponse serviceAccount;
        private Boolean useProjectDefault;
        public Builder() {}
        public Builder(CredentialResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.basicAuth = defaults.basicAuth;
    	      this.serviceAccount = defaults.serviceAccount;
    	      this.useProjectDefault = defaults.useProjectDefault;
        }

        @CustomType.Setter
        public Builder basicAuth(BasicAuthResponse basicAuth) {
            this.basicAuth = Objects.requireNonNull(basicAuth);
            return this;
        }
        @CustomType.Setter
        public Builder serviceAccount(ServiceAccountResponse serviceAccount) {
            this.serviceAccount = Objects.requireNonNull(serviceAccount);
            return this;
        }
        @CustomType.Setter
        public Builder useProjectDefault(Boolean useProjectDefault) {
            this.useProjectDefault = Objects.requireNonNull(useProjectDefault);
            return this;
        }
        public CredentialResponse build() {
            final var o = new CredentialResponse();
            o.basicAuth = basicAuth;
            o.serviceAccount = serviceAccount;
            o.useProjectDefault = useProjectDefault;
            return o;
        }
    }
}
