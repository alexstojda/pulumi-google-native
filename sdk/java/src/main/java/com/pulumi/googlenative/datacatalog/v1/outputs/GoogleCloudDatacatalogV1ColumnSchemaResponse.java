// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.datacatalog.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.datacatalog.v1.outputs.GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpecResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GoogleCloudDatacatalogV1ColumnSchemaResponse {
    /**
     * @return Name of the column. Must be a UTF-8 string without dots (.). The maximum size is 64 bytes.
     * 
     */
    private String column;
    /**
     * @return Optional. Description of the column. Default value is an empty string. The description must be a UTF-8 string with the maximum size of 2000 bytes.
     * 
     */
    private String description;
    /**
     * @return Looker specific column info of this column.
     * 
     */
    private GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpecResponse lookerColumnSpec;
    /**
     * @return Optional. A column&#39;s mode indicates whether values in this column are required, nullable, or repeated. Only `NULLABLE`, `REQUIRED`, and `REPEATED` values are supported. Default mode is `NULLABLE`.
     * 
     */
    private String mode;
    /**
     * @return Optional. Schema of sub-columns. A column can have zero or more sub-columns.
     * 
     */
    private List<GoogleCloudDatacatalogV1ColumnSchemaResponse> subcolumns;
    /**
     * @return Type of the column. Must be a UTF-8 string with the maximum size of 128 bytes.
     * 
     */
    private String type;

    private GoogleCloudDatacatalogV1ColumnSchemaResponse() {}
    /**
     * @return Name of the column. Must be a UTF-8 string without dots (.). The maximum size is 64 bytes.
     * 
     */
    public String column() {
        return this.column;
    }
    /**
     * @return Optional. Description of the column. Default value is an empty string. The description must be a UTF-8 string with the maximum size of 2000 bytes.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Looker specific column info of this column.
     * 
     */
    public GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpecResponse lookerColumnSpec() {
        return this.lookerColumnSpec;
    }
    /**
     * @return Optional. A column&#39;s mode indicates whether values in this column are required, nullable, or repeated. Only `NULLABLE`, `REQUIRED`, and `REPEATED` values are supported. Default mode is `NULLABLE`.
     * 
     */
    public String mode() {
        return this.mode;
    }
    /**
     * @return Optional. Schema of sub-columns. A column can have zero or more sub-columns.
     * 
     */
    public List<GoogleCloudDatacatalogV1ColumnSchemaResponse> subcolumns() {
        return this.subcolumns;
    }
    /**
     * @return Type of the column. Must be a UTF-8 string with the maximum size of 128 bytes.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudDatacatalogV1ColumnSchemaResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String column;
        private String description;
        private GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpecResponse lookerColumnSpec;
        private String mode;
        private List<GoogleCloudDatacatalogV1ColumnSchemaResponse> subcolumns;
        private String type;
        public Builder() {}
        public Builder(GoogleCloudDatacatalogV1ColumnSchemaResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.column = defaults.column;
    	      this.description = defaults.description;
    	      this.lookerColumnSpec = defaults.lookerColumnSpec;
    	      this.mode = defaults.mode;
    	      this.subcolumns = defaults.subcolumns;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder column(String column) {
            this.column = Objects.requireNonNull(column);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder lookerColumnSpec(GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpecResponse lookerColumnSpec) {
            this.lookerColumnSpec = Objects.requireNonNull(lookerColumnSpec);
            return this;
        }
        @CustomType.Setter
        public Builder mode(String mode) {
            this.mode = Objects.requireNonNull(mode);
            return this;
        }
        @CustomType.Setter
        public Builder subcolumns(List<GoogleCloudDatacatalogV1ColumnSchemaResponse> subcolumns) {
            this.subcolumns = Objects.requireNonNull(subcolumns);
            return this;
        }
        public Builder subcolumns(GoogleCloudDatacatalogV1ColumnSchemaResponse... subcolumns) {
            return subcolumns(List.of(subcolumns));
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GoogleCloudDatacatalogV1ColumnSchemaResponse build() {
            final var o = new GoogleCloudDatacatalogV1ColumnSchemaResponse();
            o.column = column;
            o.description = description;
            o.lookerColumnSpec = lookerColumnSpec;
            o.mode = mode;
            o.subcolumns = subcolumns;
            o.type = type;
            return o;
        }
    }
}
