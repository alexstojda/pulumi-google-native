// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.bigquery.v2.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class MaterializedViewDefinitionResponse {
    /**
     * @return [Optional] [TrustedTester] Enable automatic refresh of the materialized view when the base table is updated. The default value is &#34;true&#34;.
     * 
     */
    private Boolean enableRefresh;
    /**
     * @return [TrustedTester] The time when this materialized view was last modified, in milliseconds since the epoch.
     * 
     */
    private String lastRefreshTime;
    /**
     * @return [Optional] Max staleness of data that could be returned when materizlized view is queried (formatted as Google SQL Interval type).
     * 
     */
    private String maxStaleness;
    /**
     * @return [Required] A query whose result is persisted.
     * 
     */
    private String query;
    /**
     * @return [Optional] [TrustedTester] The maximum frequency at which this materialized view will be refreshed. The default value is &#34;1800000&#34; (30 minutes).
     * 
     */
    private String refreshIntervalMs;

    private MaterializedViewDefinitionResponse() {}
    /**
     * @return [Optional] [TrustedTester] Enable automatic refresh of the materialized view when the base table is updated. The default value is &#34;true&#34;.
     * 
     */
    public Boolean enableRefresh() {
        return this.enableRefresh;
    }
    /**
     * @return [TrustedTester] The time when this materialized view was last modified, in milliseconds since the epoch.
     * 
     */
    public String lastRefreshTime() {
        return this.lastRefreshTime;
    }
    /**
     * @return [Optional] Max staleness of data that could be returned when materizlized view is queried (formatted as Google SQL Interval type).
     * 
     */
    public String maxStaleness() {
        return this.maxStaleness;
    }
    /**
     * @return [Required] A query whose result is persisted.
     * 
     */
    public String query() {
        return this.query;
    }
    /**
     * @return [Optional] [TrustedTester] The maximum frequency at which this materialized view will be refreshed. The default value is &#34;1800000&#34; (30 minutes).
     * 
     */
    public String refreshIntervalMs() {
        return this.refreshIntervalMs;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MaterializedViewDefinitionResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean enableRefresh;
        private String lastRefreshTime;
        private String maxStaleness;
        private String query;
        private String refreshIntervalMs;
        public Builder() {}
        public Builder(MaterializedViewDefinitionResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enableRefresh = defaults.enableRefresh;
    	      this.lastRefreshTime = defaults.lastRefreshTime;
    	      this.maxStaleness = defaults.maxStaleness;
    	      this.query = defaults.query;
    	      this.refreshIntervalMs = defaults.refreshIntervalMs;
        }

        @CustomType.Setter
        public Builder enableRefresh(Boolean enableRefresh) {
            this.enableRefresh = Objects.requireNonNull(enableRefresh);
            return this;
        }
        @CustomType.Setter
        public Builder lastRefreshTime(String lastRefreshTime) {
            this.lastRefreshTime = Objects.requireNonNull(lastRefreshTime);
            return this;
        }
        @CustomType.Setter
        public Builder maxStaleness(String maxStaleness) {
            this.maxStaleness = Objects.requireNonNull(maxStaleness);
            return this;
        }
        @CustomType.Setter
        public Builder query(String query) {
            this.query = Objects.requireNonNull(query);
            return this;
        }
        @CustomType.Setter
        public Builder refreshIntervalMs(String refreshIntervalMs) {
            this.refreshIntervalMs = Objects.requireNonNull(refreshIntervalMs);
            return this;
        }
        public MaterializedViewDefinitionResponse build() {
            final var o = new MaterializedViewDefinitionResponse();
            o.enableRefresh = enableRefresh;
            o.lastRefreshTime = lastRefreshTime;
            o.maxStaleness = maxStaleness;
            o.query = query;
            o.refreshIntervalMs = refreshIntervalMs;
            return o;
        }
    }
}
