// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute.alpha.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class LocalDiskResponse {
    /**
     * @return Specifies the number of such disks.
     * 
     */
    private Integer diskCount;
    /**
     * @return Specifies the size of the disk in base-2 GB.
     * 
     */
    private Integer diskSizeGb;
    /**
     * @return Specifies the desired disk type on the node. This disk type must be a local storage type (e.g.: local-ssd). Note that for nodeTemplates, this should be the name of the disk type and not its URL.
     * 
     */
    private String diskType;

    private LocalDiskResponse() {}
    /**
     * @return Specifies the number of such disks.
     * 
     */
    public Integer diskCount() {
        return this.diskCount;
    }
    /**
     * @return Specifies the size of the disk in base-2 GB.
     * 
     */
    public Integer diskSizeGb() {
        return this.diskSizeGb;
    }
    /**
     * @return Specifies the desired disk type on the node. This disk type must be a local storage type (e.g.: local-ssd). Note that for nodeTemplates, this should be the name of the disk type and not its URL.
     * 
     */
    public String diskType() {
        return this.diskType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LocalDiskResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer diskCount;
        private Integer diskSizeGb;
        private String diskType;
        public Builder() {}
        public Builder(LocalDiskResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.diskCount = defaults.diskCount;
    	      this.diskSizeGb = defaults.diskSizeGb;
    	      this.diskType = defaults.diskType;
        }

        @CustomType.Setter
        public Builder diskCount(Integer diskCount) {
            this.diskCount = Objects.requireNonNull(diskCount);
            return this;
        }
        @CustomType.Setter
        public Builder diskSizeGb(Integer diskSizeGb) {
            this.diskSizeGb = Objects.requireNonNull(diskSizeGb);
            return this;
        }
        @CustomType.Setter
        public Builder diskType(String diskType) {
            this.diskType = Objects.requireNonNull(diskType);
            return this;
        }
        public LocalDiskResponse build() {
            final var o = new LocalDiskResponse();
            o.diskCount = diskCount;
            o.diskSizeGb = diskSizeGb;
            o.diskType = diskType;
            return o;
        }
    }
}
