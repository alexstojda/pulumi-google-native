// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute.alpha.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.compute.alpha.outputs.FutureReservationSpecificSKUPropertiesResponse;
import com.pulumi.googlenative.compute.alpha.outputs.FutureReservationStatusResponse;
import com.pulumi.googlenative.compute.alpha.outputs.FutureReservationTimeWindowResponse;
import com.pulumi.googlenative.compute.alpha.outputs.ShareSettingsResponse;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetFutureReservationResult {
    /**
     * @return The creation timestamp for this future reservation in RFC3339 text format.
     * 
     */
    private String creationTimestamp;
    /**
     * @return An optional description of this resource. Provide this property when you create the future reservation.
     * 
     */
    private String description;
    /**
     * @return Type of the resource. Always compute#futureReservation for future reservations.
     * 
     */
    private String kind;
    /**
     * @return The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     * 
     */
    private String name;
    /**
     * @return Name prefix for the reservations to be created at the time of delivery. The name prefix must comply with RFC1035. Maximum allowed length for name prefix is 20. Automatically created reservations name format will be -date-####.
     * 
     */
    private String namePrefix;
    /**
     * @return Server-defined fully-qualified URL for this resource.
     * 
     */
    private String selfLink;
    /**
     * @return Server-defined URL for this resource with the resource id.
     * 
     */
    private String selfLinkWithId;
    /**
     * @return List of Projects/Folders to share with.
     * 
     */
    private ShareSettingsResponse shareSettings;
    /**
     * @return Future Reservation configuration to indicate instance properties and total count.
     * 
     */
    private FutureReservationSpecificSKUPropertiesResponse specificSkuProperties;
    /**
     * @return [Output only] Status of the Future Reservation
     * 
     */
    private FutureReservationStatusResponse status;
    /**
     * @return Time window for this Future Reservation.
     * 
     */
    private FutureReservationTimeWindowResponse timeWindow;
    /**
     * @return URL of the Zone where this future reservation resides.
     * 
     */
    private String zone;

    private GetFutureReservationResult() {}
    /**
     * @return The creation timestamp for this future reservation in RFC3339 text format.
     * 
     */
    public String creationTimestamp() {
        return this.creationTimestamp;
    }
    /**
     * @return An optional description of this resource. Provide this property when you create the future reservation.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Type of the resource. Always compute#futureReservation for future reservations.
     * 
     */
    public String kind() {
        return this.kind;
    }
    /**
     * @return The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Name prefix for the reservations to be created at the time of delivery. The name prefix must comply with RFC1035. Maximum allowed length for name prefix is 20. Automatically created reservations name format will be -date-####.
     * 
     */
    public String namePrefix() {
        return this.namePrefix;
    }
    /**
     * @return Server-defined fully-qualified URL for this resource.
     * 
     */
    public String selfLink() {
        return this.selfLink;
    }
    /**
     * @return Server-defined URL for this resource with the resource id.
     * 
     */
    public String selfLinkWithId() {
        return this.selfLinkWithId;
    }
    /**
     * @return List of Projects/Folders to share with.
     * 
     */
    public ShareSettingsResponse shareSettings() {
        return this.shareSettings;
    }
    /**
     * @return Future Reservation configuration to indicate instance properties and total count.
     * 
     */
    public FutureReservationSpecificSKUPropertiesResponse specificSkuProperties() {
        return this.specificSkuProperties;
    }
    /**
     * @return [Output only] Status of the Future Reservation
     * 
     */
    public FutureReservationStatusResponse status() {
        return this.status;
    }
    /**
     * @return Time window for this Future Reservation.
     * 
     */
    public FutureReservationTimeWindowResponse timeWindow() {
        return this.timeWindow;
    }
    /**
     * @return URL of the Zone where this future reservation resides.
     * 
     */
    public String zone() {
        return this.zone;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFutureReservationResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String creationTimestamp;
        private String description;
        private String kind;
        private String name;
        private String namePrefix;
        private String selfLink;
        private String selfLinkWithId;
        private ShareSettingsResponse shareSettings;
        private FutureReservationSpecificSKUPropertiesResponse specificSkuProperties;
        private FutureReservationStatusResponse status;
        private FutureReservationTimeWindowResponse timeWindow;
        private String zone;
        public Builder() {}
        public Builder(GetFutureReservationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.creationTimestamp = defaults.creationTimestamp;
    	      this.description = defaults.description;
    	      this.kind = defaults.kind;
    	      this.name = defaults.name;
    	      this.namePrefix = defaults.namePrefix;
    	      this.selfLink = defaults.selfLink;
    	      this.selfLinkWithId = defaults.selfLinkWithId;
    	      this.shareSettings = defaults.shareSettings;
    	      this.specificSkuProperties = defaults.specificSkuProperties;
    	      this.status = defaults.status;
    	      this.timeWindow = defaults.timeWindow;
    	      this.zone = defaults.zone;
        }

        @CustomType.Setter
        public Builder creationTimestamp(String creationTimestamp) {
            this.creationTimestamp = Objects.requireNonNull(creationTimestamp);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder kind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder namePrefix(String namePrefix) {
            this.namePrefix = Objects.requireNonNull(namePrefix);
            return this;
        }
        @CustomType.Setter
        public Builder selfLink(String selfLink) {
            this.selfLink = Objects.requireNonNull(selfLink);
            return this;
        }
        @CustomType.Setter
        public Builder selfLinkWithId(String selfLinkWithId) {
            this.selfLinkWithId = Objects.requireNonNull(selfLinkWithId);
            return this;
        }
        @CustomType.Setter
        public Builder shareSettings(ShareSettingsResponse shareSettings) {
            this.shareSettings = Objects.requireNonNull(shareSettings);
            return this;
        }
        @CustomType.Setter
        public Builder specificSkuProperties(FutureReservationSpecificSKUPropertiesResponse specificSkuProperties) {
            this.specificSkuProperties = Objects.requireNonNull(specificSkuProperties);
            return this;
        }
        @CustomType.Setter
        public Builder status(FutureReservationStatusResponse status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        @CustomType.Setter
        public Builder timeWindow(FutureReservationTimeWindowResponse timeWindow) {
            this.timeWindow = Objects.requireNonNull(timeWindow);
            return this;
        }
        @CustomType.Setter
        public Builder zone(String zone) {
            this.zone = Objects.requireNonNull(zone);
            return this;
        }
        public GetFutureReservationResult build() {
            final var o = new GetFutureReservationResult();
            o.creationTimestamp = creationTimestamp;
            o.description = description;
            o.kind = kind;
            o.name = name;
            o.namePrefix = namePrefix;
            o.selfLink = selfLink;
            o.selfLinkWithId = selfLinkWithId;
            o.shareSettings = shareSettings;
            o.specificSkuProperties = specificSkuProperties;
            o.status = status;
            o.timeWindow = timeWindow;
            o.zone = zone;
            return o;
        }
    }
}
