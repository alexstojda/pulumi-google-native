// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.apikeys.v2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.apikeys.v2.outputs.V2AndroidKeyRestrictionsResponse;
import com.pulumi.googlenative.apikeys.v2.outputs.V2ApiTargetResponse;
import com.pulumi.googlenative.apikeys.v2.outputs.V2BrowserKeyRestrictionsResponse;
import com.pulumi.googlenative.apikeys.v2.outputs.V2IosKeyRestrictionsResponse;
import com.pulumi.googlenative.apikeys.v2.outputs.V2ServerKeyRestrictionsResponse;
import java.util.List;
import java.util.Objects;

@CustomType
public final class V2RestrictionsResponse {
    /**
     * @return The Android apps that are allowed to use the key.
     * 
     */
    private V2AndroidKeyRestrictionsResponse androidKeyRestrictions;
    /**
     * @return A restriction for a specific service and optionally one or more specific methods. Requests are allowed if they match any of these restrictions. If no restrictions are specified, all targets are allowed.
     * 
     */
    private List<V2ApiTargetResponse> apiTargets;
    /**
     * @return The HTTP referrers (websites) that are allowed to use the key.
     * 
     */
    private V2BrowserKeyRestrictionsResponse browserKeyRestrictions;
    /**
     * @return The iOS apps that are allowed to use the key.
     * 
     */
    private V2IosKeyRestrictionsResponse iosKeyRestrictions;
    /**
     * @return The IP addresses of callers that are allowed to use the key.
     * 
     */
    private V2ServerKeyRestrictionsResponse serverKeyRestrictions;

    private V2RestrictionsResponse() {}
    /**
     * @return The Android apps that are allowed to use the key.
     * 
     */
    public V2AndroidKeyRestrictionsResponse androidKeyRestrictions() {
        return this.androidKeyRestrictions;
    }
    /**
     * @return A restriction for a specific service and optionally one or more specific methods. Requests are allowed if they match any of these restrictions. If no restrictions are specified, all targets are allowed.
     * 
     */
    public List<V2ApiTargetResponse> apiTargets() {
        return this.apiTargets;
    }
    /**
     * @return The HTTP referrers (websites) that are allowed to use the key.
     * 
     */
    public V2BrowserKeyRestrictionsResponse browserKeyRestrictions() {
        return this.browserKeyRestrictions;
    }
    /**
     * @return The iOS apps that are allowed to use the key.
     * 
     */
    public V2IosKeyRestrictionsResponse iosKeyRestrictions() {
        return this.iosKeyRestrictions;
    }
    /**
     * @return The IP addresses of callers that are allowed to use the key.
     * 
     */
    public V2ServerKeyRestrictionsResponse serverKeyRestrictions() {
        return this.serverKeyRestrictions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(V2RestrictionsResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private V2AndroidKeyRestrictionsResponse androidKeyRestrictions;
        private List<V2ApiTargetResponse> apiTargets;
        private V2BrowserKeyRestrictionsResponse browserKeyRestrictions;
        private V2IosKeyRestrictionsResponse iosKeyRestrictions;
        private V2ServerKeyRestrictionsResponse serverKeyRestrictions;
        public Builder() {}
        public Builder(V2RestrictionsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.androidKeyRestrictions = defaults.androidKeyRestrictions;
    	      this.apiTargets = defaults.apiTargets;
    	      this.browserKeyRestrictions = defaults.browserKeyRestrictions;
    	      this.iosKeyRestrictions = defaults.iosKeyRestrictions;
    	      this.serverKeyRestrictions = defaults.serverKeyRestrictions;
        }

        @CustomType.Setter
        public Builder androidKeyRestrictions(V2AndroidKeyRestrictionsResponse androidKeyRestrictions) {
            this.androidKeyRestrictions = Objects.requireNonNull(androidKeyRestrictions);
            return this;
        }
        @CustomType.Setter
        public Builder apiTargets(List<V2ApiTargetResponse> apiTargets) {
            this.apiTargets = Objects.requireNonNull(apiTargets);
            return this;
        }
        public Builder apiTargets(V2ApiTargetResponse... apiTargets) {
            return apiTargets(List.of(apiTargets));
        }
        @CustomType.Setter
        public Builder browserKeyRestrictions(V2BrowserKeyRestrictionsResponse browserKeyRestrictions) {
            this.browserKeyRestrictions = Objects.requireNonNull(browserKeyRestrictions);
            return this;
        }
        @CustomType.Setter
        public Builder iosKeyRestrictions(V2IosKeyRestrictionsResponse iosKeyRestrictions) {
            this.iosKeyRestrictions = Objects.requireNonNull(iosKeyRestrictions);
            return this;
        }
        @CustomType.Setter
        public Builder serverKeyRestrictions(V2ServerKeyRestrictionsResponse serverKeyRestrictions) {
            this.serverKeyRestrictions = Objects.requireNonNull(serverKeyRestrictions);
            return this;
        }
        public V2RestrictionsResponse build() {
            final var o = new V2RestrictionsResponse();
            o.androidKeyRestrictions = androidKeyRestrictions;
            o.apiTargets = apiTargets;
            o.browserKeyRestrictions = browserKeyRestrictions;
            o.iosKeyRestrictions = iosKeyRestrictions;
            o.serverKeyRestrictions = serverKeyRestrictions;
            return o;
        }
    }
}
