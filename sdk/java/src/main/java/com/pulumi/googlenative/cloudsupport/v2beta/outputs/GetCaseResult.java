// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudsupport.v2beta.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.cloudsupport.v2beta.outputs.ActorResponse;
import com.pulumi.googlenative.cloudsupport.v2beta.outputs.CaseClassificationResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCaseResult {
    /**
     * @return The issue classification applicable to this case.
     * 
     */
    private CaseClassificationResponse classification;
    /**
     * @return The time this case was created.
     * 
     */
    private String createTime;
    /**
     * @return The user who created the case. Note: The name and email will be obfuscated if the case was created by Google Support.
     * 
     */
    private ActorResponse creator;
    /**
     * @return A broad description of the issue.
     * 
     */
    private String description;
    /**
     * @return The short summary of the issue reported in this case.
     * 
     */
    private String displayName;
    /**
     * @return Whether the case is currently escalated.
     * 
     */
    private Boolean escalated;
    /**
     * @return The resource name for the case.
     * 
     */
    private String name;
    /**
     * @return The priority of this case. If this is set, do not set severity.
     * 
     */
    private String priority;
    /**
     * @return The ID of the project associated with the case.
     * 
     */
    private String project;
    /**
     * @return The severity of this case. Deprecated. Use priority instead.
     * 
     * @deprecated
     * The severity of this case. Deprecated. Use priority instead.
     * 
     */
    @Deprecated /* The severity of this case. Deprecated. Use priority instead. */
    private String severity;
    /**
     * @return The current status of the support case.
     * 
     */
    private String state;
    /**
     * @return The email addresses to receive updates on this case.
     * 
     */
    private List<String> subscriberEmailAddresses;
    /**
     * @return Whether this case was created for internal API testing and should not be acted on by the support team.
     * 
     */
    private Boolean testCase;
    /**
     * @return The timezone of the user who created the support case. It should be in a format IANA recognizes: https://www.iana.org/time-zones. There is no additional validation done by the API.
     * 
     */
    private String timeZone;
    /**
     * @return The time this case was last updated.
     * 
     */
    private String updateTime;

    private GetCaseResult() {}
    /**
     * @return The issue classification applicable to this case.
     * 
     */
    public CaseClassificationResponse classification() {
        return this.classification;
    }
    /**
     * @return The time this case was created.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return The user who created the case. Note: The name and email will be obfuscated if the case was created by Google Support.
     * 
     */
    public ActorResponse creator() {
        return this.creator;
    }
    /**
     * @return A broad description of the issue.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The short summary of the issue reported in this case.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Whether the case is currently escalated.
     * 
     */
    public Boolean escalated() {
        return this.escalated;
    }
    /**
     * @return The resource name for the case.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The priority of this case. If this is set, do not set severity.
     * 
     */
    public String priority() {
        return this.priority;
    }
    /**
     * @return The ID of the project associated with the case.
     * 
     */
    public String project() {
        return this.project;
    }
    /**
     * @return The severity of this case. Deprecated. Use priority instead.
     * 
     * @deprecated
     * The severity of this case. Deprecated. Use priority instead.
     * 
     */
    @Deprecated /* The severity of this case. Deprecated. Use priority instead. */
    public String severity() {
        return this.severity;
    }
    /**
     * @return The current status of the support case.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The email addresses to receive updates on this case.
     * 
     */
    public List<String> subscriberEmailAddresses() {
        return this.subscriberEmailAddresses;
    }
    /**
     * @return Whether this case was created for internal API testing and should not be acted on by the support team.
     * 
     */
    public Boolean testCase() {
        return this.testCase;
    }
    /**
     * @return The timezone of the user who created the support case. It should be in a format IANA recognizes: https://www.iana.org/time-zones. There is no additional validation done by the API.
     * 
     */
    public String timeZone() {
        return this.timeZone;
    }
    /**
     * @return The time this case was last updated.
     * 
     */
    public String updateTime() {
        return this.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCaseResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private CaseClassificationResponse classification;
        private String createTime;
        private ActorResponse creator;
        private String description;
        private String displayName;
        private Boolean escalated;
        private String name;
        private String priority;
        private String project;
        private String severity;
        private String state;
        private List<String> subscriberEmailAddresses;
        private Boolean testCase;
        private String timeZone;
        private String updateTime;
        public Builder() {}
        public Builder(GetCaseResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.classification = defaults.classification;
    	      this.createTime = defaults.createTime;
    	      this.creator = defaults.creator;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.escalated = defaults.escalated;
    	      this.name = defaults.name;
    	      this.priority = defaults.priority;
    	      this.project = defaults.project;
    	      this.severity = defaults.severity;
    	      this.state = defaults.state;
    	      this.subscriberEmailAddresses = defaults.subscriberEmailAddresses;
    	      this.testCase = defaults.testCase;
    	      this.timeZone = defaults.timeZone;
    	      this.updateTime = defaults.updateTime;
        }

        @CustomType.Setter
        public Builder classification(CaseClassificationResponse classification) {
            this.classification = Objects.requireNonNull(classification);
            return this;
        }
        @CustomType.Setter
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        @CustomType.Setter
        public Builder creator(ActorResponse creator) {
            this.creator = Objects.requireNonNull(creator);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder escalated(Boolean escalated) {
            this.escalated = Objects.requireNonNull(escalated);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder priority(String priority) {
            this.priority = Objects.requireNonNull(priority);
            return this;
        }
        @CustomType.Setter
        public Builder project(String project) {
            this.project = Objects.requireNonNull(project);
            return this;
        }
        @CustomType.Setter
        public Builder severity(String severity) {
            this.severity = Objects.requireNonNull(severity);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder subscriberEmailAddresses(List<String> subscriberEmailAddresses) {
            this.subscriberEmailAddresses = Objects.requireNonNull(subscriberEmailAddresses);
            return this;
        }
        public Builder subscriberEmailAddresses(String... subscriberEmailAddresses) {
            return subscriberEmailAddresses(List.of(subscriberEmailAddresses));
        }
        @CustomType.Setter
        public Builder testCase(Boolean testCase) {
            this.testCase = Objects.requireNonNull(testCase);
            return this;
        }
        @CustomType.Setter
        public Builder timeZone(String timeZone) {
            this.timeZone = Objects.requireNonNull(timeZone);
            return this;
        }
        @CustomType.Setter
        public Builder updateTime(String updateTime) {
            this.updateTime = Objects.requireNonNull(updateTime);
            return this;
        }
        public GetCaseResult build() {
            final var o = new GetCaseResult();
            o.classification = classification;
            o.createTime = createTime;
            o.creator = creator;
            o.description = description;
            o.displayName = displayName;
            o.escalated = escalated;
            o.name = name;
            o.priority = priority;
            o.project = project;
            o.severity = severity;
            o.state = state;
            o.subscriberEmailAddresses = subscriberEmailAddresses;
            o.testCase = testCase;
            o.timeZone = timeZone;
            o.updateTime = updateTime;
            return o;
        }
    }
}
