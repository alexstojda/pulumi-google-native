// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute.alpha.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.compute.alpha.outputs.TlsCertificateContextResponse;
import com.pulumi.googlenative.compute.alpha.outputs.TlsValidationContextResponse;
import java.util.Objects;

@CustomType
public final class TlsContextResponse {
    /**
     * @return Defines the mechanism to obtain the client or server certificate.
     * 
     */
    private TlsCertificateContextResponse certificateContext;
    /**
     * @return Defines the mechanism to obtain the Certificate Authority certificate to validate the client/server certificate. If omitted, the proxy will not validate the server or client certificate.
     * 
     */
    private TlsValidationContextResponse validationContext;

    private TlsContextResponse() {}
    /**
     * @return Defines the mechanism to obtain the client or server certificate.
     * 
     */
    public TlsCertificateContextResponse certificateContext() {
        return this.certificateContext;
    }
    /**
     * @return Defines the mechanism to obtain the Certificate Authority certificate to validate the client/server certificate. If omitted, the proxy will not validate the server or client certificate.
     * 
     */
    public TlsValidationContextResponse validationContext() {
        return this.validationContext;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TlsContextResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private TlsCertificateContextResponse certificateContext;
        private TlsValidationContextResponse validationContext;
        public Builder() {}
        public Builder(TlsContextResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificateContext = defaults.certificateContext;
    	      this.validationContext = defaults.validationContext;
        }

        @CustomType.Setter
        public Builder certificateContext(TlsCertificateContextResponse certificateContext) {
            this.certificateContext = Objects.requireNonNull(certificateContext);
            return this;
        }
        @CustomType.Setter
        public Builder validationContext(TlsValidationContextResponse validationContext) {
            this.validationContext = Objects.requireNonNull(validationContext);
            return this;
        }
        public TlsContextResponse build() {
            final var o = new TlsContextResponse();
            o.certificateContext = certificateContext;
            o.validationContext = validationContext;
            return o;
        }
    }
}
