// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.file.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetSnapshotResult {
    /**
     * @return The time when the snapshot was created.
     * 
     */
    private String createTime;
    /**
     * @return A description of the snapshot with 2048 characters or less. Requests with longer descriptions will be rejected.
     * 
     */
    private String description;
    /**
     * @return The amount of bytes needed to allocate a full copy of the snapshot content
     * 
     */
    private String filesystemUsedBytes;
    /**
     * @return Resource labels to represent user provided metadata.
     * 
     */
    private Map<String,String> labels;
    /**
     * @return The resource name of the snapshot, in the format `projects/{project_id}/locations/{location_id}/instances/{instance_id}/snapshots/{snapshot_id}`.
     * 
     */
    private String name;
    /**
     * @return The snapshot state.
     * 
     */
    private String state;

    private GetSnapshotResult() {}
    /**
     * @return The time when the snapshot was created.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return A description of the snapshot with 2048 characters or less. Requests with longer descriptions will be rejected.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The amount of bytes needed to allocate a full copy of the snapshot content
     * 
     */
    public String filesystemUsedBytes() {
        return this.filesystemUsedBytes;
    }
    /**
     * @return Resource labels to represent user provided metadata.
     * 
     */
    public Map<String,String> labels() {
        return this.labels;
    }
    /**
     * @return The resource name of the snapshot, in the format `projects/{project_id}/locations/{location_id}/instances/{instance_id}/snapshots/{snapshot_id}`.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The snapshot state.
     * 
     */
    public String state() {
        return this.state;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSnapshotResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String createTime;
        private String description;
        private String filesystemUsedBytes;
        private Map<String,String> labels;
        private String name;
        private String state;
        public Builder() {}
        public Builder(GetSnapshotResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.description = defaults.description;
    	      this.filesystemUsedBytes = defaults.filesystemUsedBytes;
    	      this.labels = defaults.labels;
    	      this.name = defaults.name;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder filesystemUsedBytes(String filesystemUsedBytes) {
            this.filesystemUsedBytes = Objects.requireNonNull(filesystemUsedBytes);
            return this;
        }
        @CustomType.Setter
        public Builder labels(Map<String,String> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public GetSnapshotResult build() {
            final var o = new GetSnapshotResult();
            o.createTime = createTime;
            o.description = description;
            o.filesystemUsedBytes = filesystemUsedBytes;
            o.labels = labels;
            o.name = name;
            o.state = state;
            return o;
        }
    }
}
