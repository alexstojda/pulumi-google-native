// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.osconfig.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.osconfig.v1.outputs.OSPolicyResourceGroupResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class OSPolicyResponse {
    /**
     * @return This flag determines the OS policy compliance status when none of the resource groups within the policy are applicable for a VM. Set this value to `true` if the policy needs to be reported as compliant even if the policy has nothing to validate or enforce.
     * 
     */
    private Boolean allowNoResourceGroupMatch;
    /**
     * @return Policy description. Length of the description is limited to 1024 characters.
     * 
     */
    private String description;
    /**
     * @return Policy mode
     * 
     */
    private String mode;
    /**
     * @return List of resource groups for the policy. For a particular VM, resource groups are evaluated in the order specified and the first resource group that is applicable is selected and the rest are ignored. If none of the resource groups are applicable for a VM, the VM is considered to be non-compliant w.r.t this policy. This behavior can be toggled by the flag `allow_no_resource_group_match`
     * 
     */
    private List<OSPolicyResourceGroupResponse> resourceGroups;

    private OSPolicyResponse() {}
    /**
     * @return This flag determines the OS policy compliance status when none of the resource groups within the policy are applicable for a VM. Set this value to `true` if the policy needs to be reported as compliant even if the policy has nothing to validate or enforce.
     * 
     */
    public Boolean allowNoResourceGroupMatch() {
        return this.allowNoResourceGroupMatch;
    }
    /**
     * @return Policy description. Length of the description is limited to 1024 characters.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Policy mode
     * 
     */
    public String mode() {
        return this.mode;
    }
    /**
     * @return List of resource groups for the policy. For a particular VM, resource groups are evaluated in the order specified and the first resource group that is applicable is selected and the rest are ignored. If none of the resource groups are applicable for a VM, the VM is considered to be non-compliant w.r.t this policy. This behavior can be toggled by the flag `allow_no_resource_group_match`
     * 
     */
    public List<OSPolicyResourceGroupResponse> resourceGroups() {
        return this.resourceGroups;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OSPolicyResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean allowNoResourceGroupMatch;
        private String description;
        private String mode;
        private List<OSPolicyResourceGroupResponse> resourceGroups;
        public Builder() {}
        public Builder(OSPolicyResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowNoResourceGroupMatch = defaults.allowNoResourceGroupMatch;
    	      this.description = defaults.description;
    	      this.mode = defaults.mode;
    	      this.resourceGroups = defaults.resourceGroups;
        }

        @CustomType.Setter
        public Builder allowNoResourceGroupMatch(Boolean allowNoResourceGroupMatch) {
            this.allowNoResourceGroupMatch = Objects.requireNonNull(allowNoResourceGroupMatch);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder mode(String mode) {
            this.mode = Objects.requireNonNull(mode);
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroups(List<OSPolicyResourceGroupResponse> resourceGroups) {
            this.resourceGroups = Objects.requireNonNull(resourceGroups);
            return this;
        }
        public Builder resourceGroups(OSPolicyResourceGroupResponse... resourceGroups) {
            return resourceGroups(List.of(resourceGroups));
        }
        public OSPolicyResponse build() {
            final var o = new OSPolicyResponse();
            o.allowNoResourceGroupMatch = allowNoResourceGroupMatch;
            o.description = description;
            o.mode = mode;
            o.resourceGroups = resourceGroups;
            return o;
        }
    }
}
