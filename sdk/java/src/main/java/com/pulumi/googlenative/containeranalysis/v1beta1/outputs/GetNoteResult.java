// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.containeranalysis.v1beta1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.containeranalysis.v1beta1.outputs.AuthorityResponse;
import com.pulumi.googlenative.containeranalysis.v1beta1.outputs.BasisResponse;
import com.pulumi.googlenative.containeranalysis.v1beta1.outputs.BuildResponse;
import com.pulumi.googlenative.containeranalysis.v1beta1.outputs.DeployableResponse;
import com.pulumi.googlenative.containeranalysis.v1beta1.outputs.DiscoveryResponse;
import com.pulumi.googlenative.containeranalysis.v1beta1.outputs.DocumentNoteResponse;
import com.pulumi.googlenative.containeranalysis.v1beta1.outputs.FileNoteResponse;
import com.pulumi.googlenative.containeranalysis.v1beta1.outputs.InTotoResponse;
import com.pulumi.googlenative.containeranalysis.v1beta1.outputs.PackageInfoNoteResponse;
import com.pulumi.googlenative.containeranalysis.v1beta1.outputs.PackageResponse;
import com.pulumi.googlenative.containeranalysis.v1beta1.outputs.RelatedUrlResponse;
import com.pulumi.googlenative.containeranalysis.v1beta1.outputs.RelationshipNoteResponse;
import com.pulumi.googlenative.containeranalysis.v1beta1.outputs.VulnerabilityResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetNoteResult {
    /**
     * @return A note describing an attestation role.
     * 
     */
    private AuthorityResponse attestationAuthority;
    /**
     * @return A note describing a base image.
     * 
     */
    private BasisResponse baseImage;
    /**
     * @return A note describing build provenance for a verifiable build.
     * 
     */
    private BuildResponse build;
    /**
     * @return The time this note was created. This field can be used as a filter in list requests.
     * 
     */
    private String createTime;
    /**
     * @return A note describing something that can be deployed.
     * 
     */
    private DeployableResponse deployable;
    /**
     * @return A note describing the initial analysis of a resource.
     * 
     */
    private DiscoveryResponse discovery;
    /**
     * @return Time of expiration for this note. Empty if note does not expire.
     * 
     */
    private String expirationTime;
    /**
     * @return A note describing an in-toto link.
     * 
     */
    private InTotoResponse intoto;
    /**
     * @return The type of analysis. This field can be used as a filter in list requests.
     * 
     */
    private String kind;
    /**
     * @return A detailed description of this note.
     * 
     */
    private String longDescription;
    /**
     * @return The name of the note in the form of `projects/[PROVIDER_ID]/notes/[NOTE_ID]`.
     * 
     */
    private String name;
    /**
     * @return A note describing a package hosted by various package managers.
     * 
     */
    private PackageResponse package_;
    /**
     * @return Other notes related to this note.
     * 
     */
    private List<String> relatedNoteNames;
    /**
     * @return URLs associated with this note.
     * 
     */
    private List<RelatedUrlResponse> relatedUrl;
    /**
     * @return A note describing a software bill of materials.
     * 
     */
    private DocumentNoteResponse sbom;
    /**
     * @return A one sentence description of this note.
     * 
     */
    private String shortDescription;
    /**
     * @return A note describing an SPDX File.
     * 
     */
    private FileNoteResponse spdxFile;
    /**
     * @return A note describing an SPDX Package.
     * 
     */
    private PackageInfoNoteResponse spdxPackage;
    /**
     * @return A note describing an SPDX File.
     * 
     */
    private RelationshipNoteResponse spdxRelationship;
    /**
     * @return The time this note was last updated. This field can be used as a filter in list requests.
     * 
     */
    private String updateTime;
    /**
     * @return A note describing a package vulnerability.
     * 
     */
    private VulnerabilityResponse vulnerability;

    private GetNoteResult() {}
    /**
     * @return A note describing an attestation role.
     * 
     */
    public AuthorityResponse attestationAuthority() {
        return this.attestationAuthority;
    }
    /**
     * @return A note describing a base image.
     * 
     */
    public BasisResponse baseImage() {
        return this.baseImage;
    }
    /**
     * @return A note describing build provenance for a verifiable build.
     * 
     */
    public BuildResponse build() {
        return this.build;
    }
    /**
     * @return The time this note was created. This field can be used as a filter in list requests.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return A note describing something that can be deployed.
     * 
     */
    public DeployableResponse deployable() {
        return this.deployable;
    }
    /**
     * @return A note describing the initial analysis of a resource.
     * 
     */
    public DiscoveryResponse discovery() {
        return this.discovery;
    }
    /**
     * @return Time of expiration for this note. Empty if note does not expire.
     * 
     */
    public String expirationTime() {
        return this.expirationTime;
    }
    /**
     * @return A note describing an in-toto link.
     * 
     */
    public InTotoResponse intoto() {
        return this.intoto;
    }
    /**
     * @return The type of analysis. This field can be used as a filter in list requests.
     * 
     */
    public String kind() {
        return this.kind;
    }
    /**
     * @return A detailed description of this note.
     * 
     */
    public String longDescription() {
        return this.longDescription;
    }
    /**
     * @return The name of the note in the form of `projects/[PROVIDER_ID]/notes/[NOTE_ID]`.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return A note describing a package hosted by various package managers.
     * 
     */
    public PackageResponse package_() {
        return this.package_;
    }
    /**
     * @return Other notes related to this note.
     * 
     */
    public List<String> relatedNoteNames() {
        return this.relatedNoteNames;
    }
    /**
     * @return URLs associated with this note.
     * 
     */
    public List<RelatedUrlResponse> relatedUrl() {
        return this.relatedUrl;
    }
    /**
     * @return A note describing a software bill of materials.
     * 
     */
    public DocumentNoteResponse sbom() {
        return this.sbom;
    }
    /**
     * @return A one sentence description of this note.
     * 
     */
    public String shortDescription() {
        return this.shortDescription;
    }
    /**
     * @return A note describing an SPDX File.
     * 
     */
    public FileNoteResponse spdxFile() {
        return this.spdxFile;
    }
    /**
     * @return A note describing an SPDX Package.
     * 
     */
    public PackageInfoNoteResponse spdxPackage() {
        return this.spdxPackage;
    }
    /**
     * @return A note describing an SPDX File.
     * 
     */
    public RelationshipNoteResponse spdxRelationship() {
        return this.spdxRelationship;
    }
    /**
     * @return The time this note was last updated. This field can be used as a filter in list requests.
     * 
     */
    public String updateTime() {
        return this.updateTime;
    }
    /**
     * @return A note describing a package vulnerability.
     * 
     */
    public VulnerabilityResponse vulnerability() {
        return this.vulnerability;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNoteResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private AuthorityResponse attestationAuthority;
        private BasisResponse baseImage;
        private BuildResponse build;
        private String createTime;
        private DeployableResponse deployable;
        private DiscoveryResponse discovery;
        private String expirationTime;
        private InTotoResponse intoto;
        private String kind;
        private String longDescription;
        private String name;
        private PackageResponse package_;
        private List<String> relatedNoteNames;
        private List<RelatedUrlResponse> relatedUrl;
        private DocumentNoteResponse sbom;
        private String shortDescription;
        private FileNoteResponse spdxFile;
        private PackageInfoNoteResponse spdxPackage;
        private RelationshipNoteResponse spdxRelationship;
        private String updateTime;
        private VulnerabilityResponse vulnerability;
        public Builder() {}
        public Builder(GetNoteResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attestationAuthority = defaults.attestationAuthority;
    	      this.baseImage = defaults.baseImage;
    	      this.build = defaults.build;
    	      this.createTime = defaults.createTime;
    	      this.deployable = defaults.deployable;
    	      this.discovery = defaults.discovery;
    	      this.expirationTime = defaults.expirationTime;
    	      this.intoto = defaults.intoto;
    	      this.kind = defaults.kind;
    	      this.longDescription = defaults.longDescription;
    	      this.name = defaults.name;
    	      this.package_ = defaults.package_;
    	      this.relatedNoteNames = defaults.relatedNoteNames;
    	      this.relatedUrl = defaults.relatedUrl;
    	      this.sbom = defaults.sbom;
    	      this.shortDescription = defaults.shortDescription;
    	      this.spdxFile = defaults.spdxFile;
    	      this.spdxPackage = defaults.spdxPackage;
    	      this.spdxRelationship = defaults.spdxRelationship;
    	      this.updateTime = defaults.updateTime;
    	      this.vulnerability = defaults.vulnerability;
        }

        @CustomType.Setter
        public Builder attestationAuthority(AuthorityResponse attestationAuthority) {
            this.attestationAuthority = Objects.requireNonNull(attestationAuthority);
            return this;
        }
        @CustomType.Setter
        public Builder baseImage(BasisResponse baseImage) {
            this.baseImage = Objects.requireNonNull(baseImage);
            return this;
        }
        @CustomType.Setter
        public Builder build(BuildResponse build) {
            this.build = Objects.requireNonNull(build);
            return this;
        }
        @CustomType.Setter
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        @CustomType.Setter
        public Builder deployable(DeployableResponse deployable) {
            this.deployable = Objects.requireNonNull(deployable);
            return this;
        }
        @CustomType.Setter
        public Builder discovery(DiscoveryResponse discovery) {
            this.discovery = Objects.requireNonNull(discovery);
            return this;
        }
        @CustomType.Setter
        public Builder expirationTime(String expirationTime) {
            this.expirationTime = Objects.requireNonNull(expirationTime);
            return this;
        }
        @CustomType.Setter
        public Builder intoto(InTotoResponse intoto) {
            this.intoto = Objects.requireNonNull(intoto);
            return this;
        }
        @CustomType.Setter
        public Builder kind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }
        @CustomType.Setter
        public Builder longDescription(String longDescription) {
            this.longDescription = Objects.requireNonNull(longDescription);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter("package")
        public Builder package_(PackageResponse package_) {
            this.package_ = Objects.requireNonNull(package_);
            return this;
        }
        @CustomType.Setter
        public Builder relatedNoteNames(List<String> relatedNoteNames) {
            this.relatedNoteNames = Objects.requireNonNull(relatedNoteNames);
            return this;
        }
        public Builder relatedNoteNames(String... relatedNoteNames) {
            return relatedNoteNames(List.of(relatedNoteNames));
        }
        @CustomType.Setter
        public Builder relatedUrl(List<RelatedUrlResponse> relatedUrl) {
            this.relatedUrl = Objects.requireNonNull(relatedUrl);
            return this;
        }
        public Builder relatedUrl(RelatedUrlResponse... relatedUrl) {
            return relatedUrl(List.of(relatedUrl));
        }
        @CustomType.Setter
        public Builder sbom(DocumentNoteResponse sbom) {
            this.sbom = Objects.requireNonNull(sbom);
            return this;
        }
        @CustomType.Setter
        public Builder shortDescription(String shortDescription) {
            this.shortDescription = Objects.requireNonNull(shortDescription);
            return this;
        }
        @CustomType.Setter
        public Builder spdxFile(FileNoteResponse spdxFile) {
            this.spdxFile = Objects.requireNonNull(spdxFile);
            return this;
        }
        @CustomType.Setter
        public Builder spdxPackage(PackageInfoNoteResponse spdxPackage) {
            this.spdxPackage = Objects.requireNonNull(spdxPackage);
            return this;
        }
        @CustomType.Setter
        public Builder spdxRelationship(RelationshipNoteResponse spdxRelationship) {
            this.spdxRelationship = Objects.requireNonNull(spdxRelationship);
            return this;
        }
        @CustomType.Setter
        public Builder updateTime(String updateTime) {
            this.updateTime = Objects.requireNonNull(updateTime);
            return this;
        }
        @CustomType.Setter
        public Builder vulnerability(VulnerabilityResponse vulnerability) {
            this.vulnerability = Objects.requireNonNull(vulnerability);
            return this;
        }
        public GetNoteResult build() {
            final var o = new GetNoteResult();
            o.attestationAuthority = attestationAuthority;
            o.baseImage = baseImage;
            o.build = build;
            o.createTime = createTime;
            o.deployable = deployable;
            o.discovery = discovery;
            o.expirationTime = expirationTime;
            o.intoto = intoto;
            o.kind = kind;
            o.longDescription = longDescription;
            o.name = name;
            o.package_ = package_;
            o.relatedNoteNames = relatedNoteNames;
            o.relatedUrl = relatedUrl;
            o.sbom = sbom;
            o.shortDescription = shortDescription;
            o.spdxFile = spdxFile;
            o.spdxPackage = spdxPackage;
            o.spdxRelationship = spdxRelationship;
            o.updateTime = updateTime;
            o.vulnerability = vulnerability;
            return o;
        }
    }
}
