// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.run.v1alpha1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class TCPSocketActionResponse {
    /**
     * @return (Optional) Optional: Host name to connect to, defaults to the pod IP.
     * 
     */
    private String host;
    /**
     * @return Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. This field is currently limited to integer types only because of proto&#39;s inability to properly support the IntOrString golang type.
     * 
     */
    private Integer port;

    private TCPSocketActionResponse() {}
    /**
     * @return (Optional) Optional: Host name to connect to, defaults to the pod IP.
     * 
     */
    public String host() {
        return this.host;
    }
    /**
     * @return Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. This field is currently limited to integer types only because of proto&#39;s inability to properly support the IntOrString golang type.
     * 
     */
    public Integer port() {
        return this.port;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TCPSocketActionResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String host;
        private Integer port;
        public Builder() {}
        public Builder(TCPSocketActionResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.host = defaults.host;
    	      this.port = defaults.port;
        }

        @CustomType.Setter
        public Builder host(String host) {
            this.host = Objects.requireNonNull(host);
            return this;
        }
        @CustomType.Setter
        public Builder port(Integer port) {
            this.port = Objects.requireNonNull(port);
            return this;
        }
        public TCPSocketActionResponse build() {
            final var o = new TCPSocketActionResponse();
            o.host = host;
            o.port = port;
            return o;
        }
    }
}
