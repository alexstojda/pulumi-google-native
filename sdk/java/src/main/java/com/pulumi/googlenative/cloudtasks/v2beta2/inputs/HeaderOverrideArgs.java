// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudtasks.v2beta2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.cloudtasks.v2beta2.inputs.HeaderArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Wraps the Header object.
 * 
 */
public final class HeaderOverrideArgs extends com.pulumi.resources.ResourceArgs {

    public static final HeaderOverrideArgs Empty = new HeaderOverrideArgs();

    /**
     * header embodying a key and a value.
     * 
     */
    @Import(name="header")
    private @Nullable Output<HeaderArgs> header;

    /**
     * @return header embodying a key and a value.
     * 
     */
    public Optional<Output<HeaderArgs>> header() {
        return Optional.ofNullable(this.header);
    }

    private HeaderOverrideArgs() {}

    private HeaderOverrideArgs(HeaderOverrideArgs $) {
        this.header = $.header;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HeaderOverrideArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HeaderOverrideArgs $;

        public Builder() {
            $ = new HeaderOverrideArgs();
        }

        public Builder(HeaderOverrideArgs defaults) {
            $ = new HeaderOverrideArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param header header embodying a key and a value.
         * 
         * @return builder
         * 
         */
        public Builder header(@Nullable Output<HeaderArgs> header) {
            $.header = header;
            return this;
        }

        /**
         * @param header header embodying a key and a value.
         * 
         * @return builder
         * 
         */
        public Builder header(HeaderArgs header) {
            return header(Output.of(header));
        }

        public HeaderOverrideArgs build() {
            return $;
        }
    }

}
