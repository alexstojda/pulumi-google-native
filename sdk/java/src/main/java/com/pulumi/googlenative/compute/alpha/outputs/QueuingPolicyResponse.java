// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute.alpha.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.compute.alpha.outputs.DurationResponse;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class QueuingPolicyResponse {
    /**
     * @return Relative deadline for waiting for capacity.
     * 
     */
    private DurationResponse validUntilDuration;
    /**
     * @return Absolute deadline for waiting for capacity in RFC3339 text format.
     * 
     */
    private String validUntilTime;

    private QueuingPolicyResponse() {}
    /**
     * @return Relative deadline for waiting for capacity.
     * 
     */
    public DurationResponse validUntilDuration() {
        return this.validUntilDuration;
    }
    /**
     * @return Absolute deadline for waiting for capacity in RFC3339 text format.
     * 
     */
    public String validUntilTime() {
        return this.validUntilTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(QueuingPolicyResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private DurationResponse validUntilDuration;
        private String validUntilTime;
        public Builder() {}
        public Builder(QueuingPolicyResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.validUntilDuration = defaults.validUntilDuration;
    	      this.validUntilTime = defaults.validUntilTime;
        }

        @CustomType.Setter
        public Builder validUntilDuration(DurationResponse validUntilDuration) {
            this.validUntilDuration = Objects.requireNonNull(validUntilDuration);
            return this;
        }
        @CustomType.Setter
        public Builder validUntilTime(String validUntilTime) {
            this.validUntilTime = Objects.requireNonNull(validUntilTime);
            return this;
        }
        public QueuingPolicyResponse build() {
            final var o = new QueuingPolicyResponse();
            o.validUntilDuration = validUntilDuration;
            o.validUntilTime = validUntilTime;
            return o;
        }
    }
}
