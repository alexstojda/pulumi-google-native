// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dataplex.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeResponse {
    /**
     * @return Dataplex Image version.
     * 
     */
    private String imageVersion;
    /**
     * @return Optional. List of Java jars to be included in the runtime environment. Valid input includes Cloud Storage URIs to Jar binaries. For example, gs://bucket-name/my/path/to/file.jar
     * 
     */
    private List<String> javaLibraries;
    /**
     * @return Optional. Spark properties to provide configuration for use in sessions created for this environment. The properties to set on daemon config files. Property keys are specified in prefix:property format. The prefix must be &#34;spark&#34;.
     * 
     */
    private Map<String,String> properties;
    /**
     * @return Optional. A list of python packages to be installed. Valid formats include Cloud Storage URI to a PIP installable library. For example, gs://bucket-name/my/path/to/lib.tar.gz
     * 
     */
    private List<String> pythonPackages;

    private GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeResponse() {}
    /**
     * @return Dataplex Image version.
     * 
     */
    public String imageVersion() {
        return this.imageVersion;
    }
    /**
     * @return Optional. List of Java jars to be included in the runtime environment. Valid input includes Cloud Storage URIs to Jar binaries. For example, gs://bucket-name/my/path/to/file.jar
     * 
     */
    public List<String> javaLibraries() {
        return this.javaLibraries;
    }
    /**
     * @return Optional. Spark properties to provide configuration for use in sessions created for this environment. The properties to set on daemon config files. Property keys are specified in prefix:property format. The prefix must be &#34;spark&#34;.
     * 
     */
    public Map<String,String> properties() {
        return this.properties;
    }
    /**
     * @return Optional. A list of python packages to be installed. Valid formats include Cloud Storage URI to a PIP installable library. For example, gs://bucket-name/my/path/to/lib.tar.gz
     * 
     */
    public List<String> pythonPackages() {
        return this.pythonPackages;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String imageVersion;
        private List<String> javaLibraries;
        private Map<String,String> properties;
        private List<String> pythonPackages;
        public Builder() {}
        public Builder(GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.imageVersion = defaults.imageVersion;
    	      this.javaLibraries = defaults.javaLibraries;
    	      this.properties = defaults.properties;
    	      this.pythonPackages = defaults.pythonPackages;
        }

        @CustomType.Setter
        public Builder imageVersion(String imageVersion) {
            this.imageVersion = Objects.requireNonNull(imageVersion);
            return this;
        }
        @CustomType.Setter
        public Builder javaLibraries(List<String> javaLibraries) {
            this.javaLibraries = Objects.requireNonNull(javaLibraries);
            return this;
        }
        public Builder javaLibraries(String... javaLibraries) {
            return javaLibraries(List.of(javaLibraries));
        }
        @CustomType.Setter
        public Builder properties(Map<String,String> properties) {
            this.properties = Objects.requireNonNull(properties);
            return this;
        }
        @CustomType.Setter
        public Builder pythonPackages(List<String> pythonPackages) {
            this.pythonPackages = Objects.requireNonNull(pythonPackages);
            return this;
        }
        public Builder pythonPackages(String... pythonPackages) {
            return pythonPackages(List.of(pythonPackages));
        }
        public GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeResponse build() {
            final var o = new GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeResponse();
            o.imageVersion = imageVersion;
            o.javaLibraries = javaLibraries;
            o.properties = properties;
            o.pythonPackages = pythonPackages;
            return o;
        }
    }
}
