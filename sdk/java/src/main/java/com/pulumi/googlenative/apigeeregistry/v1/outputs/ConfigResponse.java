// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.apigeeregistry.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ConfigResponse {
    /**
     * @return The Customer Managed Encryption Key (CMEK) used for data encryption. The CMEK name should follow the format of `projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)`, where the `location` must match InstanceConfig.location.
     * 
     */
    private String cmekKeyName;
    /**
     * @return The GCP location where the Instance resides.
     * 
     */
    private String location;

    private ConfigResponse() {}
    /**
     * @return The Customer Managed Encryption Key (CMEK) used for data encryption. The CMEK name should follow the format of `projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)`, where the `location` must match InstanceConfig.location.
     * 
     */
    public String cmekKeyName() {
        return this.cmekKeyName;
    }
    /**
     * @return The GCP location where the Instance resides.
     * 
     */
    public String location() {
        return this.location;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConfigResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String cmekKeyName;
        private String location;
        public Builder() {}
        public Builder(ConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cmekKeyName = defaults.cmekKeyName;
    	      this.location = defaults.location;
        }

        @CustomType.Setter
        public Builder cmekKeyName(String cmekKeyName) {
            this.cmekKeyName = Objects.requireNonNull(cmekKeyName);
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        public ConfigResponse build() {
            final var o = new ConfigResponse();
            o.cmekKeyName = cmekKeyName;
            o.location = location;
            return o;
        }
    }
}
