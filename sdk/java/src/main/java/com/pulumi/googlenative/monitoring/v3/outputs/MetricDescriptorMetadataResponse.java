// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.monitoring.v3.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class MetricDescriptorMetadataResponse {
    /**
     * @return The delay of data points caused by ingestion. Data points older than this age are guaranteed to be ingested and available to be read, excluding data loss due to errors.
     * 
     */
    private String ingestDelay;
    /**
     * @return Deprecated. Must use the MetricDescriptor.launch_stage instead.
     * 
     * @deprecated
     * Deprecated. Must use the MetricDescriptor.launch_stage instead.
     * 
     */
    @Deprecated /* Deprecated. Must use the MetricDescriptor.launch_stage instead. */
    private String launchStage;
    /**
     * @return The sampling period of metric data points. For metrics which are written periodically, consecutive data points are stored at this time interval, excluding data loss due to errors. Metrics with a higher granularity have a smaller sampling period.
     * 
     */
    private String samplePeriod;

    private MetricDescriptorMetadataResponse() {}
    /**
     * @return The delay of data points caused by ingestion. Data points older than this age are guaranteed to be ingested and available to be read, excluding data loss due to errors.
     * 
     */
    public String ingestDelay() {
        return this.ingestDelay;
    }
    /**
     * @return Deprecated. Must use the MetricDescriptor.launch_stage instead.
     * 
     * @deprecated
     * Deprecated. Must use the MetricDescriptor.launch_stage instead.
     * 
     */
    @Deprecated /* Deprecated. Must use the MetricDescriptor.launch_stage instead. */
    public String launchStage() {
        return this.launchStage;
    }
    /**
     * @return The sampling period of metric data points. For metrics which are written periodically, consecutive data points are stored at this time interval, excluding data loss due to errors. Metrics with a higher granularity have a smaller sampling period.
     * 
     */
    public String samplePeriod() {
        return this.samplePeriod;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MetricDescriptorMetadataResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String ingestDelay;
        private String launchStage;
        private String samplePeriod;
        public Builder() {}
        public Builder(MetricDescriptorMetadataResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ingestDelay = defaults.ingestDelay;
    	      this.launchStage = defaults.launchStage;
    	      this.samplePeriod = defaults.samplePeriod;
        }

        @CustomType.Setter
        public Builder ingestDelay(String ingestDelay) {
            this.ingestDelay = Objects.requireNonNull(ingestDelay);
            return this;
        }
        @CustomType.Setter
        public Builder launchStage(String launchStage) {
            this.launchStage = Objects.requireNonNull(launchStage);
            return this;
        }
        @CustomType.Setter
        public Builder samplePeriod(String samplePeriod) {
            this.samplePeriod = Objects.requireNonNull(samplePeriod);
            return this;
        }
        public MetricDescriptorMetadataResponse build() {
            final var o = new MetricDescriptorMetadataResponse();
            o.ingestDelay = ingestDelay;
            o.launchStage = launchStage;
            o.samplePeriod = samplePeriod;
            return o;
        }
    }
}
