// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.compute.v1.outputs.SecurityPolicyAdaptiveProtectionConfigResponse;
import com.pulumi.googlenative.compute.v1.outputs.SecurityPolicyAdvancedOptionsConfigResponse;
import com.pulumi.googlenative.compute.v1.outputs.SecurityPolicyDdosProtectionConfigResponse;
import com.pulumi.googlenative.compute.v1.outputs.SecurityPolicyRecaptchaOptionsConfigResponse;
import com.pulumi.googlenative.compute.v1.outputs.SecurityPolicyRuleResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetRegionSecurityPolicyResult {
    private SecurityPolicyAdaptiveProtectionConfigResponse adaptiveProtectionConfig;
    private SecurityPolicyAdvancedOptionsConfigResponse advancedOptionsConfig;
    /**
     * @return Creation timestamp in RFC3339 text format.
     * 
     */
    private String creationTimestamp;
    private SecurityPolicyDdosProtectionConfigResponse ddosProtectionConfig;
    /**
     * @return An optional description of this resource. Provide this property when you create the resource.
     * 
     */
    private String description;
    /**
     * @return Specifies a fingerprint for this resource, which is essentially a hash of the metadata&#39;s contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update metadata. You must always provide an up-to-date fingerprint hash in order to update or change metadata, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make get() request to the security policy.
     * 
     */
    private String fingerprint;
    /**
     * @return [Output only] Type of the resource. Always compute#securityPolicyfor security policies
     * 
     */
    private String kind;
    /**
     * @return Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     * 
     */
    private String name;
    private SecurityPolicyRecaptchaOptionsConfigResponse recaptchaOptionsConfig;
    /**
     * @return URL of the region where the regional security policy resides. This field is not applicable to global security policies.
     * 
     */
    private String region;
    /**
     * @return A list of rules that belong to this policy. There must always be a default rule (rule with priority 2147483647 and match &#34;*&#34;). If no rules are provided when creating a security policy, a default rule with action &#34;allow&#34; will be added.
     * 
     */
    private List<SecurityPolicyRuleResponse> rules;
    /**
     * @return Server-defined URL for the resource.
     * 
     */
    private String selfLink;
    /**
     * @return The type indicates the intended use of the security policy. - CLOUD_ARMOR: Cloud Armor backend security policies can be configured to filter incoming HTTP requests targeting backend services. They filter requests before they hit the origin servers. - CLOUD_ARMOR_EDGE: Cloud Armor edge security policies can be configured to filter incoming HTTP requests targeting backend services (including Cloud CDN-enabled) as well as backend buckets (Cloud Storage). They filter requests before the request is served from Google&#39;s cache. - CLOUD_ARMOR_INTERNAL_SERVICE: Cloud Armor internal service policies can be configured to filter HTTP requests targeting services managed by Traffic Director in a service mesh. They filter requests before the request is served from the application. This field can be set only at resource creation time.
     * 
     */
    private String type;

    private GetRegionSecurityPolicyResult() {}
    public SecurityPolicyAdaptiveProtectionConfigResponse adaptiveProtectionConfig() {
        return this.adaptiveProtectionConfig;
    }
    public SecurityPolicyAdvancedOptionsConfigResponse advancedOptionsConfig() {
        return this.advancedOptionsConfig;
    }
    /**
     * @return Creation timestamp in RFC3339 text format.
     * 
     */
    public String creationTimestamp() {
        return this.creationTimestamp;
    }
    public SecurityPolicyDdosProtectionConfigResponse ddosProtectionConfig() {
        return this.ddosProtectionConfig;
    }
    /**
     * @return An optional description of this resource. Provide this property when you create the resource.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Specifies a fingerprint for this resource, which is essentially a hash of the metadata&#39;s contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update metadata. You must always provide an up-to-date fingerprint hash in order to update or change metadata, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make get() request to the security policy.
     * 
     */
    public String fingerprint() {
        return this.fingerprint;
    }
    /**
     * @return [Output only] Type of the resource. Always compute#securityPolicyfor security policies
     * 
     */
    public String kind() {
        return this.kind;
    }
    /**
     * @return Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     * 
     */
    public String name() {
        return this.name;
    }
    public SecurityPolicyRecaptchaOptionsConfigResponse recaptchaOptionsConfig() {
        return this.recaptchaOptionsConfig;
    }
    /**
     * @return URL of the region where the regional security policy resides. This field is not applicable to global security policies.
     * 
     */
    public String region() {
        return this.region;
    }
    /**
     * @return A list of rules that belong to this policy. There must always be a default rule (rule with priority 2147483647 and match &#34;*&#34;). If no rules are provided when creating a security policy, a default rule with action &#34;allow&#34; will be added.
     * 
     */
    public List<SecurityPolicyRuleResponse> rules() {
        return this.rules;
    }
    /**
     * @return Server-defined URL for the resource.
     * 
     */
    public String selfLink() {
        return this.selfLink;
    }
    /**
     * @return The type indicates the intended use of the security policy. - CLOUD_ARMOR: Cloud Armor backend security policies can be configured to filter incoming HTTP requests targeting backend services. They filter requests before they hit the origin servers. - CLOUD_ARMOR_EDGE: Cloud Armor edge security policies can be configured to filter incoming HTTP requests targeting backend services (including Cloud CDN-enabled) as well as backend buckets (Cloud Storage). They filter requests before the request is served from Google&#39;s cache. - CLOUD_ARMOR_INTERNAL_SERVICE: Cloud Armor internal service policies can be configured to filter HTTP requests targeting services managed by Traffic Director in a service mesh. They filter requests before the request is served from the application. This field can be set only at resource creation time.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRegionSecurityPolicyResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private SecurityPolicyAdaptiveProtectionConfigResponse adaptiveProtectionConfig;
        private SecurityPolicyAdvancedOptionsConfigResponse advancedOptionsConfig;
        private String creationTimestamp;
        private SecurityPolicyDdosProtectionConfigResponse ddosProtectionConfig;
        private String description;
        private String fingerprint;
        private String kind;
        private String name;
        private SecurityPolicyRecaptchaOptionsConfigResponse recaptchaOptionsConfig;
        private String region;
        private List<SecurityPolicyRuleResponse> rules;
        private String selfLink;
        private String type;
        public Builder() {}
        public Builder(GetRegionSecurityPolicyResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adaptiveProtectionConfig = defaults.adaptiveProtectionConfig;
    	      this.advancedOptionsConfig = defaults.advancedOptionsConfig;
    	      this.creationTimestamp = defaults.creationTimestamp;
    	      this.ddosProtectionConfig = defaults.ddosProtectionConfig;
    	      this.description = defaults.description;
    	      this.fingerprint = defaults.fingerprint;
    	      this.kind = defaults.kind;
    	      this.name = defaults.name;
    	      this.recaptchaOptionsConfig = defaults.recaptchaOptionsConfig;
    	      this.region = defaults.region;
    	      this.rules = defaults.rules;
    	      this.selfLink = defaults.selfLink;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder adaptiveProtectionConfig(SecurityPolicyAdaptiveProtectionConfigResponse adaptiveProtectionConfig) {
            this.adaptiveProtectionConfig = Objects.requireNonNull(adaptiveProtectionConfig);
            return this;
        }
        @CustomType.Setter
        public Builder advancedOptionsConfig(SecurityPolicyAdvancedOptionsConfigResponse advancedOptionsConfig) {
            this.advancedOptionsConfig = Objects.requireNonNull(advancedOptionsConfig);
            return this;
        }
        @CustomType.Setter
        public Builder creationTimestamp(String creationTimestamp) {
            this.creationTimestamp = Objects.requireNonNull(creationTimestamp);
            return this;
        }
        @CustomType.Setter
        public Builder ddosProtectionConfig(SecurityPolicyDdosProtectionConfigResponse ddosProtectionConfig) {
            this.ddosProtectionConfig = Objects.requireNonNull(ddosProtectionConfig);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder fingerprint(String fingerprint) {
            this.fingerprint = Objects.requireNonNull(fingerprint);
            return this;
        }
        @CustomType.Setter
        public Builder kind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder recaptchaOptionsConfig(SecurityPolicyRecaptchaOptionsConfigResponse recaptchaOptionsConfig) {
            this.recaptchaOptionsConfig = Objects.requireNonNull(recaptchaOptionsConfig);
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            this.region = Objects.requireNonNull(region);
            return this;
        }
        @CustomType.Setter
        public Builder rules(List<SecurityPolicyRuleResponse> rules) {
            this.rules = Objects.requireNonNull(rules);
            return this;
        }
        public Builder rules(SecurityPolicyRuleResponse... rules) {
            return rules(List.of(rules));
        }
        @CustomType.Setter
        public Builder selfLink(String selfLink) {
            this.selfLink = Objects.requireNonNull(selfLink);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetRegionSecurityPolicyResult build() {
            final var o = new GetRegionSecurityPolicyResult();
            o.adaptiveProtectionConfig = adaptiveProtectionConfig;
            o.advancedOptionsConfig = advancedOptionsConfig;
            o.creationTimestamp = creationTimestamp;
            o.ddosProtectionConfig = ddosProtectionConfig;
            o.description = description;
            o.fingerprint = fingerprint;
            o.kind = kind;
            o.name = name;
            o.recaptchaOptionsConfig = recaptchaOptionsConfig;
            o.region = region;
            o.rules = rules;
            o.selfLink = selfLink;
            o.type = type;
            return o;
        }
    }
}
