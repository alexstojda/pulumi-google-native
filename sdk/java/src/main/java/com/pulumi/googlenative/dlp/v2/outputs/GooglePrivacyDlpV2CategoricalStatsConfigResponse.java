// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dlp.v2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.dlp.v2.outputs.GooglePrivacyDlpV2FieldIdResponse;
import java.util.Objects;

@CustomType
public final class GooglePrivacyDlpV2CategoricalStatsConfigResponse {
    /**
     * @return Field to compute categorical stats on. All column types are supported except for arrays and structs. However, it may be more informative to use NumericalStats when the field type is supported, depending on the data.
     * 
     */
    private GooglePrivacyDlpV2FieldIdResponse field;

    private GooglePrivacyDlpV2CategoricalStatsConfigResponse() {}
    /**
     * @return Field to compute categorical stats on. All column types are supported except for arrays and structs. However, it may be more informative to use NumericalStats when the field type is supported, depending on the data.
     * 
     */
    public GooglePrivacyDlpV2FieldIdResponse field() {
        return this.field;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GooglePrivacyDlpV2CategoricalStatsConfigResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GooglePrivacyDlpV2FieldIdResponse field;
        public Builder() {}
        public Builder(GooglePrivacyDlpV2CategoricalStatsConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.field = defaults.field;
        }

        @CustomType.Setter
        public Builder field(GooglePrivacyDlpV2FieldIdResponse field) {
            this.field = Objects.requireNonNull(field);
            return this;
        }
        public GooglePrivacyDlpV2CategoricalStatsConfigResponse build() {
            final var o = new GooglePrivacyDlpV2CategoricalStatsConfigResponse();
            o.field = field;
            return o;
        }
    }
}
