// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.containeranalysis.v1alpha1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.containeranalysis.v1alpha1.outputs.CVSSResponse;
import com.pulumi.googlenative.containeranalysis.v1alpha1.outputs.PackageIssueResponse;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class VulnerabilityDetailsResponse {
    /**
     * @return The CVSS score of this vulnerability. CVSS score is on a scale of 0-10 where 0 indicates low severity and 10 indicates high severity.
     * 
     */
    private Double cvssScore;
    /**
     * @return The CVSS v3 score of this vulnerability.
     * 
     */
    private CVSSResponse cvssV3;
    /**
     * @return The distro assigned severity for this vulnerability when that is available and note provider assigned severity when distro has not yet assigned a severity for this vulnerability. When there are multiple package issues for this vulnerability, they can have different effective severities because some might come from the distro and some might come from installed language packs (e.g. Maven JARs or Go binaries). For this reason, it is advised to use the effective severity on the PackageIssue level, as this field may eventually be deprecated. In the case where multiple PackageIssues have different effective severities, the one set here will be the highest severity of any of the PackageIssues.
     * 
     */
    private String effectiveSeverity;
    /**
     * @return The set of affected locations and their fixes (if available) within the associated resource.
     * 
     */
    private List<PackageIssueResponse> packageIssue;
    /**
     * @return The note provider assigned Severity of the vulnerability.
     * 
     */
    private String severity;
    /**
     * @return The type of package; whether native or non native(ruby gems, node.js packages etc). This may be deprecated in the future because we can have multiple PackageIssues with different package types.
     * 
     */
    private String type;

    private VulnerabilityDetailsResponse() {}
    /**
     * @return The CVSS score of this vulnerability. CVSS score is on a scale of 0-10 where 0 indicates low severity and 10 indicates high severity.
     * 
     */
    public Double cvssScore() {
        return this.cvssScore;
    }
    /**
     * @return The CVSS v3 score of this vulnerability.
     * 
     */
    public CVSSResponse cvssV3() {
        return this.cvssV3;
    }
    /**
     * @return The distro assigned severity for this vulnerability when that is available and note provider assigned severity when distro has not yet assigned a severity for this vulnerability. When there are multiple package issues for this vulnerability, they can have different effective severities because some might come from the distro and some might come from installed language packs (e.g. Maven JARs or Go binaries). For this reason, it is advised to use the effective severity on the PackageIssue level, as this field may eventually be deprecated. In the case where multiple PackageIssues have different effective severities, the one set here will be the highest severity of any of the PackageIssues.
     * 
     */
    public String effectiveSeverity() {
        return this.effectiveSeverity;
    }
    /**
     * @return The set of affected locations and their fixes (if available) within the associated resource.
     * 
     */
    public List<PackageIssueResponse> packageIssue() {
        return this.packageIssue;
    }
    /**
     * @return The note provider assigned Severity of the vulnerability.
     * 
     */
    public String severity() {
        return this.severity;
    }
    /**
     * @return The type of package; whether native or non native(ruby gems, node.js packages etc). This may be deprecated in the future because we can have multiple PackageIssues with different package types.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VulnerabilityDetailsResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Double cvssScore;
        private CVSSResponse cvssV3;
        private String effectiveSeverity;
        private List<PackageIssueResponse> packageIssue;
        private String severity;
        private String type;
        public Builder() {}
        public Builder(VulnerabilityDetailsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cvssScore = defaults.cvssScore;
    	      this.cvssV3 = defaults.cvssV3;
    	      this.effectiveSeverity = defaults.effectiveSeverity;
    	      this.packageIssue = defaults.packageIssue;
    	      this.severity = defaults.severity;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder cvssScore(Double cvssScore) {
            this.cvssScore = Objects.requireNonNull(cvssScore);
            return this;
        }
        @CustomType.Setter
        public Builder cvssV3(CVSSResponse cvssV3) {
            this.cvssV3 = Objects.requireNonNull(cvssV3);
            return this;
        }
        @CustomType.Setter
        public Builder effectiveSeverity(String effectiveSeverity) {
            this.effectiveSeverity = Objects.requireNonNull(effectiveSeverity);
            return this;
        }
        @CustomType.Setter
        public Builder packageIssue(List<PackageIssueResponse> packageIssue) {
            this.packageIssue = Objects.requireNonNull(packageIssue);
            return this;
        }
        public Builder packageIssue(PackageIssueResponse... packageIssue) {
            return packageIssue(List.of(packageIssue));
        }
        @CustomType.Setter
        public Builder severity(String severity) {
            this.severity = Objects.requireNonNull(severity);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public VulnerabilityDetailsResponse build() {
            final var o = new VulnerabilityDetailsResponse();
            o.cvssScore = cvssScore;
            o.cvssV3 = cvssV3;
            o.effectiveSeverity = effectiveSeverity;
            o.packageIssue = packageIssue;
            o.severity = severity;
            o.type = type;
            return o;
        }
    }
}
