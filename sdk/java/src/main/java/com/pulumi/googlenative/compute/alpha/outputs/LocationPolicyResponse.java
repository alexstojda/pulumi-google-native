// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute.alpha.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class LocationPolicyResponse {
    /**
     * @return Location configurations mapped by location name. Currently only zone names are supported and must be represented as valid internal URLs, such as zones/us-central1-a.
     * 
     */
    private Map<String,String> locations;
    /**
     * @return Strategy for distributing VMs across zones in a region.
     * 
     */
    private String targetShape;

    private LocationPolicyResponse() {}
    /**
     * @return Location configurations mapped by location name. Currently only zone names are supported and must be represented as valid internal URLs, such as zones/us-central1-a.
     * 
     */
    public Map<String,String> locations() {
        return this.locations;
    }
    /**
     * @return Strategy for distributing VMs across zones in a region.
     * 
     */
    public String targetShape() {
        return this.targetShape;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LocationPolicyResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Map<String,String> locations;
        private String targetShape;
        public Builder() {}
        public Builder(LocationPolicyResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.locations = defaults.locations;
    	      this.targetShape = defaults.targetShape;
        }

        @CustomType.Setter
        public Builder locations(Map<String,String> locations) {
            this.locations = Objects.requireNonNull(locations);
            return this;
        }
        @CustomType.Setter
        public Builder targetShape(String targetShape) {
            this.targetShape = Objects.requireNonNull(targetShape);
            return this;
        }
        public LocationPolicyResponse build() {
            final var o = new LocationPolicyResponse();
            o.locations = locations;
            o.targetShape = targetShape;
            return o;
        }
    }
}
