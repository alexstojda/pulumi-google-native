// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.networkconnectivity.v1alpha1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetHubResult {
    /**
     * @return Time when the Hub was created.
     * 
     */
    private String createTime;
    /**
     * @return Short description of the hub resource.
     * 
     */
    private String description;
    /**
     * @return User-defined labels.
     * 
     */
    private Map<String,String> labels;
    /**
     * @return Immutable. The name of a Hub resource.
     * 
     */
    private String name;
    /**
     * @return A list of the URIs of all attached spokes. This field is deprecated and will not be included in future API versions. Call ListSpokes on each region instead.
     * 
     * @deprecated
     * Output only. A list of the URIs of all attached spokes. This field is deprecated and will not be included in future API versions. Call ListSpokes on each region instead.
     * 
     */
    @Deprecated /* Output only. A list of the URIs of all attached spokes. This field is deprecated and will not be included in future API versions. Call ListSpokes on each region instead. */
    private List<String> spokes;
    /**
     * @return The current lifecycle state of this Hub.
     * 
     */
    private String state;
    /**
     * @return Google-generated UUID for this resource. This is unique across all Hub resources. If a Hub resource is deleted and another with the same name is created, it gets a different unique_id.
     * 
     */
    private String uniqueId;
    /**
     * @return Time when the Hub was updated.
     * 
     */
    private String updateTime;

    private GetHubResult() {}
    /**
     * @return Time when the Hub was created.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return Short description of the hub resource.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return User-defined labels.
     * 
     */
    public Map<String,String> labels() {
        return this.labels;
    }
    /**
     * @return Immutable. The name of a Hub resource.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return A list of the URIs of all attached spokes. This field is deprecated and will not be included in future API versions. Call ListSpokes on each region instead.
     * 
     * @deprecated
     * Output only. A list of the URIs of all attached spokes. This field is deprecated and will not be included in future API versions. Call ListSpokes on each region instead.
     * 
     */
    @Deprecated /* Output only. A list of the URIs of all attached spokes. This field is deprecated and will not be included in future API versions. Call ListSpokes on each region instead. */
    public List<String> spokes() {
        return this.spokes;
    }
    /**
     * @return The current lifecycle state of this Hub.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Google-generated UUID for this resource. This is unique across all Hub resources. If a Hub resource is deleted and another with the same name is created, it gets a different unique_id.
     * 
     */
    public String uniqueId() {
        return this.uniqueId;
    }
    /**
     * @return Time when the Hub was updated.
     * 
     */
    public String updateTime() {
        return this.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetHubResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String createTime;
        private String description;
        private Map<String,String> labels;
        private String name;
        private List<String> spokes;
        private String state;
        private String uniqueId;
        private String updateTime;
        public Builder() {}
        public Builder(GetHubResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.description = defaults.description;
    	      this.labels = defaults.labels;
    	      this.name = defaults.name;
    	      this.spokes = defaults.spokes;
    	      this.state = defaults.state;
    	      this.uniqueId = defaults.uniqueId;
    	      this.updateTime = defaults.updateTime;
        }

        @CustomType.Setter
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder labels(Map<String,String> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder spokes(List<String> spokes) {
            this.spokes = Objects.requireNonNull(spokes);
            return this;
        }
        public Builder spokes(String... spokes) {
            return spokes(List.of(spokes));
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder uniqueId(String uniqueId) {
            this.uniqueId = Objects.requireNonNull(uniqueId);
            return this;
        }
        @CustomType.Setter
        public Builder updateTime(String updateTime) {
            this.updateTime = Objects.requireNonNull(updateTime);
            return this;
        }
        public GetHubResult build() {
            final var o = new GetHubResult();
            o.createTime = createTime;
            o.description = description;
            o.labels = labels;
            o.name = name;
            o.spokes = spokes;
            o.state = state;
            o.uniqueId = uniqueId;
            o.updateTime = updateTime;
            return o;
        }
    }
}
