// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.compute.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.compute.v1.outputs.AuthorizationLoggingOptionsResponse;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class LogConfigCloudAuditOptionsResponse {
    /**
     * @return This is deprecated and has no effect. Do not use.
     * 
     */
    private AuthorizationLoggingOptionsResponse authorizationLoggingOptions;
    /**
     * @return This is deprecated and has no effect. Do not use.
     * 
     */
    private String logName;

    private LogConfigCloudAuditOptionsResponse() {}
    /**
     * @return This is deprecated and has no effect. Do not use.
     * 
     */
    public AuthorizationLoggingOptionsResponse authorizationLoggingOptions() {
        return this.authorizationLoggingOptions;
    }
    /**
     * @return This is deprecated and has no effect. Do not use.
     * 
     */
    public String logName() {
        return this.logName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LogConfigCloudAuditOptionsResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private AuthorizationLoggingOptionsResponse authorizationLoggingOptions;
        private String logName;
        public Builder() {}
        public Builder(LogConfigCloudAuditOptionsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authorizationLoggingOptions = defaults.authorizationLoggingOptions;
    	      this.logName = defaults.logName;
        }

        @CustomType.Setter
        public Builder authorizationLoggingOptions(AuthorizationLoggingOptionsResponse authorizationLoggingOptions) {
            this.authorizationLoggingOptions = Objects.requireNonNull(authorizationLoggingOptions);
            return this;
        }
        @CustomType.Setter
        public Builder logName(String logName) {
            this.logName = Objects.requireNonNull(logName);
            return this;
        }
        public LogConfigCloudAuditOptionsResponse build() {
            final var o = new LogConfigCloudAuditOptionsResponse();
            o.authorizationLoggingOptions = authorizationLoggingOptions;
            o.logName = logName;
            return o;
        }
    }
}
