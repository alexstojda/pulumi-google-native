// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.notebooks.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.notebooks.v1.outputs.ExecutionResponse;
import com.pulumi.googlenative.notebooks.v1.outputs.ExecutionTemplateResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetScheduleResult {
    /**
     * @return Time the schedule was created.
     * 
     */
    private String createTime;
    /**
     * @return Cron-tab formatted schedule by which the job will execute. Format: minute, hour, day of month, month, day of week, e.g. 0 0 * * WED = every Wednesday More examples: https://crontab.guru/examples.html
     * 
     */
    private String cronSchedule;
    /**
     * @return A brief description of this environment.
     * 
     */
    private String description;
    /**
     * @return Display name used for UI purposes. Name can only contain alphanumeric characters, hyphens &#39;-&#39;, and underscores &#39;_&#39;.
     * 
     */
    private String displayName;
    /**
     * @return Notebook Execution Template corresponding to this schedule.
     * 
     */
    private ExecutionTemplateResponse executionTemplate;
    /**
     * @return The name of this schedule. Format: `projects/{project_id}/locations/{location}/schedules/{schedule_id}`
     * 
     */
    private String name;
    /**
     * @return The most recent execution names triggered from this schedule and their corresponding states.
     * 
     */
    private List<ExecutionResponse> recentExecutions;
    private String state;
    /**
     * @return Timezone on which the cron_schedule. The value of this field must be a time zone name from the tz database. TZ Database: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones Note that some time zones include a provision for daylight savings time. The rules for daylight saving time are determined by the chosen tz. For UTC use the string &#34;utc&#34;. If a time zone is not specified, the default will be in UTC (also known as GMT).
     * 
     */
    private String timeZone;
    /**
     * @return Time the schedule was last updated.
     * 
     */
    private String updateTime;

    private GetScheduleResult() {}
    /**
     * @return Time the schedule was created.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return Cron-tab formatted schedule by which the job will execute. Format: minute, hour, day of month, month, day of week, e.g. 0 0 * * WED = every Wednesday More examples: https://crontab.guru/examples.html
     * 
     */
    public String cronSchedule() {
        return this.cronSchedule;
    }
    /**
     * @return A brief description of this environment.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Display name used for UI purposes. Name can only contain alphanumeric characters, hyphens &#39;-&#39;, and underscores &#39;_&#39;.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Notebook Execution Template corresponding to this schedule.
     * 
     */
    public ExecutionTemplateResponse executionTemplate() {
        return this.executionTemplate;
    }
    /**
     * @return The name of this schedule. Format: `projects/{project_id}/locations/{location}/schedules/{schedule_id}`
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The most recent execution names triggered from this schedule and their corresponding states.
     * 
     */
    public List<ExecutionResponse> recentExecutions() {
        return this.recentExecutions;
    }
    public String state() {
        return this.state;
    }
    /**
     * @return Timezone on which the cron_schedule. The value of this field must be a time zone name from the tz database. TZ Database: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones Note that some time zones include a provision for daylight savings time. The rules for daylight saving time are determined by the chosen tz. For UTC use the string &#34;utc&#34;. If a time zone is not specified, the default will be in UTC (also known as GMT).
     * 
     */
    public String timeZone() {
        return this.timeZone;
    }
    /**
     * @return Time the schedule was last updated.
     * 
     */
    public String updateTime() {
        return this.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetScheduleResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String createTime;
        private String cronSchedule;
        private String description;
        private String displayName;
        private ExecutionTemplateResponse executionTemplate;
        private String name;
        private List<ExecutionResponse> recentExecutions;
        private String state;
        private String timeZone;
        private String updateTime;
        public Builder() {}
        public Builder(GetScheduleResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.cronSchedule = defaults.cronSchedule;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.executionTemplate = defaults.executionTemplate;
    	      this.name = defaults.name;
    	      this.recentExecutions = defaults.recentExecutions;
    	      this.state = defaults.state;
    	      this.timeZone = defaults.timeZone;
    	      this.updateTime = defaults.updateTime;
        }

        @CustomType.Setter
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        @CustomType.Setter
        public Builder cronSchedule(String cronSchedule) {
            this.cronSchedule = Objects.requireNonNull(cronSchedule);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder executionTemplate(ExecutionTemplateResponse executionTemplate) {
            this.executionTemplate = Objects.requireNonNull(executionTemplate);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder recentExecutions(List<ExecutionResponse> recentExecutions) {
            this.recentExecutions = Objects.requireNonNull(recentExecutions);
            return this;
        }
        public Builder recentExecutions(ExecutionResponse... recentExecutions) {
            return recentExecutions(List.of(recentExecutions));
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder timeZone(String timeZone) {
            this.timeZone = Objects.requireNonNull(timeZone);
            return this;
        }
        @CustomType.Setter
        public Builder updateTime(String updateTime) {
            this.updateTime = Objects.requireNonNull(updateTime);
            return this;
        }
        public GetScheduleResult build() {
            final var o = new GetScheduleResult();
            o.createTime = createTime;
            o.cronSchedule = cronSchedule;
            o.description = description;
            o.displayName = displayName;
            o.executionTemplate = executionTemplate;
            o.name = name;
            o.recentExecutions = recentExecutions;
            o.state = state;
            o.timeZone = timeZone;
            o.updateTime = updateTime;
            return o;
        }
    }
}
