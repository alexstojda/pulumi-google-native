// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.appengine.v1beta.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.util.Objects;

@CustomType
public final class FeatureSettingsResponse {
    /**
     * @return Boolean value indicating if split health checks should be used instead of the legacy health checks. At an app.yaml level, this means defaulting to &#39;readiness_check&#39; and &#39;liveness_check&#39; values instead of &#39;health_check&#39; ones. Once the legacy &#39;health_check&#39; behavior is deprecated, and this value is always true, this setting can be removed.
     * 
     */
    private Boolean splitHealthChecks;
    /**
     * @return If true, use Container-Optimized OS (https://cloud.google.com/container-optimized-os/) base image for VMs, rather than a base Debian image.
     * 
     */
    private Boolean useContainerOptimizedOs;

    private FeatureSettingsResponse() {}
    /**
     * @return Boolean value indicating if split health checks should be used instead of the legacy health checks. At an app.yaml level, this means defaulting to &#39;readiness_check&#39; and &#39;liveness_check&#39; values instead of &#39;health_check&#39; ones. Once the legacy &#39;health_check&#39; behavior is deprecated, and this value is always true, this setting can be removed.
     * 
     */
    public Boolean splitHealthChecks() {
        return this.splitHealthChecks;
    }
    /**
     * @return If true, use Container-Optimized OS (https://cloud.google.com/container-optimized-os/) base image for VMs, rather than a base Debian image.
     * 
     */
    public Boolean useContainerOptimizedOs() {
        return this.useContainerOptimizedOs;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FeatureSettingsResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean splitHealthChecks;
        private Boolean useContainerOptimizedOs;
        public Builder() {}
        public Builder(FeatureSettingsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.splitHealthChecks = defaults.splitHealthChecks;
    	      this.useContainerOptimizedOs = defaults.useContainerOptimizedOs;
        }

        @CustomType.Setter
        public Builder splitHealthChecks(Boolean splitHealthChecks) {
            this.splitHealthChecks = Objects.requireNonNull(splitHealthChecks);
            return this;
        }
        @CustomType.Setter
        public Builder useContainerOptimizedOs(Boolean useContainerOptimizedOs) {
            this.useContainerOptimizedOs = Objects.requireNonNull(useContainerOptimizedOs);
            return this;
        }
        public FeatureSettingsResponse build() {
            final var o = new FeatureSettingsResponse();
            o.splitHealthChecks = splitHealthChecks;
            o.useContainerOptimizedOs = useContainerOptimizedOs;
            return o;
        }
    }
}
