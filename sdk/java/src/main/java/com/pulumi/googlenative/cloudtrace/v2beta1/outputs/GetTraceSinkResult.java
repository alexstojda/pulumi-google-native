// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.cloudtrace.v2beta1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.cloudtrace.v2beta1.outputs.OutputConfigResponse;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetTraceSinkResult {
    /**
     * @return The canonical sink resource name, unique within the project. Must be of the form: projects/[PROJECT_NUMBER]/traceSinks/[SINK_ID]. E.g.: `&#34;projects/12345/traceSinks/my-project-trace-sink&#34;`. Sink identifiers are limited to 256 characters and can include only the following characters: upper and lower-case alphanumeric characters, underscores, hyphens, and periods.
     * 
     */
    private String name;
    /**
     * @return The export destination.
     * 
     */
    private OutputConfigResponse outputConfig;
    /**
     * @return A service account name for exporting the data. This field is set by sinks.create and sinks.update. The service account will need to be granted write access to the destination specified in the output configuration, see [Granting access for a resource](/iam/docs/granting-roles-to-service-accounts#granting_access_to_a_service_account_for_a_resource). To create tables and to write data, this account needs the `dataEditor` role. Read more about roles in the [BigQuery documentation](https://cloud.google.com/bigquery/docs/access-control). E.g.: &#34;service-00000001@00000002.iam.gserviceaccount.com&#34;
     * 
     */
    private String writerIdentity;

    private GetTraceSinkResult() {}
    /**
     * @return The canonical sink resource name, unique within the project. Must be of the form: projects/[PROJECT_NUMBER]/traceSinks/[SINK_ID]. E.g.: `&#34;projects/12345/traceSinks/my-project-trace-sink&#34;`. Sink identifiers are limited to 256 characters and can include only the following characters: upper and lower-case alphanumeric characters, underscores, hyphens, and periods.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The export destination.
     * 
     */
    public OutputConfigResponse outputConfig() {
        return this.outputConfig;
    }
    /**
     * @return A service account name for exporting the data. This field is set by sinks.create and sinks.update. The service account will need to be granted write access to the destination specified in the output configuration, see [Granting access for a resource](/iam/docs/granting-roles-to-service-accounts#granting_access_to_a_service_account_for_a_resource). To create tables and to write data, this account needs the `dataEditor` role. Read more about roles in the [BigQuery documentation](https://cloud.google.com/bigquery/docs/access-control). E.g.: &#34;service-00000001@00000002.iam.gserviceaccount.com&#34;
     * 
     */
    public String writerIdentity() {
        return this.writerIdentity;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTraceSinkResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String name;
        private OutputConfigResponse outputConfig;
        private String writerIdentity;
        public Builder() {}
        public Builder(GetTraceSinkResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.outputConfig = defaults.outputConfig;
    	      this.writerIdentity = defaults.writerIdentity;
        }

        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder outputConfig(OutputConfigResponse outputConfig) {
            this.outputConfig = Objects.requireNonNull(outputConfig);
            return this;
        }
        @CustomType.Setter
        public Builder writerIdentity(String writerIdentity) {
            this.writerIdentity = Objects.requireNonNull(writerIdentity);
            return this;
        }
        public GetTraceSinkResult build() {
            final var o = new GetTraceSinkResult();
            o.name = name;
            o.outputConfig = outputConfig;
            o.writerIdentity = writerIdentity;
            return o;
        }
    }
}
