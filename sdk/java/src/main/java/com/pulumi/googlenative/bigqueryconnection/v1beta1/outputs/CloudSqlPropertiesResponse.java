// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.bigqueryconnection.v1beta1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.bigqueryconnection.v1beta1.outputs.CloudSqlCredentialResponse;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class CloudSqlPropertiesResponse {
    /**
     * @return Input only. Cloud SQL credential.
     * 
     */
    private CloudSqlCredentialResponse credential;
    /**
     * @return Database name.
     * 
     */
    private String database;
    /**
     * @return Cloud SQL instance ID in the form `project:location:instance`.
     * 
     */
    private String instanceId;
    /**
     * @return The account ID of the service used for the purpose of this connection. When the connection is used in the context of an operation in BigQuery, this service account will serve as identity being used for connecting to the CloudSQL instance specified in this connection.
     * 
     */
    private String serviceAccountId;
    /**
     * @return Type of the Cloud SQL database.
     * 
     */
    private String type;

    private CloudSqlPropertiesResponse() {}
    /**
     * @return Input only. Cloud SQL credential.
     * 
     */
    public CloudSqlCredentialResponse credential() {
        return this.credential;
    }
    /**
     * @return Database name.
     * 
     */
    public String database() {
        return this.database;
    }
    /**
     * @return Cloud SQL instance ID in the form `project:location:instance`.
     * 
     */
    public String instanceId() {
        return this.instanceId;
    }
    /**
     * @return The account ID of the service used for the purpose of this connection. When the connection is used in the context of an operation in BigQuery, this service account will serve as identity being used for connecting to the CloudSQL instance specified in this connection.
     * 
     */
    public String serviceAccountId() {
        return this.serviceAccountId;
    }
    /**
     * @return Type of the Cloud SQL database.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CloudSqlPropertiesResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private CloudSqlCredentialResponse credential;
        private String database;
        private String instanceId;
        private String serviceAccountId;
        private String type;
        public Builder() {}
        public Builder(CloudSqlPropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.credential = defaults.credential;
    	      this.database = defaults.database;
    	      this.instanceId = defaults.instanceId;
    	      this.serviceAccountId = defaults.serviceAccountId;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder credential(CloudSqlCredentialResponse credential) {
            this.credential = Objects.requireNonNull(credential);
            return this;
        }
        @CustomType.Setter
        public Builder database(String database) {
            this.database = Objects.requireNonNull(database);
            return this;
        }
        @CustomType.Setter
        public Builder instanceId(String instanceId) {
            this.instanceId = Objects.requireNonNull(instanceId);
            return this;
        }
        @CustomType.Setter
        public Builder serviceAccountId(String serviceAccountId) {
            this.serviceAccountId = Objects.requireNonNull(serviceAccountId);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public CloudSqlPropertiesResponse build() {
            final var o = new CloudSqlPropertiesResponse();
            o.credential = credential;
            o.database = database;
            o.instanceId = instanceId;
            o.serviceAccountId = serviceAccountId;
            o.type = type;
            return o;
        }
    }
}
