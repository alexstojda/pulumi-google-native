// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.dataproc.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.googlenative.dataproc.v1.outputs.GkeNodePoolTargetResponse;
import com.pulumi.googlenative.dataproc.v1.outputs.NamespacedGkeDeploymentTargetResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GkeClusterConfigResponse {
    /**
     * @return Optional. A target GKE cluster to deploy to. It must be in the same project and region as the Dataproc cluster (the GKE cluster can be zonal or regional). Format: &#39;projects/{project}/locations/{location}/clusters/{cluster_id}&#39;
     * 
     */
    private String gkeClusterTarget;
    /**
     * @return Optional. Deprecated. Use gkeClusterTarget. Used only for the deprecated beta. A target for the deployment.
     * 
     * @deprecated
     * Optional. Deprecated. Use gkeClusterTarget. Used only for the deprecated beta. A target for the deployment.
     * 
     */
    @Deprecated /* Optional. Deprecated. Use gkeClusterTarget. Used only for the deprecated beta. A target for the deployment. */
    private NamespacedGkeDeploymentTargetResponse namespacedGkeDeploymentTarget;
    /**
     * @return Optional. GKE node pools where workloads will be scheduled. At least one node pool must be assigned the DEFAULT GkeNodePoolTarget.Role. If a GkeNodePoolTarget is not specified, Dataproc constructs a DEFAULT GkeNodePoolTarget. Each role can be given to only one GkeNodePoolTarget. All node pools must have the same location settings.
     * 
     */
    private List<GkeNodePoolTargetResponse> nodePoolTarget;

    private GkeClusterConfigResponse() {}
    /**
     * @return Optional. A target GKE cluster to deploy to. It must be in the same project and region as the Dataproc cluster (the GKE cluster can be zonal or regional). Format: &#39;projects/{project}/locations/{location}/clusters/{cluster_id}&#39;
     * 
     */
    public String gkeClusterTarget() {
        return this.gkeClusterTarget;
    }
    /**
     * @return Optional. Deprecated. Use gkeClusterTarget. Used only for the deprecated beta. A target for the deployment.
     * 
     * @deprecated
     * Optional. Deprecated. Use gkeClusterTarget. Used only for the deprecated beta. A target for the deployment.
     * 
     */
    @Deprecated /* Optional. Deprecated. Use gkeClusterTarget. Used only for the deprecated beta. A target for the deployment. */
    public NamespacedGkeDeploymentTargetResponse namespacedGkeDeploymentTarget() {
        return this.namespacedGkeDeploymentTarget;
    }
    /**
     * @return Optional. GKE node pools where workloads will be scheduled. At least one node pool must be assigned the DEFAULT GkeNodePoolTarget.Role. If a GkeNodePoolTarget is not specified, Dataproc constructs a DEFAULT GkeNodePoolTarget. Each role can be given to only one GkeNodePoolTarget. All node pools must have the same location settings.
     * 
     */
    public List<GkeNodePoolTargetResponse> nodePoolTarget() {
        return this.nodePoolTarget;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GkeClusterConfigResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String gkeClusterTarget;
        private NamespacedGkeDeploymentTargetResponse namespacedGkeDeploymentTarget;
        private List<GkeNodePoolTargetResponse> nodePoolTarget;
        public Builder() {}
        public Builder(GkeClusterConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.gkeClusterTarget = defaults.gkeClusterTarget;
    	      this.namespacedGkeDeploymentTarget = defaults.namespacedGkeDeploymentTarget;
    	      this.nodePoolTarget = defaults.nodePoolTarget;
        }

        @CustomType.Setter
        public Builder gkeClusterTarget(String gkeClusterTarget) {
            this.gkeClusterTarget = Objects.requireNonNull(gkeClusterTarget);
            return this;
        }
        @CustomType.Setter
        public Builder namespacedGkeDeploymentTarget(NamespacedGkeDeploymentTargetResponse namespacedGkeDeploymentTarget) {
            this.namespacedGkeDeploymentTarget = Objects.requireNonNull(namespacedGkeDeploymentTarget);
            return this;
        }
        @CustomType.Setter
        public Builder nodePoolTarget(List<GkeNodePoolTargetResponse> nodePoolTarget) {
            this.nodePoolTarget = Objects.requireNonNull(nodePoolTarget);
            return this;
        }
        public Builder nodePoolTarget(GkeNodePoolTargetResponse... nodePoolTarget) {
            return nodePoolTarget(List.of(nodePoolTarget));
        }
        public GkeClusterConfigResponse build() {
            final var o = new GkeClusterConfigResponse();
            o.gkeClusterTarget = gkeClusterTarget;
            o.namespacedGkeDeploymentTarget = namespacedGkeDeploymentTarget;
            o.nodePoolTarget = nodePoolTarget;
            return o;
        }
    }
}
