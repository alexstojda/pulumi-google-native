// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.googlenative.beyondcorp.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.googlenative.beyondcorp.v1.enums.GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayType;
import java.lang.String;
import java.util.Objects;


/**
 * Gateway represents a user facing component that serves as an entrance to enable connectivity.
 * 
 */
public final class GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayArgs extends com.pulumi.resources.ResourceArgs {

    public static final GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayArgs Empty = new GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayArgs();

    /**
     * AppGateway name in following format: `projects/{project_id}/locations/{location_id}/appgateways/{gateway_id}`
     * 
     */
    @Import(name="appGateway", required=true)
    private Output<String> appGateway;

    /**
     * @return AppGateway name in following format: `projects/{project_id}/locations/{location_id}/appgateways/{gateway_id}`
     * 
     */
    public Output<String> appGateway() {
        return this.appGateway;
    }

    /**
     * The type of hosting used by the gateway.
     * 
     */
    @Import(name="type", required=true)
    private Output<GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayType> type;

    /**
     * @return The type of hosting used by the gateway.
     * 
     */
    public Output<GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayType> type() {
        return this.type;
    }

    private GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayArgs() {}

    private GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayArgs(GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayArgs $) {
        this.appGateway = $.appGateway;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayArgs $;

        public Builder() {
            $ = new GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayArgs();
        }

        public Builder(GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayArgs defaults) {
            $ = new GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param appGateway AppGateway name in following format: `projects/{project_id}/locations/{location_id}/appgateways/{gateway_id}`
         * 
         * @return builder
         * 
         */
        public Builder appGateway(Output<String> appGateway) {
            $.appGateway = appGateway;
            return this;
        }

        /**
         * @param appGateway AppGateway name in following format: `projects/{project_id}/locations/{location_id}/appgateways/{gateway_id}`
         * 
         * @return builder
         * 
         */
        public Builder appGateway(String appGateway) {
            return appGateway(Output.of(appGateway));
        }

        /**
         * @param type The type of hosting used by the gateway.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayType> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of hosting used by the gateway.
         * 
         * @return builder
         * 
         */
        public Builder type(GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayType type) {
            return type(Output.of(type));
        }

        public GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayArgs build() {
            $.appGateway = Objects.requireNonNull($.appGateway, "expected parameter 'appGateway' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
