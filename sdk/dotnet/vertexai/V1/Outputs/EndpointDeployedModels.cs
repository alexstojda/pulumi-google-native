// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.vertexai.V1.Outputs
{

    [OutputType]
    public sealed class EndpointDeployedModels
    {
        /// <summary>
        /// A description of resources that to large degree are decided by Vertex AI, and require only a modest additional configuration.
        /// </summary>
        public readonly Outputs.EndpointDeployedModelsAutomaticResources? AutomaticResources;
        /// <summary>
        /// Output only. Timestamp when the DeployedModel was created.
        /// </summary>
        public readonly string? CreateTime;
        /// <summary>
        /// A description of resources that are dedicated to the DeployedModel, and that need a higher degree of manual configuration.
        /// </summary>
        public readonly Outputs.EndpointDeployedModelsDedicatedResources? DedicatedResources;
        /// <summary>
        /// The display name of the DeployedModel. If not provided upon creation, the Model's display_name is used.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// These logs are like standard server access logs, containing information like timestamp and latency for each prediction request. Note that Stackdriver logs may incur a cost, especially if your project receives prediction requests at a high queries per second rate (QPS). Estimate your costs before enabling this option.
        /// </summary>
        public readonly bool? EnableAccessLogging;
        /// <summary>
        /// The ID of the DeployedModel. If not provided upon deployment, Vertex AI will generate a value for this ID. This value should be 1-10 characters, and valid characters are /[0-9]/.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The name of the Model that this is the deployment of. Note that the Model may be in a different location than the DeployedModel's Endpoint.
        /// </summary>
        public readonly string? Model;
        /// <summary>
        /// Output only. The version ID of the model that is deployed.
        /// </summary>
        public readonly string? ModelVersionId;
        /// <summary>
        /// Output only. Provide paths for users to send predict/explain/health requests directly to the deployed model services running on Cloud via private services access. This field is populated if network is configured.
        /// </summary>
        public readonly Outputs.EndpointDeployedModelsPrivateEndpoints? PrivateEndpoints;
        /// <summary>
        /// The service account that the DeployedModel's container runs as. Specify the email address of the service account. If this service account is not specified, the container runs as a service account that doesn't have access to the resource project. Users deploying the Model must have the `iam.serviceAccounts.actAs` permission on this service account.
        /// </summary>
        public readonly string? ServiceAccount;

        [OutputConstructor]
        private EndpointDeployedModels(
            Outputs.EndpointDeployedModelsAutomaticResources? automaticResources,

            string? createTime,

            Outputs.EndpointDeployedModelsDedicatedResources? dedicatedResources,

            string? displayName,

            bool? enableAccessLogging,

            string? id,

            string? model,

            string? modelVersionId,

            Outputs.EndpointDeployedModelsPrivateEndpoints? privateEndpoints,

            string? serviceAccount)
        {
            AutomaticResources = automaticResources;
            CreateTime = createTime;
            DedicatedResources = dedicatedResources;
            DisplayName = displayName;
            EnableAccessLogging = enableAccessLogging;
            Id = id;
            Model = model;
            ModelVersionId = modelVersionId;
            PrivateEndpoints = privateEndpoints;
            ServiceAccount = serviceAccount;
        }
    }
}
