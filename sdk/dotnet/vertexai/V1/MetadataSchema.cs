// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.vertexai.V1
{
    [GoogleNativeResourceType("google-native:vertexai/v1:MetadataSchema")]
    public partial class MetadataSchema : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Output only. Timestamp when this MetadataSchema was created.
        /// </summary>
        [Output("createTime")]
        public Output<string?> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The location for the resource
        /// </summary>
        [Output("location")]
        public Output<string?> Location { get; private set; } = null!;

        /// <summary>
        /// The metadata store for the resource
        /// </summary>
        [Output("metadataStore")]
        public Output<string?> MetadataStore { get; private set; } = null!;

        /// <summary>
        /// Output only. The resource name of the MetadataSchema.
        /// </summary>
        [Output("name")]
        public Output<string?> Name { get; private set; } = null!;

        /// <summary>
        /// The project for the resource
        /// </summary>
        [Output("project")]
        public Output<string?> Project { get; private set; } = null!;

        /// <summary>
        /// Required. The raw YAML string representation of the MetadataSchema. The combination of [MetadataSchema.version] and the schema name given by `title` in [MetadataSchema.schema] must be unique within a MetadataStore. The schema is defined as an OpenAPI 3.0.2 [MetadataSchema Object](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#schemaObject)
        /// </summary>
        [Output("schema")]
        public Output<string?> Schema { get; private set; } = null!;

        /// <summary>
        /// The type of the MetadataSchema. This is a property that identifies which metadata types will use the MetadataSchema. Possible values: METADATA_SCHEMA_TYPE_UNSPECIFIED, ARTIFACT_TYPE, EXECUTION_TYPE, CONTEXT_TYPE
        /// </summary>
        [Output("schemaType")]
        public Output<Pulumi.GoogleNative.vertexai.V1.MetadataSchemaSchemaTypeEnum?> SchemaType { get; private set; } = null!;

        /// <summary>
        /// The version of the MetadataSchema. The version's format must match the following regular expression: `^[0-9]+.+.+$`, which would allow to order/compare different versions. Example: 1.0.0, 1.0.1, etc.
        /// </summary>
        [Output("schemaVersion")]
        public Output<string?> SchemaVersion { get; private set; } = null!;


        /// <summary>
        /// Create a MetadataSchema resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MetadataSchema(string name, MetadataSchemaArgs args, CustomResourceOptions? options = null)
            : base("google-native:vertexai/v1:MetadataSchema", name, args ?? new MetadataSchemaArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MetadataSchema(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:vertexai/v1:MetadataSchema", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "createTime",
                    "location",
                    "metadataStore",
                    "name",
                    "project",
                    "schema",
                    "schemaType",
                    "schemaVersion",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MetadataSchema resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MetadataSchema Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new MetadataSchema(name, id, options);
        }
    }

    public sealed class MetadataSchemaArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The location for the resource
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// The metadata store for the resource
        /// </summary>
        [Input("metadataStore", required: true)]
        public Input<string> MetadataStore { get; set; } = null!;

        /// <summary>
        /// Output only. The resource name of the MetadataSchema.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The project for the resource
        /// </summary>
        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        /// <summary>
        /// Required. The raw YAML string representation of the MetadataSchema. The combination of [MetadataSchema.version] and the schema name given by `title` in [MetadataSchema.schema] must be unique within a MetadataStore. The schema is defined as an OpenAPI 3.0.2 [MetadataSchema Object](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#schemaObject)
        /// </summary>
        [Input("schema", required: true)]
        public Input<string> Schema { get; set; } = null!;

        /// <summary>
        /// The type of the MetadataSchema. This is a property that identifies which metadata types will use the MetadataSchema. Possible values: METADATA_SCHEMA_TYPE_UNSPECIFIED, ARTIFACT_TYPE, EXECUTION_TYPE, CONTEXT_TYPE
        /// </summary>
        [Input("schemaType", required: true)]
        public Input<Pulumi.GoogleNative.vertexai.V1.MetadataSchemaSchemaTypeEnum> SchemaType { get; set; } = null!;

        /// <summary>
        /// The version of the MetadataSchema. The version's format must match the following regular expression: `^[0-9]+.+.+$`, which would allow to order/compare different versions. Example: 1.0.0, 1.0.1, etc.
        /// </summary>
        [Input("schemaVersion", required: true)]
        public Input<string> SchemaVersion { get; set; } = null!;

        public MetadataSchemaArgs()
        {
        }
        public static new MetadataSchemaArgs Empty => new MetadataSchemaArgs();
    }
}
